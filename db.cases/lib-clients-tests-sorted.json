{
  "org.slf4j:slf4j-api": {
    "apollo": [
      "EndpointInvocationHandlerTest#shouldLogExceptionsWhenReplying",
      "RequestLoggingDecoratorTest#shouldLogSizeInBytesIfPresent",
      "RequestLoggingDecoratorTest#shouldLogRefererIfPresent",
      "RequestLoggingDecoratorTest#shouldLogRequestAndResponseByDefault",
      "RequestLoggingDecoratorTest#shouldLogDashIfNoReply",
      "RequestLoggingDecoratorTest#shouldLogUserAgentIfPresent",
      "AsyncContextOngoingRequestTest#shouldLogWarningOnErrorWritingResponse",
      "CombinedFormatLoggerTest#shouldLogSizeInBytesIfPresent",
      "CombinedFormatLoggerTest#shouldLogRefererIfPresent",
      "CombinedFormatLoggerTest#shouldLogRequestAndResponseByDefault",
      "CombinedFormatLoggerTest#shouldLogDashIfNoReply",
      "CombinedFormatLoggerTest#shouldLogUserAgentIfPresent"
    ],
    "zipkin": [
      "CollectorTest#accept_storageError"
    ],
    "languagetool": [
      "MainTest#testFileWithExternalRule"
    ],
    "shiro": [
      "DefaultPasswordServiceTest#testHashFormatWarned",
      "AbstractAuthenticatorTest#logExceptionAfterDoAuthenticateThrowsNonAuthenticationException"
    ],
    "light-4j": [
      "AuditHandlerTest#shouldAddListenerIfIsStatusCodeIsFalseAndIsResponseTimeIsTrue",
      "AuditHandlerTest#shouldAddListenerIfIsStatusCodeAndIsResponseTimeAreTrue",
      "AuditHandlerTest#shouldAddListenerIfIsStatusCodeIsTrueAndIsResponseTimeIsFalse",
      "AuditHandlerTest#testAuditWithTrace",
      "AuditHandlerTest#testAuditWithoutTrace",
      "AuditHandlerTest#shouldNotAddListenerIfStatusCodeAndResponseTimeAreFalse"
    ],
    "jmxtrans": [
      "Slf4JOutputWriterTest#metricsAreSentToLoggerViaMDC"
    ],
    "spotify-apollo": [
      "EndpointInvocationHandlerTest#shouldLogExceptionsWhenReplying",
      "RequestLoggingDecoratorTest#shouldLogSizeInBytesIfPresent",
      "RequestLoggingDecoratorTest#shouldLogRefererIfPresent",
      "RequestLoggingDecoratorTest#shouldLogRequestAndResponseByDefault",
      "RequestLoggingDecoratorTest#shouldLogDashIfNoReply",
      "RequestLoggingDecoratorTest#shouldLogUserAgentIfPresent",
      "AsyncContextOngoingRequestTest#shouldLogWarningOnErrorWritingResponse",
      "CombinedFormatLoggerTest#shouldLogSizeInBytesIfPresent",
      "CombinedFormatLoggerTest#shouldLogRefererIfPresent",
      "CombinedFormatLoggerTest#shouldLogRequestAndResponseByDefault",
      "CombinedFormatLoggerTest#shouldLogDashIfNoReply",
      "CombinedFormatLoggerTest#shouldLogUserAgentIfPresent"
    ],
    "java-driver": [
      "BasicLoadBalancingPolicyInitTest#should_not_infer_local_dc_if_not_provided",
      "BasicLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_config",
      "BasicLoadBalancingPolicyInitTest#should_include_nodes_from_local_dc_if_local_dc_set",
      "BasicLoadBalancingPolicyInitTest#should_ignore_nodes_from_remote_dcs_if_local_dc_set",
      "BasicLoadBalancingPolicyInitTest#should_not_ignore_nodes_from_remote_dcs_if_local_dc_not_set",
      "BasicLoadBalancingPolicyInitTest#should_warn_if_contact_points_not_in_local_dc",
      "BasicLoadBalancingPolicyInitTest#should_ignore_nodes_excluded_by_filter",
      "BasicLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_context",
      "BasicLoadBalancingPolicyEventsTest#should_remove_removed_node_from_live_set",
      "BasicLoadBalancingPolicyEventsTest#should_set_added_node_to_local",
      "BasicLoadBalancingPolicyEventsTest#should_add_up_node_to_live_set",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_added_node_when_filtered",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_added_node_when_remote_dc",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_up_node_when_remote_dc",
      "BasicLoadBalancingPolicyEventsTest#should_remove_down_node_from_live_set",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_up_node_when_filtered",
      "DefaultLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_config",
      "DefaultLoadBalancingPolicyInitTest#should_ignore_nodes_from_remote_dcs",
      "DefaultLoadBalancingPolicyInitTest#should_require_local_dc_if_explicit_contact_points",
      "DefaultLoadBalancingPolicyInitTest#should_include_nodes_from_local_dc",
      "DefaultLoadBalancingPolicyInitTest#should_infer_local_dc_if_no_explicit_contact_points",
      "DefaultLoadBalancingPolicyInitTest#should_warn_if_contact_points_not_in_local_dc",
      "DefaultLoadBalancingPolicyInitTest#should_ignore_nodes_excluded_by_filter",
      "DefaultLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_context",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_round_robin_and_log_error_when_request_throws",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_key",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_session_keyspace_and_routing_key",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_key_or_token",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_request",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_prioritize_and_shuffle_replicas",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_keyspace",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_absent",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_session",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_prioritize_single_replica",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_token",
      "BasicLoadBalancingPolicyQueryPlanTest#should_round_robin_and_log_error_when_request_throws",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_key",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_session_keyspace_and_routing_key",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_key_or_token",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_request",
      "BasicLoadBalancingPolicyQueryPlanTest#should_prioritize_and_shuffle_replicas",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_keyspace",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_absent",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_session",
      "BasicLoadBalancingPolicyQueryPlanTest#should_prioritize_single_replica",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_token",
      "DcInferringLoadBalancingPolicyEventsTest#should_remove_removed_node_from_live_set",
      "DcInferringLoadBalancingPolicyEventsTest#should_set_added_node_to_local",
      "DcInferringLoadBalancingPolicyEventsTest#should_add_up_node_to_live_set",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_added_node_when_filtered",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_added_node_when_remote_dc",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_up_node_when_remote_dc",
      "DcInferringLoadBalancingPolicyEventsTest#should_remove_down_node_from_live_set",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_up_node_when_filtered",
      "DcInferringLoadBalancingPolicyInitTest#should_infer_local_dc_from_contact_points",
      "DcInferringLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_config",
      "DcInferringLoadBalancingPolicyInitTest#should_ignore_nodes_from_remote_dcs",
      "DcInferringLoadBalancingPolicyInitTest#should_include_nodes_from_local_dc",
      "DcInferringLoadBalancingPolicyInitTest#should_require_local_dc_if_contact_points_from_different_dcs",
      "DcInferringLoadBalancingPolicyInitTest#should_warn_if_contact_points_not_in_local_dc",
      "DcInferringLoadBalancingPolicyInitTest#should_ignore_nodes_excluded_by_filter",
      "DcInferringLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_context",
      "DcInferringLoadBalancingPolicyInitTest#should_require_local_dc_if_contact_points_have_null_dcs",
      "AtomicTimestampGeneratorTest#should_use_clock_if_it_keeps_increasing",
      "AtomicTimestampGeneratorTest#should_warn_if_timestamps_drift",
      "AtomicTimestampGeneratorTest#should_share_timestamps_across_all_threads",
      "AtomicTimestampGeneratorTest#should_increment_if_clock_does_not_increase",
      "AtomicTimestampGeneratorTest#should_go_back_to_clock_if_new_tick_high_enough",
      "NetworkTopologyReplicationStrategyTest#should_abort_early_and_log_when_bad_replication_factor_cannot_be_met",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_round_robin_and_log_error_when_request_throws",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_key",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_session_keyspace_and_routing_key",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_key_or_token",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_request",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_prioritize_and_shuffle_replicas",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_keyspace",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_absent",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_session",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_prioritize_single_replica",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_token",
      "DefaultLoadBalancingPolicyEventsTest#should_remove_removed_node_from_live_set",
      "DefaultLoadBalancingPolicyEventsTest#should_set_added_node_to_local",
      "DefaultLoadBalancingPolicyEventsTest#should_add_up_node_to_live_set",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_added_node_when_filtered",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_added_node_when_remote_dc",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_up_node_when_remote_dc",
      "DefaultLoadBalancingPolicyEventsTest#should_remove_down_node_from_live_set",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_up_node_when_filtered",
      "ThreadLocalTimestampGeneratorTest#should_use_clock_if_it_keeps_increasing",
      "ThreadLocalTimestampGeneratorTest#should_warn_if_timestamps_drift",
      "ThreadLocalTimestampGeneratorTest#should_increment_if_clock_does_not_increase",
      "ThreadLocalTimestampGeneratorTest#should_confine_timestamps_to_thread",
      "ThreadLocalTimestampGeneratorTest#should_go_back_to_clock_if_new_tick_high_enough",
      "ContactPointsTest#should_ignore_malformed_host_and_port_and_warn",
      "ContactPointsTest#should_parse_ipv6_address_and_port_in_configuration",
      "ContactPointsTest#should_warn_if_duplicate_in_configuration",
      "ContactPointsTest#should_parse_ipv4_address_and_port_in_configuration",
      "ContactPointsTest#should_warn_if_duplicate_between_programmatic_and_configuration",
      "ContactPointsTest#should_ignore_malformed_port_and_warn",
      "ContactPointsTest#should_parse_host_and_port_in_configuration_and_create_unresolved",
      "ContactPointsTest#should_merge_programmatic_and_configuration",
      "ContactPointsTest#should_parse_host_and_port_and_resolve_all_a_records",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_present_v2",
      "DefaultTopologyMonitorTest#should_refresh_node_list_from_local_and_peers",
      "DefaultTopologyMonitorTest#should_warn_when_control_host_found_in_system_peers_v2",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_present",
      "DefaultTopologyMonitorTest#should_get_new_node_from_peers",
      "DefaultTopologyMonitorTest#should_warn_when_control_host_found_in_system_peers",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_not_present_V2",
      "DefaultTopologyMonitorTest#should_get_new_node_from_peers_v2",
      "DefaultTopologyMonitorTest#should_stop_executing_queries_once_closed",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_not_present",
      "DefaultTopologyMonitorTest#should_not_refresh_control_node",
      "DefaultTopologyMonitorTest#should_initialize_control_connection"
    ],
    "servicecomb-java-chassis": [
      "TestRestClientInvocation#testSetCseContext_failed",
      "TestVertxMetersInitializer#init",
      "TestServiceRegistryClientImpl#testRegisterSchemaNoResponse",
      "TestServiceRegistryClientImpl#testRegisterSchemaErrorResponse",
      "TestServiceRegistryClientImpl#testRegisterSchemaException",
      "TestServiceRegistryClientImpl#testGetServiceCenterInfoException",
      "TestServiceRegistryClientImpl#testRegisterSchemaSuccess",
      "TestDefaultLogPublisher#onPolledEvent_failed",
      "TestDefaultLogPublisher#onPolledEvent",
      "TestTransportConfigUtils#readVerticleCount_default_bigCpu",
      "TestTransportConfigUtils#readVerticleCount_default_smallCpu",
      "TestTransportConfigUtils#readVerticleCount_old_exist",
      "TestSlowInvocationLogger#consumerSlow",
      "TestSlowInvocationLogger#producerSlow",
      "TestSlowInvocationLogger#edgeSlow",
      "TestInspectorBootListener#enabled",
      "TestInspectorBootListener#diabled",
      "TestClassPathStaticResourceHandler#readContentFailed",
      "TestGroupExecutor#adjustCoreThreads",
      "TestGroupExecutor#maxThreads",
      "TestJvmUtils#findMainClass_invalid",
      "TestMicroservicePaths#testPrintPaths",
      "TestMicroserviceRegisterTask#testLocalSchemaAndServiceCenterSchemaDiff",
      "TestProducerProviderManager#onBootEvent_close_unknown",
      "AccessLogHandlerTest#testHandle",
      "TestInspectorImpl#downloadSchemas_failed"
    ],
    "citrus": [
      "LogbackConfiguratorTests#getConfigurator_autoDiscovery",
      "LogbackConfiguratorTests#configure_wrongContext",
      "LogbackConfiguratorTests#getConfigurator_withName",
      "LogbackConfiguratorTests#configureDefault_debug",
      "LogbackConfiguratorTests#configureDefault_noDebug",
      "LogbackConfiguratorTests#configure_failure",
      "LogbackConfiguratorTests#configure",
      "LogConfiguratorTests#getConfigurators",
      "LogConfiguratorListenerTests#defaultValues",
      "ConfigurableLoggerTests#toString_",
      "ConfigurableLoggerTests#setLogName",
      "ConfigurableLoggerTests#isLevelEnabled",
      "ConfigurableLoggerTests#defaultLogger",
      "ConfigurableLoggerTests#logWithLevel",
      "CheckCsrfTokenValveTests#checkCsrfToken_checkManually",
      "SecurityLoggerTests#toString_",
      "LifecycleLoggerListenerTests#test",
      "Log4jConfiguratorTests#getConfigurator_autoDiscovery",
      "Log4jConfiguratorTests#getConfigurator_withName",
      "Log4jConfiguratorTests#getConfigurator_wrongContext",
      "Log4jConfiguratorTests#configureDefault_debug",
      "Log4jConfiguratorTests#configureDefault_noDebug",
      "Log4jConfiguratorTests#configure",
      "BaseServiceTests#log",
      "VelocityEngineTests#advancedProperties",
      "VelocityEngineTests#defaultSettings",
      "AttributeWhitelistTests#init_",
      "AttributeWhitelistTests#access_sessionModelOnly",
      "AttributeWhitelistTests#read_notExistAttr",
      "AttributeWhitelistTests#readWrite_anyType",
      "AttributeWhitelistTests#readWrite_anyType2",
      "AttributeWhitelistTests#readWrite_specifiedType",
      "AttributeWhitelistTests#readWrite_wrongType",
      "AttributeWhitelistTests#readWrite_primitiveType",
      "AttributeWhitelistTests#readWrite_wrongPrimitiveType",
      "AttributeWhitelistTests#readWrite_nameNotInWhitelist"
    ],
    "FluentLenium": [
      "SeleniumVersionCheckLoggingTest#shouldNotWarnWhenVersionIsCorrect",
      "SeleniumVersionCheckLoggingTest#shouldNotLogWarningWhenParameterSetInParentPom",
      "SeleniumVersionCheckLoggingTest#shouldNotifyWhenSeleniumVersionNotDeclared",
      "SeleniumVersionCheckLoggingTest#shouldWarnAboutWrongSeleniumVersion",
      "ContainerAnnotationsEventsRegistrySuperClassSetupTest#shouldRegisterAnnotationBasedListenersFromSuperClass",
      "SeleniumVersionCheckLoggingTest#shouldNotLogAnythingWhenCorrectVersionIsDeclared"
    ],
    "glowroot": [
      "LoggerTest#testGetLogger"
    ],
    "zt-exec": [
      "ProcessExecutorLoggerTest#testShortName",
      "ProcessExecutorLoggerTest#testClassNameWithShortName",
      "ProcessExecutorLoggerTest#testMyClassName",
      "ProcessExecutorLoggerTest#testFullName"
    ],
    "graphql-spqr": [
      "NonNullTest#testNonNullWithDefaultValueWarning",
      "TypeRegistryTest#nameUniquenessTest",
      "InterceptorTest#exceptionLogInterceptorTest",
      "InterceptorTest#authInterceptorTest",
      "RelayTest#testConflictingConnections"
    ],
    "sonar-java": [
      "SillyEqualsCheckTest#test",
      "SpringComponentWithNonAutowiredMembersCheckTest#default_annotations",
      "SpringComponentWithNonAutowiredMembersCheckTest#custom_annotations",
      "BehaviorCacheTest#log4j_assert",
      "BehaviorCacheTest#guava_preconditions_methods_should_be_handled",
      "BehaviorCacheTest#collections_utils_is_empty_method",
      "BehaviorCacheTest#test_peek",
      "BehaviorCacheTest#method_behavior_cache_should_be_filled_and_cleanup",
      "BehaviorCacheTest#commons_lang3_string_utils_method_should_be_handled",
      "BehaviorCacheTest#java_lang_math_methods_should_be_handled",
      "BehaviorCacheTest#spring_assert",
      "BehaviorCacheTest#apache_lang_validate",
      "BehaviorCacheTest#guava_verify",
      "BehaviorCacheTest#interrupted_exploration_does_not_create_method_yields",
      "BehaviorCacheTest#clear_stack_when_taking_exceptional_path_from_method_invocation",
      "BehaviorCacheTest#commons_lang2_string_utils_method_should_be_handled",
      "BehaviorCacheTest#compute_beahvior_only_once",
      "BehaviorCacheTest#guava_common_Strings",
      "BehaviorCacheTest#test_blacklist",
      "BehaviorCacheTest#eclipse_aspectj_assert",
      "BehaviorCacheTest#explore_method_with_recursive_call",
      "ModulusEqualityCheckTest#test",
      "DefaultPackageCheckTest#test_parsing_error_file",
      "DefaultPackageCheckTest#with_package",
      "DefaultPackageCheckTest#with_module",
      "DefaultPackageCheckTest#without_package",
      "EmptyMethodsCheckTest#test",
      "MapComputeIfAbsentOrPresentCheckTest#test",
      "ArrayForVarArgCheckTest#test",
      "RedundantJumpCheckTest#test",
      "CollectionCallingItselfCheckTest#test",
      "IndexOfWithPositiveNumberCheckTest#test",
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_using_deprecated_it_prop",
      "JaCoCoSensorTest#testSensorDefinition",
      "JaCoCoSensorTest#do_not_save_measure_on_resource_which_doesnt_exist_in_the_context",
      "JaCoCoSensorTest#test_read_execution_data_for_lines_covered_by_tests_v0_7_5_incompatible",
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_using_correct_prop",
      "JaCoCoSensorTest#should_do_nothing_if_output_dir_does_not_exists",
      "JaCoCoSensorTest#log_warning_when_using_default_location",
      "JaCoCoSensorTest#test_read_execution_data_for_lines_covered_by_tests_v0_7_5",
      "JaCoCoSensorTest#do_not_log_warning_when_using_default_location_with_xml",
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_should_merge_reports",
      "JaCoCoSensorTest#should_log_warning_for_force_coverage",
      "JaCoCoSensorTest#no_warning_with_xml_prop_set",
      "JaCoCoSensorTest#log_removal_for_coverage_per_test",
      "JaCoCoSensorTest#logIfInvalidReportPath",
      "JaCoCoSensorTest#should_log_when_class_are_not_matching_with_report",
      "JaCoCoSensorTest#should_execute_if_report_exists",
      "JaCoCoSensorTest#test_read_execution_data_for_lines_covered_by_tests",
      "JaCoCoSensorTest#test_sensor_descriptor",
      "JaCoCoSensorTest#should_log_info_when_both_xml_and_exec_properties_set",
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_using_deprecated_prop",
      "JaCoCoSensorTest#log_skip_processing_only_if_binary_report_found",
      "JaCoCoSensorTest#log_deprecation_for_coverage_per_test",
      "JaCoCoSensorTest#log_skip_processing",
      "JaCoCoSensorTest#should_log_warning_for_deprecated_properties",
      "PrimitiveWrappersInTernaryOperatorCheckTest#test",
      "InvalidDateValuesCheckTest#test",
      "CatchNPECheckTest#test",
      "SMTPSSLServerIdentityCheckTest#test_java_mail_session",
      "SMTPSSLServerIdentityCheckTest#test_no_semantic",
      "SMTPSSLServerIdentityCheckTest#test_apache_email",
      "EnumMapCheckTest#test",
      "PomElementOrderCheckTest#should_raise_issue_if_order_is_wrong",
      "PomElementOrderCheckTest#should_not_raise_issue_if_order_is_correct",
      "PomElementOrderCheckTest#should_raise_issue_with_location_only_between_first_and_last_wrong",
      "StandardInputReadCheckTest#noSemantic",
      "StandardInputReadCheckTest#test",
      "EqualsNotOverriddenInSubclassCheckTest#noSemantic",
      "EqualsNotOverriddenInSubclassCheckTest#test",
      "StandardCharsetsConstantsCheckTest#test",
      "TrailingCommentCheckTest#custom",
      "TrailingCommentCheckTest#detected",
      "ForLoopFalseConditionCheckTest#test",
      "SillyBitOperationCheckTest#test",
      "FinalClassCheckTest#test",
      "SynchronizedClassUsageCheckTest#detected",
      "BadInterfaceNameCheckTest#test",
      "BadInterfaceNameCheckTest#test2",
      "GenericsTest#testUpperBoundedWildCards",
      "GenericsTest#testWildCardWithObjectType",
      "GenericsTest#test_method_resolution_of_parametrized_method_from_parametrized",
      "GenericsTest#test_array_of_generics",
      "GenericsTest#test_method_resolution_for_parametrized_method_with_type_variable_inheritance",
      "GenericsTest#test_method_resolution_with_unchecked_conversions",
      "GenericsTest#test_method_resolution_for_parametrized_method_with_provided_cascading_substitution",
      "GenericsTest#testLowerBoundedWildCards",
      "GenericsTest#test_method_resolution_for_parametrized_method_with_provided_substitution",
      "GenericsTest#test_wildcard_grid",
      "GenericsTest#test_method_resolution_based_on_wildcards",
      "GenericsTest#parametrized_method_resolution_with_bounded_type_variable",
      "GenericsTest#test_method_resolution_based_on_wildcards_with_nested_generics",
      "GenericsTest#test_method_resolution_nested_parametrized_type_with_wildcards",
      "GenericsTest#test_variables_types_parameters_and_wildcards",
      "GenericsTest#test_method_resolution_with_parametrized_methods",
      "GenericsTest#test_method_resolution_with_substitution_in_type_hierarchy",
      "GenericsTest#test_method_resolution_for_parametrized_method_and_nested_Parametrized_types",
      "GenericsTest#test_method_resolution_for_parametrized_method_with_inference_from_call_site",
      "GenericsTest#test_type_hierarchy_with_wildcard_classes",
      "GenericsTest#test_method_resolution",
      "GenericsTest#testParameterizedTypeHierarchy",
      "GenericsTest#testUnboundedWildCards",
      "GenericsTest#test_wildcard_instances",
      "GenericsTest#test_type_hierarchy_directly_between_wildcards_and_other_types",
      "GenericsTest#testTypeHierarchyWithGenericClasses",
      "GenericsTest#test_method_resolution_with_type_substitution",
      "ThrowsSeveralCheckedExceptionCheckTest#test",
      "NonStaticClassInitializerCheckTest#test",
      "ZipEntryCheckTest#noSemantic",
      "ZipEntryCheckTest#test",
      "ErrorClassExtendedCheckTest#detected",
      "ReplaceLambdaByMethodRefCheckTest#no_version",
      "ReplaceLambdaByMethodRefCheckTest#java7",
      "ReplaceLambdaByMethodRefCheckTest#java8",
      "NioFileDeleteCheckTest#no_issue_with_version_6",
      "NioFileDeleteCheckTest#test",
      "MethodTooBigCheckTest#custom_at_4",
      "MethodTooBigCheckTest#custom_at_5",
      "ResolveTest#access_public_class",
      "ResolveTest#access_package_local_class",
      "ResolveTest#access_private_class",
      "ResolveTest#test_isInheritedIn",
      "ResolveTest#test_isSubClass",
      "ResolveTest#access_protected_class",
      "SerializableFieldInSerializableClassCheckTest#test",
      "MethodMatcherTest#test_copy",
      "MethodMatcherTest#detected",
      "DeprecatedHashAlgorithmCheckTest#test",
      "JavaRulesDefinitionTest#test_security_hotspot",
      "JavaRulesDefinitionTest#debug_rules",
      "JavaRulesDefinitionTest#test_security_hotspot_lts",
      "JavaRulesDefinitionTest#rules_definition_should_be_locale_independent",
      "JavaRulesDefinitionTest#test_creation_of_rules",
      "JavaRulesDefinitionTest#test_security_standards_not_set_when_unsupported",
      "JavaRulesDefinitionTest#test_security_standards",
      "SyncGetterAndSetterCheckTest#syncGetterAndSetterCheckTest",
      "Struts1EndpointCheckTest#test",
      "ForLoopCounterChangedCheckTest#test",
      "ConcatenationWithStringValueOfCheckTest#test",
      "UndocumentedApiCheckTest#testExclusion",
      "UndocumentedApiCheckTest#custom",
      "UndocumentedApiCheckTest#testMissingConfiguration",
      "UndocumentedApiCheckTest#test",
      "UndocumentedApiCheckTest#testInvalidDeclaredException",
      "UndocumentedApiCheckTest#no_issue_without_Semantic",
      "UndocumentedApiCheckTest#testIncompleteJavadoc",
      "CallOuterPrivateMethodCheckTest#test",
      "MethodComplexityCheckTest#test",
      "MethodComplexityCheckTest#javaLangPackage",
      "MethodComplexityCheckTest#defaults",
      "ImplementsEnumerationCheckTest#test",
      "JavaVersionImplTest#compatibilityMesssages",
      "JavaVersionImplTest#java_12",
      "JavaVersionImplTest#java_5",
      "JavaVersionImplTest#java_6",
      "JavaVersionImplTest#java_7",
      "JavaVersionImplTest#java_8",
      "JavaVersionImplTest#test_fromString",
      "JavaVersionImplTest#test_toString",
      "JavaVersionImplTest#no_version_set",
      "RelationalSymbolicValueTest#test_conjuction_equal",
      "RelationalSymbolicValueTest#test_transitive_GE",
      "RelationalSymbolicValueTest#test_direct_deduction",
      "RelationalSymbolicValueTest#test_different_operand",
      "RelationalSymbolicValueTest#relationships_transitivity_should_take_known_relationships_into_account",
      "RelationalSymbolicValueTest#test_transitive_deduction",
      "RelationalSymbolicValueTest#test_constraints_are_copied_over_transitive_relations",
      "RelationalSymbolicValueTest#test_to_string",
      "RelationalSymbolicValueTest#test_equality",
      "RelationalSymbolicValueTest#test_constraint_copy",
      "RelationalSymbolicValueTest#test_transitive_constraint_copy",
      "RelationalSymbolicValueTest#test_setting_operands",
      "RelationalSymbolicValueTest#recursion_on_copy_constraint_should_stop",
      "RelationalSymbolicValueTest#test_not_equals_is_not_transitive",
      "RelationalSymbolicValueTest#too_many_relationship_should_stop_se_engine",
      "RelationalSymbolicValueTest#recursion_on_copy_constraint_should_stop_distilled",
      "RelationalSymbolicValueTest#test_all_transitive_relations_are_computed",
      "RelationalSymbolicValueTest#test_constraint_copy_of_not_null_constraint",
      "RelationalSymbolicValueTest#test_transitive_method_equals",
      "RelationalSymbolicValueTest#test_chained_transitivity",
      "RelationalSymbolicValueTest#test_equals_hashCode",
      "RelationalSymbolicValueTest#test_same_operand",
      "RelationalSymbolicValueTest#test_normalization",
      "RelationalSymbolicValueTest#test_constraint_copy_of_sv_with_no_constraints_is_symmetric",
      "ReturnEmptyArrayNotNullCheckTest#noIssueWithoutSemantic",
      "ReturnEmptyArrayNotNullCheckTest#test",
      "ExportsDirectiveTreeImplTest#simple_exports",
      "ExportsDirectiveTreeImplTest#test_BaseTreeVisitor",
      "ExportsDirectiveTreeImplTest#exports_with_modules",
      "IssuableSubscriptionVisitorTest#test_custom_rules_report_issues",
      "PublicStaticMutableMembersCheckTest#test",
      "StaticMemberAccessCheckTest#test",
      "RegexHotspotCheckTest#test",
      "LambdaOptionalParenthesisCheckTest#no_version",
      "LambdaOptionalParenthesisCheckTest#java8",
      "RightCurlyBraceDifferentLineAsNextBlockCheckTest#detected",
      "DeprecatedPomPropertiesCheckTest#pom",
      "DeprecatedPomPropertiesCheckTest#not_a_pom",
      "HiddenFieldCheckTest#test",
      "DateFormatWeekYearCheckTest#test",
      "IfConditionAlwaysTrueOrFalseCheckTest#test",
      "HttpRefererCheckTest#test",
      "SynchronizationOnGetClassCheckTest#test",
      "CompareToNotOverloadedCheckTest#test",
      "LongBitsToDoubleOnIntCheckTest#test",
      "TypeInferenceSolverTest#inferTypeSubstitution_missing_varargs",
      "TypeInferenceSolverTest#typeSubstitution_with_varargs_and_generics",
      "TypeInferenceSolverTest#inferTypeSubstitution_varargs_and_generics",
      "TypeInferenceSolverTest#inferTypeSubstitution_varargs",
      "TypeInferenceSolverTest#inferTypeSubstitution_always_return_first_type_match",
      "VisitorsBridgeForTestsTest#test_report_with_analysis_message",
      "VisitorsBridgeForTestsTest#test_semantic_disabled",
      "WriteObjectTheOnlySynchronizedMethodCheckTest#test",
      "PreferStreamAnyMatchCheckTest#test",
      "SwitchWithTooManyCasesCheckTest#defaultValue",
      "SwitchWithTooManyCasesCheckTest#test",
      "RandomFloatToIntCheckTest#test",
      "NoSonarCheckTest#test",
      "ExplodedGraphWalkerTest#xproc_usage_of_method_behaviors_with_explicit_exceptional_path",
      "ExplodedGraphWalkerTest#test_cleanup_state",
      "ExplodedGraphWalkerTest#read_jetbrains_nullness_annotations",
      "ExplodedGraphWalkerTest#exception_catched_in_loop",
      "ExplodedGraphWalkerTest#test_limited_loop_execution",
      "ExplodedGraphWalkerTest#system_exit",
      "ExplodedGraphWalkerTest#test_max_number_starting_states_boundaries",
      "ExplodedGraphWalkerTest#xproc_usage_of_method_behaviors",
      "ExplodedGraphWalkerTest#different_exceptions_lead_to_different_program_states_with_catch_exception_block",
      "ExplodedGraphWalkerTest#test_maximum_number_nested_states",
      "ExplodedGraphWalkerTest#androidx_nullness_annotations",
      "ExplodedGraphWalkerTest#xproc_reporting_with_var_args",
      "ExplodedGraphWalkerTest#simple_assignment_should_preserve_value_on_stack",
      "ExplodedGraphWalkerTest#test_enqueueing_of_catch_blocks",
      "ExplodedGraphWalkerTest#seEngineTest",
      "ExplodedGraphWalkerTest#reproducer",
      "ExplodedGraphWalkerTest#xproc_usage_of_exceptional_path_and_branching",
      "ExplodedGraphWalkerTest#use_false_branch_on_loop_when_reaching_max_exec_program_point",
      "ExplodedGraphWalkerTest#test_maximum_steps_reached",
      "ExplodedGraphWalkerTest#xproc_usage_of_exceptional_path_and_branching_with_reporting",
      "ExplodedGraphWalkerTest#compound_assignment_should_create_new_value_on_stack",
      "ExplodedGraphWalkerTest#test_this_super_not_null",
      "ExplodedGraphWalkerTest#test_maximum_steps_reached_with_issue",
      "ExplodedGraphWalkerTest#private_method_should_be_visited",
      "ExplodedGraphWalkerTest#read_parametersAreNonnullByDefault_and_parametersAreNullableByDefault_annotations",
      "ExplodedGraphWalkerTest#xproc_keep_yield_for_reporting",
      "ExplodedGraphWalkerTest#test_max_number_starting_states",
      "ExplodedGraphWalkerTest#binary_expression_creates_not_null_value",
      "ExplodedGraphWalkerTest#constraints_on_fields",
      "ExplodedGraphWalkerTest#methods_should_be_evaluated_only_once",
      "ExplodedGraphWalkerTest#test_propagation_of_bytecode_analysis_failure",
      "ExplodedGraphWalkerTest#constraints_on_field_reset",
      "ExplodedGraphWalkerTest#xproc_usage_of_method_behaviors_with_explicit_exceptional_path_and_branching",
      "BytecodeCFGBuilderTest#label_goto_successors",
      "BytecodeCFGBuilderTest#test_class_not_found_logs",
      "BytecodeCFGBuilderTest#test_all_instructions_are_part_of_CFG",
      "BytecodeCFGBuilderTest#last_block_is_ends_with_GOTO",
      "BytecodeCFGBuilderTest#try_catch_finally_with_multiplePaths_in_try",
      "BytecodeCFGBuilderTest#try_catch_finally",
      "BytecodeCFGBuilderTest#test",
      "BytecodeCFGBuilderTest#supportJSRandRET",
      "BytecodeCFGBuilderTest#isNotBlank_goto_followed_by_label",
      "PasswordEncoderCheckTest#test",
      "ThreadSleepInTestsCheckTest#test",
      "PrintStackTraceCalledWithoutArgumentCheckTest#test",
      "StringToPrimitiveConversionCheckTest#test",
      "SpringBeansShouldBeAccessibleCheckTest#testComponentScan",
      "SpringBeansShouldBeAccessibleCheckTest#testSpringBootApplication",
      "CallSuperMethodFromInnerClassCheckTest#test",
      "EqualsNotOverridenWithCompareToCheckTest#test",
      "CompareToReturnValueCheckTest#test",
      "ReceivingIntentsCheckTest#test",
      "LDAPAuthenticatedConnectionCheckTest#test",
      "DoubleCheckedLockingAssignmentCheckTest#test",
      "SpecializedFunctionalInterfacesCheckTest#test",
      "UseSwitchExpressionCheckTest#test_no_issue_without_semantic",
      "UseSwitchExpressionCheckTest#test",
      "UseSwitchExpressionCheckTest#test_no_issue_on_java11",
      "ObjectFinalizeOverridenNotPublicCheckTest#test",
      "ExternalizableClassConstructorCheckTest#test",
      "ExternalizableClassConstructorCheckTest#no_semantic",
      "HappyPathYieldTest#test_hashCode",
      "HappyPathYieldTest#test_equals",
      "HappyPathYieldTest#test_toString",
      "DisallowedDependenciesCheckTest#with_range_version",
      "DisallowedDependenciesCheckTest#without_version",
      "DisallowedDependenciesCheckTest#with_simple_version",
      "DisallowedDependenciesCheckTest#should_fail_with_invalid_name_provided",
      "DisallowedDependenciesCheckTest#should_fail_with_invalid_version_provided",
      "JunitMethodDeclarationCheckTest#test",
      "JavaFilesCacheTest#resource_file_mapping",
      "PrintfFailCheckTest#test",
      "CheckerDispatcherTest#test_only_one_execution_of_post_statement_by_check",
      "TwoLocksWaitCheckTest#test",
      "ForLoopIncrementAndUpdateCheckTest#test",
      "CognitiveComplexityMethodCheckTest#testBasicCalculations",
      "SubClassStaticReferenceCheckTest#detected",
      "SubClassStaticReferenceCheckTest#no_issue_without_semantic",
      "GarbageCollectorCalledCheckTest#test",
      "ValueBasedObjectUsedForLockCheckTest#no_issue_if_not_java8",
      "ValueBasedObjectUsedForLockCheckTest#test",
      "ActionNumberCheckTest#struts_config_with_too_many_forwards_custom",
      "ActionNumberCheckTest#struts_config_with_too_many_forwards",
      "ActionNumberCheckTest#not_a_struts_config_xml",
      "IntegerToHexStringCheckTest#test",
      "IntegerToHexStringCheckTest#test_no_semantic",
      "IndexOfStartPositionCheckTest#test",
      "ThreadSleepCheckTest#test",
      "PrivateReadResolveCheckTest#private_read_resolve_check_no_semantic",
      "PrivateReadResolveCheckTest#private_read_resolve_check_test",
      "MethodNamedHashcodeOrEqualCheckTest#test",
      "InterfaceAsConstantContainerCheckTest#test",
      "InstanceOfAlwaysTrueCheckTest#test",
      "SpringScanDefaultPackageCheckTest#test",
      "NullCheckWithInstanceofCheckTest#test",
      "NullCheckWithInstanceofCheckTest#test_no_semantic",
      "RightCurlyBraceSameLineAsNextBlockCheckTest#detected",
      "TransientFieldInNonSerializableCheckTest#test",
      "LambdaBlockReturnVisitorTest#test",
      "SECheckTest#flow_from_exit_node_should_not_lead_to_infinite_recursion",
      "TodoTagPresenceCheckTest#test",
      "CORSCheckTest#test",
      "BooleanLiteralCheckTest#detected",
      "FieldModifierCheckTest#test",
      "StringMethodsOnSingleCharCheckTest#test",
      "CompareToResultTestCheckTest#test",
      "CollectionIsEmptyCheckTest#test",
      "ConstantTest#constant",
      "DefaultInitializedFieldCheckTest#test",
      "AbstractMethodDetectionTest#withoutParameter",
      "AbstractMethodDetectionTest#detected",
      "AbstractMethodDetectionTest#withAnyParameters",
      "MethodBehaviorTest#method_behavior_handling_finally",
      "MethodBehaviorTest#anonymous_classes_used_as_exception_should_be_resolved_to_supertype",
      "MethodBehaviorTest#method_behavior_yields",
      "MethodBehaviorTest#method_behavior_signature",
      "BlindSerialVersionUidCheckTest#test",
      "TrustManagerCertificateCheckTest#test",
      "TrustManagerCertificateCheckTest#test_no_semantic",
      "ThisExposedFromConstructorCheckTest#test",
      "IndentationCheckTest#detected_custom_level",
      "IndentationCheckTest#detected_default_indentation_level",
      "IndentationCheckTest#assume_tab_is_indentation_level",
      "LombokFilterTest#test",
      "ConstantUtilsTest#memberSelect",
      "ConstantUtilsTest#uncompilable_expressions",
      "ConstantUtilsTest#plus",
      "ConstantUtilsTest#other",
      "ConstantUtilsTest#parentheses",
      "ConstantUtilsTest#literals",
      "ConstantUtilsTest#identifiers",
      "HostnameVerifierImplementationCheckTest#test",
      "ObjectFinalizeOverridenCheckTest#test",
      "SwitchWithLabelsCheckTest#test",
      "LazyArgEvaluationCheckTest#test",
      "ProtectedMemberInFinalClassCheckTest#test",
      "ThreadLocalCleanupCheckTest#test",
      "MethodMatcherFactoryTest#inner_classes",
      "MethodMatcherFactoryTest#methodFactoryMatching",
      "MethodMatcherFactoryTest#constructorFactoryMatching",
      "SynchronizationOnStringOrBoxedCheckTest#test",
      "LiteralUtilsTest#isFalse_withNonBooleanLiteral_returnsFalse",
      "LiteralUtilsTest#isTrue_withNonBooleanLiteral_returnsFalse",
      "LiteralUtilsTest#isTrue_withExpectedValue_returnsTrue",
      "LiteralUtilsTest#hasValue_withOtherValue_returnsFalse",
      "LiteralUtilsTest#hasValue_withExpectedValue_returnsTrue",
      "LiteralUtilsTest#isTrue_withFalseValue_returnsFalse",
      "LiteralUtilsTest#isFalse_withTrueValue_returnsFalse",
      "LiteralUtilsTest#hasValue_withNonStringLiteral_returnsFalse",
      "LiteralUtilsTest#testLargeBinary",
      "LiteralUtilsTest#isFalse_withExpectedValue_returnsTrue",
      "LiteralUtilsTest#is_0xff",
      "LDAPDeserializationCheckTest#test",
      "BadLocalConstantNameCheckTest#noIssueWithoutSemantic",
      "BadLocalConstantNameCheckTest#test",
      "BadLocalConstantNameCheckTest#otherPattern",
      "NullDereferenceCheckTest#chained_method_invocation_issue_order",
      "NullDereferenceCheckTest#reporting_test",
      "NullDereferenceCheckTest#ruling",
      "NullDereferenceCheckTest#test_npe_transitive",
      "NullDereferenceCheckTest#test",
      "NullDereferenceCheckTest#objectsMethodsTest",
      "NullDereferenceCheckTest#null_array_access",
      "NullDereferenceCheckTest#test_deferred_reporting",
      "NullDereferenceCheckTest#invocation_leading_to_NPE",
      "AndroidBroadcastingCheckTest#test",
      "ReadObjectSynchronizedCheckTest#test",
      "StaticFieldInitializationCheckTest#test",
      "ArraysAsListOfPrimitiveToStreamCheckTest#test",
      "IndentationAfterConditionalCheckTest#test",
      "UsesDirectiveTreeImplTest#simple_uses",
      "UsesDirectiveTreeImplTest#test_BaseTreeVisitor",
      "BooleanLiteralInAssertionsCheckTest#test",
      "UnusedThrowableCheckTest#test",
      "AvoidDESCheckTest#test",
      "RedundantTypeCastCheckTest#test",
      "VarArgCheckTest#test",
      "GettersSettersOnRightFieldCheckTest#test",
      "ToStringUsingBoxingCheckTest#test",
      "SymmetricEqualsCheckTest#test",
      "FilesExistsJDK8CheckTest#unknown_version",
      "FilesExistsJDK8CheckTest#java7",
      "FilesExistsJDK8CheckTest#java8",
      "IterableIteratorCheckTest#test",
      "JdbcDriverExplicitLoadingCheckTest#unknownVersion",
      "JdbcDriverExplicitLoadingCheckTest#java5",
      "JdbcDriverExplicitLoadingCheckTest#java6",
      "TernaryOperatorCheckTest#test",
      "CallToFileDeleteOnExitMethodCheckTest#test",
      "IdenticalOperandOnBinaryExpressionCheckTest#test",
      "JaCoCoReportMergerTest#merge_different_format_should_fail",
      "JaCoCoReportMergerTest#merge_same_format_should_not_fail",
      "ProgramPointTest#test_to_string_method",
      "WeakSSLContextCheckTest#test",
      "DateAndTimesCheckTest#test",
      "DefaultInterceptorsLocationCheckTest#not_an_ejb_jar",
      "DefaultInterceptorsLocationCheckTest#interceptors_in_ejb_jar",
      "DefaultInterceptorsLocationCheckTest#interceptors_not_in_ejb_jar",
      "CollectionMethodsWithLinearComplexityCheckTest#test",
      "SunPackagesUsedCheckTest#detected",
      "SunPackagesUsedCheckTest#check_with_exclusion",
      "UnderscoreMisplacedOnNumberCheckTest#test_java_6",
      "UnderscoreMisplacedOnNumberCheckTest#test",
      "TypeAndReferenceSolverTest#postfix_op",
      "TypeAndReferenceSolverTest#conditional_expression",
      "TypeAndReferenceSolverTest#parametrized_method_return_type_is_array",
      "TypeAndReferenceSolverTest#visit_other",
      "TypeAndReferenceSolverTest#annotation_inside_type",
      "TypeAndReferenceSolverTest#prefix_op",
      "TypeAndReferenceSolverTest#primary_this",
      "TypeAndReferenceSolverTest#primary_void",
      "TypeAndReferenceSolverTest#relational_expression",
      "TypeAndReferenceSolverTest#primary_new",
      "TypeAndReferenceSolverTest#conditional_and_expression",
      "TypeAndReferenceSolverTest#parametrized_method_return_type_is_multidimensionnal_array",
      "TypeAndReferenceSolverTest#shift_expression",
      "TypeAndReferenceSolverTest#wildcard_type_tree_have_a_widlcard_type",
      "TypeAndReferenceSolverTest#primary_par_expression",
      "TypeAndReferenceSolverTest#primary_literal",
      "TypeAndReferenceSolverTest#parametrized_constructor",
      "TypeAndReferenceSolverTest#and_expression",
      "TypeAndReferenceSolverTest#primary_super",
      "TypeAndReferenceSolverTest#multiplicative_and_additive_expression",
      "TypeAndReferenceSolverTest#conditional_or_expression",
      "TypeAndReferenceSolverTest#type_cast",
      "TypeAndReferenceSolverTest#primary_basic_type",
      "TypeAndReferenceSolverTest#inclusive_or_expression",
      "TypeAndReferenceSolverTest#annotation_completion",
      "TypeAndReferenceSolverTest#lambda_expression",
      "TypeAndReferenceSolverTest#annotation_on_type",
      "TypeAndReferenceSolverTest#identifier_of_variable_symbol",
      "TypeAndReferenceSolverTest#exclusive_or_expression",
      "TypeAndReferenceSolverTest#selector",
      "TypeAndReferenceSolverTest#annotation_on_method",
      "TypeAndReferenceSolverTest#unary_operator",
      "TypeAndReferenceSolverTest#annotation_on_variable",
      "TypeAndReferenceSolverTest#equality_expression",
      "TypeAndReferenceSolverTest#assignment_expression",
      "TypeAndReferenceSolverTest#primary_qualified_identifier",
      "TypeAndReferenceSolverTest#switch_expression",
      "TypeAndReferenceSolverTest#annotation_on_method_parameter",
      "ThrowsFromFinallyCheckTest#test",
      "ArrayDesignatorAfterTypeCheckTest#test",
      "CompareObjectWithEqualsCheckTest#detected",
      "CompareObjectWithEqualsCheckTest#no_issue_without_semantic",
      "MeasurerTest#verify_methods_metric",
      "MeasurerTest#verify_ncloc_metric",
      "MeasurerTest#verify_class_metric",
      "MeasurerTest#verify_comments_metric",
      "MeasurerTest#verify_function_metric",
      "MeasurerTest#verify_statements_metric",
      "MeasurerTest#verify_complexity_metric",
      "MeasurerTest#verify_cognitive_complexity_metric",
      "ClassVariableVisibilityCheckTest#test",
      "AnonymousClassesTooBigCheckTest#custom",
      "AnonymousClassesTooBigCheckTest#detected",
      "BadConstantNameCheckTest#test",
      "BadConstantNameCheckTest#test2",
      "BadConstantNameCheckTest#no_semantic",
      "AbstractClassNoFieldShouldBeInterfaceCheckTest#test_no_version",
      "AbstractClassNoFieldShouldBeInterfaceCheckTest#test_with_java_7",
      "AbstractClassNoFieldShouldBeInterfaceCheckTest#test_with_java_8",
      "AbstractClassNoFieldShouldBeInterfaceCheckTest#test_with_java_9",
      "RepeatAnnotationCheckTest#unknown_version",
      "RepeatAnnotationCheckTest#java7",
      "RepeatAnnotationCheckTest#java8",
      "ClassNamedLikeExceptionCheckTest#test",
      "ArrayDesignatorOnVariableCheckTest#test",
      "RequiresDirectiveTreeImplTest#transitive_as_name_with_static",
      "RequiresDirectiveTreeImplTest#requires",
      "RequiresDirectiveTreeImplTest#test_BaseTreeVisitor",
      "RequiresDirectiveTreeImplTest#transitive_as_name",
      "RSAUsesOAEPCheckTest#test",
      "ConfusingOverloadCheckTest#test",
      "LoggedRethrownExceptionsCheckTest#test",
      "BooleanMethodNameCheckTest#test_no_issue_without_semantic",
      "BooleanMethodNameCheckTest#test",
      "TooManyMethodsCheckTest#only_public",
      "TooManyMethodsCheckTest#test",
      "RedundantCloseCheckTest#noIssueWithoutSemantic",
      "RedundantCloseCheckTest#test",
      "UnderscoreOnNumberCheckTest#test_java_6",
      "UnderscoreOnNumberCheckTest#test",
      "MultilineBlocksCurlyBracesCheckTest#test",
      "ControllerWithSessionAttributesCheckTest#test",
      "ScheduledThreadPoolExecutorZeroCheckTest#test",
      "InputStreamReadCheckTest#no_issues_without_semantic",
      "InputStreamReadCheckTest#test",
      "SerialVersionUidCheckTest#test",
      "BooleanMethodReturnCheckTest#test",
      "BadMethodNameCheckTest#testOverrideWithoutAnnotation",
      "BadMethodNameCheckTest#test",
      "BadMethodNameCheckTest#test2",
      "UnnecessarySemicolonCheckTest#test",
      "DataEncryptionCheckTest#test",
      "MethodNamedEqualsCheckTest#test",
      "PreparedStatementAndResultSetCheckTest#test",
      "CryptographicKeySizeCheckTest#test_Blowfish",
      "CryptographicKeySizeCheckTest#test_RSA",
      "CryptographicKeySizeCheckTest#test_no_semantic",
      "GetRequestedSessionIdCheckTest#test",
      "ConditionalOnNewLineCheckTest#test",
      "ValueBasedObjectsShouldNotBeSerializedCheckTest#test",
      "ExpressionComplexityCheckTest#custom",
      "ExpressionComplexityCheckTest#detected",
      "NestedBlocksCheckTest#test",
      "NullShouldNotBeUsedWithOptionalCheckTest#test",
      "IncrementDecrementInSubExpressionCheckTest#test",
      "CombineCatchCheckTest#java_version_set",
      "CombineCatchCheckTest#java_version_unset",
      "AnnotationDefaultArgumentCheckTest#test",
      "FormNameDuplicationCheckTest#web_xml_without_filter",
      "OutputStreamOverrideWriteCheckTest#test",
      "MethodYieldTest#test_yield_equality",
      "MethodYieldTest#native_methods_behavior_should_not_be_used",
      "MethodYieldTest#flow_is_empty_when_yield_has_no_node",
      "MethodYieldTest#calling_varargs_method_with_no_arg",
      "MethodYieldTest#constraints_on_varargs",
      "MethodYieldTest#test_creation_of_states",
      "MethodYieldTest#yields_are_not_generated_by_check",
      "MethodYieldTest#flow_should_fail_if_no_parameters_are_passed",
      "MethodYieldTest#test_yield_on_reassignments",
      "MethodYieldTest#test_creation_of_flows",
      "MethodYieldTest#catch_class_cast_exception",
      "BadClassNameCheckTest#test",
      "BadClassNameCheckTest#test2",
      "StaticFieldUpateCheckTest#detected",
      "DependencyWithSystemScopeCheckTest#test",
      "ImmediatelyReturnedVariableCheckTest#test",
      "EnumEqualCheckTest#test",
      "SocketUsageCheckTest#noSemantic",
      "SocketUsageCheckTest#test",
      "MethodJavaSymbolTest#test_unknowns",
      "MethodJavaSymbolTest#test_throws",
      "MethodJavaSymbolTest#test",
      "MethodJavaSymbolTest#test_signature",
      "MethodJavaSymbolTest#test_is_overridable",
      "InterruptedExceptionCheckTest#test",
      "StaticMembersAccessCheckTest#test",
      "AssertionInThreadRunCheckTest#test",
      "RequestMappingMethodPublicCheckTest#test",
      "SpringConstructorInjectionCheckTest#test",
      "InnerClassOfNonSerializableCheckTest#test",
      "ReturnOfBooleanExpressionsCheckTest#test",
      "SAMAnnotatedCheckTest#no_issue_with_java_7",
      "SAMAnnotatedCheckTest#all_issues_with_java_8",
      "SAMAnnotatedCheckTest#no_issue_with_no_java_version",
      "ThreadOverridesRunCheckTest#detected",
      "PrimitivesMarkedNullableCheckTest#noSemantic",
      "PrimitivesMarkedNullableCheckTest#test",
      "IteratorNextExceptionCheckTest#test",
      "SerializableSuperConstructorCheckTest#test",
      "LeastSpecificTypeCheckTest#test",
      "LeastSpecificTypeCheckTest#no_semantic",
      "AssertOnBooleanVariableCheckTest#test",
      "ClassCouplingCheckTest#custom",
      "ClassCouplingCheckTest#detected",
      "ClassComplexityCheckTest#test",
      "ClassComplexityCheckTest#defaults",
      "CipherBlockChainingCheckTest#test",
      "CipherBlockChainingCheckTest#test_no_semantic",
      "StrutsTest#measures_on_project",
      "SynchronizedLockCheckTest#test",
      "OpensDirectiveTreeImplTest#opens_with_modules",
      "OpensDirectiveTreeImplTest#simple_opens",
      "OpensDirectiveTreeImplTest#test_BaseTreeVisitor",
      "DebugMethodYieldsCheckTest#test_max_steps",
      "DebugMethodYieldsCheckTest#test",
      "BadTestMethodNameCheckTest#test_with_customPattern",
      "BadTestMethodNameCheckTest#test",
      "ModifiersOrderCheckTest#test",
      "SymbolTableTest#infer_fully_lambda_types",
      "SymbolTableTest#interface_cycle",
      "SymbolTableTest#double_lambda_type_propagation",
      "SymbolTableTest#infer_method_invocation_return_type",
      "SymbolTableTest#fieldType_in_parameterized_hierarchy",
      "SymbolTableTest#extended_type_variables",
      "SymbolTableTest#target_type_of_cast_expression",
      "SymbolTableTest#parameterized_innerclass_constructor_resolution",
      "SymbolTableTest#return_type_of_map_method",
      "SymbolTableTest#lookup_method_on_defered_type",
      "SymbolTableTest#annotations_on_fields",
      "SymbolTableTest#anonymousClassWithDiamondOperator",
      "SymbolTableTest#getClass_return_type",
      "SymbolTableTest#most_specific_generic_method",
      "SymbolTableTest#java8_ambiguous_method_invocations_as_for_JEP302",
      "SymbolTableTest#most_specific_method_when_signature_is_equivalent",
      "SymbolTableTest#try_with_resources",
      "SymbolTableTest#conditional_expression_in_lambda",
      "SymbolTableTest#parameterized_method_type",
      "SymbolTableTest#annotation_usages",
      "SymbolTableTest#resolution_of_method_ref",
      "SymbolTableTest#type_accessibility",
      "SymbolTableTest#functionTypes_should_respect_JLS_in_regard_to_wildcards",
      "SymbolTableTest#resolve_return_type_after_inference",
      "SymbolTableTest#lambda_on_sam_interface_defining_object_methods",
      "SymbolTableTest#constructorWithTypeArguments",
      "SymbolTableTest#conditional_operator_expression_type",
      "SymbolTableTest#type_inference_recursion",
      "SymbolTableTest#return_type_inference",
      "SymbolTableTest#constructor_resolution",
      "SymbolTableTest#symbolNotFound",
      "SymbolTableTest#recursive_type_substitution",
      "SymbolTableTest#wildcard_invocation_inference",
      "SymbolTableTest#defered_type_wrongly_resolve_methods",
      "SymbolTableTest#switch_cases",
      "SymbolTableTest#enum_protected_constructor_should_not_be_resolved",
      "SymbolTableTest#inference_on_parameterized_method_with_no_arg",
      "SymbolTableTest#infer_from_type_variable_bounds",
      "SymbolTableTest#infer_stream_types_on_chained_map",
      "SymbolTableTest#infer_method_invocation_return_type_on_chained_parameterized_methods",
      "SymbolTableTest#switch_statement",
      "SymbolTableTest#generic_method_call",
      "JacocoSensorJava9Test#test_jacoco_java9_coverage",
      "SurefireUtilsTest#return_default_value_if_property_unset",
      "SurefireUtilsTest#should_get_report_paths_from_property",
      "NoTestInTestClassCheckTest#testEnclosed",
      "NoTestInTestClassCheckTest#test",
      "NoTestInTestClassCheckTest#noClasspath",
      "AnyRuleIssueFilterTest#invalid_tree_does_not_exclude_lines",
      "AnyRuleIssueFilterTest#issues_from_any_rules_are_accepted",
      "AnyRuleIssueFilterTest#any_rule_filter_does_not_requires_rules",
      "AnyRuleIssueFilterTest#issue_on_other_component_are_ignored",
      "DisallowedMethodCheckTest#empty_method_name",
      "DisallowedMethodCheckTest#all_overloads",
      "DisallowedMethodCheckTest#empty_parameters",
      "DisallowedMethodCheckTest#detected",
      "DisallowedMethodCheckTest#empty_type_definition",
      "AESAlgorithmCheckTest#test",
      "BaseTreeVisitorIssueFilterTest#issues_from_other_component_are_accepted",
      "BaseTreeVisitorIssueFilterTest#issues_from_non_targeted_rules_are_accepted",
      "BaseTreeVisitorIssueFilterTest#issues_by_targeted_rule_should_be_filtered",
      "BaseTreeVisitorIssueFilterTest#excluded_lines_by_rule_never_returns_null",
      "BaseTreeVisitorIssueFilterTest#excluded_lines_are_correct",
      "UselessParenthesesCheckTest#test",
      "HasNextCallingNextCheckTest#test",
      "ClassTreeImplTest#getLine",
      "ClassTreeImplTest#at_token",
      "LeftCurlyBraceEndLineCheckTest#detected",
      "KeySetInsteadOfEntrySetCheckTest#test",
      "ParameterNullnessCheckTest#test",
      "DatabaseSchemaUpdateCheckTest#test",
      "DatabaseSchemaUpdateCheckTest#no_issue",
      "EnvVariablesHotspotCheckTest#test",
      "LoopsOnSameSetCheckTest#test",
      "MembersDifferOnlyByCapitalizationCheckTest#test",
      "JacksonDeserializationCheckTest#test",
      "JacksonDeserializationCheckTest#test_no_semantic",
      "SpringAntMatcherOrderCheckTest#test",
      "DateUtilsTruncateCheckTest#unknown_version",
      "DateUtilsTruncateCheckTest#java7",
      "DateUtilsTruncateCheckTest#java8",
      "GeneratedCodeFilterTest#test",
      "SillyStringOperationsCheckTest#test",
      "LoggerClassCheckTest#test",
      "IgnoredReturnValueCheckTest#test",
      "SecurityConstraintsInWebXmlCheckTest#not_a_web_xml",
      "SecurityConstraintsInWebXmlCheckTest#web_xml_without_constraints",
      "SecurityConstraintsInWebXmlCheckTest#web_xml_with_constraints",
      "MethodIdenticalImplementationsCheckTest#noIssueWithoutSemantic",
      "MethodIdenticalImplementationsCheckTest#test",
      "NonShortCircuitLogicCheckTest#test",
      "TooManyParametersCheckTest#custom",
      "TooManyParametersCheckTest#test",
      "TooManyParametersCheckTest#no_semantic",
      "StaticFieldUpdateInConstructorCheckTest#test",
      "StaticFieldUpdateInConstructorCheckTest#no_issue_without_semantic",
      "AccessibilityChangeCheckTest#test",
      "JavaSquidSensorTest#feedbackShouldNotBeFedIfNotSonarCloudHost",
      "JavaSquidSensorTest#test_issues_creation_on_test_file",
      "JavaSquidSensorTest#verify_analysis_errors_are_collected_on_parse_error",
      "JavaSquidSensorTest#test_toString",
      "JavaSquidSensorTest#feedbackShouldNotBeFedIfNoErrors",
      "JavaSquidSensorTest#test_issues_creation_on_main_file",
      "RedundantAbstractMethodCheckTest#test",
      "EmptyClassCheckTest#test",
      "ClassWithOnlyStaticMethodsInstantiationCheckTest#test",
      "FieldNameMatchingTypeNameCheckTest#test",
      "ModuleDeclarationTreeImplTest#no_module",
      "ModuleDeclarationTreeImplTest#with_module",
      "ModuleDeclarationTreeImplTest#test_BaseTreeVisitor",
      "ReplaceGuavaWithJava8CheckTest#java8",
      "ReturnInFinallyCheckTest#test",
      "SimpleClassNameCheckTest#test_without_semantic",
      "SimpleClassNameCheckTest#test",
      "SimpleClassNameCheckTest#test_file_with_wildcard_import",
      "NoPmdTagPresenceCheckTest#test",
      "OptionalAsParameterCheckTest#test",
      "CollectionImplementationReferencedCheckTest#test",
      "UselessIncrementCheckTest#test",
      "RunFinalizersCheckTest#noSemantic",
      "RunFinalizersCheckTest#test",
      "ServletMethodsExceptionsThrownCheckTest#test",
      "CompareStringsBoxedTypesWithEqualsCheckTest#detected",
      "CompareStringsBoxedTypesWithEqualsCheckTest#no_issue_without_semantic",
      "StringLiteralInsideEqualsCheckTest#test",
      "SpringRequestMappingMethodCheckTest#test",
      "MethodLookupTest#lookup_method_from_superclass",
      "MethodLookupTest#lookup_should_contain_throws_declaration",
      "NestedIfStatementsCheckTest#custom",
      "NestedIfStatementsCheckTest#detected",
      "CatchRethrowingCheckTest#test",
      "WaitInWhileLoopCheckTest#test",
      "CFGTest#throw_statement_within_try_catch",
      "CFGTest#exception_raised_in_catch",
      "CFGTest#build_partial_cfg_with_continue",
      "CFGTest#catch_thrown_in_exception",
      "CFGTest#returnCascadedOr",
      "CFGTest#connect_catch_blocks_with_unknown_exception_types2",
      "CFGTest#assignement_order_of_evaluation",
      "CFGTest#array_access_expression",
      "CFGTest#catch_error",
      "CFGTest#break_in_try_and_complex_finally_within_while",
      "CFGTest#break_in_try_finally",
      "CFGTest#connect_catch_blocks_with_unknown_exception_types",
      "CFGTest#empty_cfg",
      "CFGTest#method_reference",
      "CFGTest#break_on_label",
      "CFGTest#if_then_elseif",
      "CFGTest#break_in_nested_catch",
      "CFGTest#array_loop",
      "CFGTest#break_in_try_finally_within_for",
      "CFGTest#exit_block_for_finally_with_if_statement",
      "CFGTest#catch_block_correctly_flagged_in_CFG",
      "CFGTest#do_while_loop_with_break",
      "CFGTest#successor_of_labeled_break_statement",
      "CFGTest#return_statement",
      "CFGTest#prefix_operators",
      "CFGTest#build_partial_cfg_with_break",
      "CFGTest#try_statement_with_checked_exceptions",
      "CFGTest#multiple_constructions",
      "CFGTest#simplest_cfg",
      "CFGTest#conditionalAND",
      "CFGTest#switch_expression_with_fallthrough",
      "CFGTest#compound_assignment_member_select",
      "CFGTest#switch_expression_without_fallthrough",
      "CFGTest#while_loop_with_continue",
      "CFGTest#break_in_try_finally_in_for_without_condition",
      "CFGTest#constructor_arguments_order",
      "CFGTest#try_with_resource",
      "CFGTest#continue_on_label",
      "CFGTest#compound_assignment",
      "CFGTest#complex_boolean_expression",
      "CFGTest#foreach_loop_continue",
      "CFGTest#break_in_try_finally_within_loop_do_not_always_lead_to_exit",
      "CFGTest#switch_statement_without_default",
      "CFGTest#catching_class_cast_exception",
      "CFGTest#try_statement",
      "CFGTest#continue_in_try_finally_within_while",
      "CFGTest#continue_in_try_finally",
      "CFGTest#switch_statement_with_piledUpCases_againstDefault",
      "CFGTest#try_statement_with_runtime_exceptions",
      "CFGTest#array_dim_initializer_order",
      "CFGTest#if_then_else",
      "CFGTest#nested_try_finally",
      "CFGTest#do_while_loop",
      "CFGTest#do_while_loop_with_continue",
      "CFGTest#straight_method_calls",
      "CFGTest#test_chained_method_invocation",
      "CFGTest#catch_throwable",
      "CFGTest#while_loop_with_break",
      "CFGTest#single_declaration",
      "CFGTest#try_with_resource_java9",
      "CFGTest#array_loop_with_break",
      "CFGTest#try_statement_with_CFG_blocks",
      "CFGTest#synchronized_statement",
      "CFGTest#ternary_operator",
      "CFGTest#conditionalOR",
      "CFGTest#break_without_finally",
      "CFGTest#break_in_try_finally_within_while",
      "CFGTest#if_then",
      "CFGTest#throw_statement",
      "CFGTest#while_loop",
      "CFGTest#returnCascadedAnd",
      "CFGTest#assignmentAND",
      "CFGTest#foreach_loop",
      "CFGTest#switch_statement_without_fallthrough",
      "CFGTest#switch_statement",
      "CFGTest#assert_statement",
      "CFGTest#array_loop_with_continue",
      "EqualsOverridenWithHashCodeCheckTest#test",
      "MethodInvocationTreeImplTest#first_token_with_type_arguments",
      "MethodInvocationTreeImplTest#first_token",
      "MethodInvocationTreeImplTest#symbol_should_be_set",
      "ForLoopTerminationConditionCheckTest#test",
      "CookieHttpOnlyCheckTest#test",
      "InterceptorExclusionsCheckTest#ejb_jar",
      "InterceptorExclusionsCheckTest#not_an_ejb_jar",
      "CaseInsensitiveComparisonCheckTest#test",
      "AnnotationArgumentOrderCheckTest#test",
      "TooManyStatementsPerLineCheckTest#test",
      "AssertionArgumentOrderCheckTest#test_JUnit5",
      "AssertionArgumentOrderCheckTest#test",
      "ThreadWaitCallCheckTest#test",
      "DynamicClassLoadCheckTest#test",
      "ConstantMathCheckTest#test",
      "NotifyCheckTest#test",
      "ThreadStartedInConstructorCheckTest#test",
      "InstanceofUsedOnExceptionCheckTest#test",
      "ProvidesDirectiveTreeImplTest#test_BaseTreeVisitor",
      "ProvidesDirectiveTreeImplTest#provides_with_modules",
      "URLHashCodeAndEqualsCheckTest#test",
      "MethodReferenceResolutionTest#method_reference_constructor_inference",
      "MethodReferenceResolutionTest#method_references_type_defered_should_not_raise_npe",
      "MethodReferenceResolutionTest#method_reference_as_variable_initializer",
      "XmlExternalEntityProcessingCheckTest#test",
      "JavaAstScannerTest#should_report_analysis_error_in_sonarLint_context_withSQ_6_0",
      "JavaAstScannerTest#should_interrupt_analysis_when_InterruptedIOException_is_thrown",
      "JavaAstScannerTest#should_not_fail_whole_analysis_upon_parse_error_and_notify_audit_listeners",
      "JavaAstScannerTest#noSonarLines",
      "JavaAstScannerTest#should_swallow_log_and_report_checks_exceptions_for_symbolic_execution",
      "JavaAstScannerTest#comments",
      "JavaAstScannerTest#should_interrupt_analysis_when_InterruptedException_is_thrown",
      "JavaAstScannerTest#should_handle_analysis_cancellation",
      "JavaAstScannerTest#should_swallow_log_and_report_checks_exceptions",
      "JavaAstScannerTest#should_propagate_SOError",
      "JavaAstScannerTest#scan_single_file_with_dumb_file_should_fail",
      "MagicNumberCheckTest#detectedWithAuthorizedNumberSpaces",
      "MagicNumberCheckTest#detected",
      "MagicNumberCheckTest#detectedWithTwoAuthorized",
      "RightCurlyBraceStartLineCheckTest#test",
      "DoubleBraceInitializationCheckTest#test",
      "ObjectOutputStreamCheckTest#test",
      "EmailHotspotCheckTest#test",
      "UtilityClassWithPublicConstructorCheckTest#test",
      "DeadStoreCheckTest#java_lang_no_sema_no_failure",
      "DeadStoreCheckTest#test",
      "EnumMutableFieldCheckTest#test",
      "TabCharacterCheckTest#test",
      "TabCharacterCheckTest#test2",
      "MethodParametersOrderCheckTest#test",
      "MethodJavaTypeTest#to_string_on_type",
      "MethodJavaTypeTest#thrown_types",
      "MethodJavaTypeTest#methodJavaType_arg_types",
      "MethodJavaTypeTest#methodJavaType_return_type",
      "ConditionAlwaysTrueOrFalseCheckTest#reporting_getting_wrong_parent",
      "ConditionAlwaysTrueOrFalseCheckTest#test_constraint_is_not_lost_after_copying",
      "ConditionAlwaysTrueOrFalseCheckTest#test_binary_expressions_always_not_null",
      "ConditionAlwaysTrueOrFalseCheckTest#reporting",
      "ConditionAlwaysTrueOrFalseCheckTest#test_transitivity",
      "ConditionAlwaysTrueOrFalseCheckTest#whole_stack_required_for_ps_equality",
      "ConditionAlwaysTrueOrFalseCheckTest#test",
      "ConditionAlwaysTrueOrFalseCheckTest#test_unreachable_vs_gratuitous",
      "ConditionAlwaysTrueOrFalseCheckTest#condition_always_true_with_optional",
      "ConditionAlwaysTrueOrFalseCheckTest#resetFields_ThreadSleepCalls",
      "ConditionAlwaysTrueOrFalseCheckTest#test_without_jsr305",
      "DoubleCheckedLockingCheckTest#test",
      "CallSuperInTestCaseCheckTest#test",
      "IdenticalCasesInSwitchCheckTest#test",
      "MathOnFloatCheckTest#test",
      "StringOffsetMethodsCheckTest#test",
      "JavaSquidTest#semantic_errors_should_be_reported_to_sonarlint",
      "JavaSquidTest#parsing_errors_should_be_reported_to_sonarlint",
      "JavaSquidTest#number_of_visitors_in_sonarLint_context_LTS",
      "JavaSquidTest#verify_analysis_errors_are_collected_on_parse_error",
      "JavaSquidTest#verify_analysis_errors_are_collected_on_semantic_error",
      "SpringIncompatibleTransactionalCheckTest#test",
      "MethodTreeUtilsTest#is_hashcode_method",
      "MethodTreeUtilsTest#is_equals_method",
      "MethodTreeUtilsTest#is_main_method",
      "CustomUnclosedResourcesCheckTest#check_status_is_different_instance",
      "CustomUnclosedResourcesCheckTest#openedClosed",
      "CustomUnclosedResourcesCheckTest#openedClosedAny",
      "CustomUnclosedResourcesCheckTest#factoryClosedAny",
      "CustomUnclosedResourcesCheckTest#factoryClosed",
      "CustomUnclosedResourcesCheckTest#constructorClosedAny",
      "CustomUnclosedResourcesCheckTest#constructorClosed",
      "CommentRegularExpressionCheckTest#should_not_fail_with_empty_regular_expression",
      "CommentRegularExpressionCheckTest#test",
      "CommentRegularExpressionCheckTest#bad_regex",
      "JavaTestClasspathTest#no_interaction_with_FileSystem_at_initialization",
      "JavaTestClasspathTest#empty_libraries",
      "JavaTestClasspathTest#libraries_should_accept_path_ending_with_wildcard",
      "JavaTestClasspathTest#libraries_without_dir",
      "JavaTestClasspathTest#empty_libraries_if_only_main_files",
      "PopulateBeansCheckTest#test",
      "MainInServletCheckTest#test",
      "IfElseIfStatementEndsWithElseCheckTest#test",
      "CollectionInappropriateCallsCheckTest#test",
      "BooleanInversionCheckTest#test",
      "ConstructorInjectionCheckTest#test",
      "VolatileNonPrimitiveFieldCheckTest#test",
      "SerializableComparatorCheckTest#test",
      "IgnoredStreamReturnValueCheckTest#test",
      "SpringSecurityDisableCSRFCheckTest#test",
      "NestedTernaryOperatorsCheckTest#detected",
      "JavaClasspathTest#no_interaction_with_FileSystem_at_initialization",
      "JavaClasspathTest#parent_module_should_not_validate_sonar_libraries",
      "JavaClasspathTest#absolute_aar_file_name_should_be_resolved",
      "JavaClasspathTest#libraries_should_accept_relative_paths_with_wildcard",
      "JavaClasspathTest#directory_specified_for_library_should_find_jars",
      "JavaClasspathTest#setting_binary_dir_prop_should_fill_elements",
      "JavaClasspathTest#properties",
      "JavaClasspathTest#libraries_should_accept_relative_paths",
      "JavaClasspathTest#libraries_should_accept_path_ending_with_wildcard_jar",
      "JavaClasspathTest#setting_binary_prop_should_fill_elements",
      "JavaClasspathTest#libraries_should_accept_path_ending_with_wildcard",
      "JavaClasspathTest#classpath_empty_if_only_test_files",
      "JavaClasspathTest#libraries_should_keep_order",
      "JavaClasspathTest#register_warning_for_missing_bytecode_when_libraries_empty_and_have_java_sources",
      "JavaClasspathTest#both_path_separator_should_be_supported_on_one_JVM",
      "JavaClasspathTest#non_existing_resources_should_fail",
      "JavaClasspathTest#do_not_register_warning_for_missing_bytecode_when_wrapper_not_injected",
      "JavaClasspathTest#should_not_scan_target_classes",
      "JavaClasspathTest#sonar_binaries_should_not_check_for_existence_of_files_when_no_sources",
      "JavaClasspathTest#directory_wildcard_should_be_resolved",
      "JavaClasspathTest#invalid_sonar_java_binaries_should_fail_analysis",
      "JavaClasspathTest#empty_binaries_on_project_with_more_than_one_source_should_fail",
      "JavaClasspathTest#wildcard_directory_should_resolve_libs_in_that_dir",
      "JavaClasspathTest#when_property_not_defined_project_classpath_null_getElements_should_be_empty",
      "JavaClasspathTest#setting_library_prop_should_fill_elements",
      "JavaClasspathTest#empty_binaries_on_project_with_more_than_one_source_should_fail_on_sonarqube",
      "JavaClasspathTest#validate_libraries_only_if_not_filtered_out",
      "JavaClasspathTest#empty_binaries_on_project_with_more_than_one_source_should_not_fail_on_sonarlint",
      "JavaClasspathTest#libraries_should_read_dir_of_class_files",
      "JavaClasspathTest#deprecated_properties_set_should_fail_the_analysis",
      "JavaClasspathTest#absolute_file_name_should_be_resolved",
      "PrimitiveTypeBoxingWithToStringCheckTest#test",
      "TransactionalMethodVisibilityCheckTest#test",
      "TransactionalMethodVisibilityCheckTest#test_wo_semantic",
      "StandardFunctionalInterfaceCheckTest#test",
      "ToStringReturningNullCheckTest#test",
      "ArtifactIdNamingConventionCheckTest#invalid_regex",
      "ArtifactIdNamingConventionCheckTest#test_custom",
      "ArtifactIdNamingConventionCheckTest#test_default",
      "ArtifactIdNamingConventionCheckTest#not_a_pom",
      "BasicAuthCheckTest#test",
      "StringBufferAndBuilderWithCharCheckTest#test",
      "StaticMethodCheckTest#test",
      "CheckListTest#test",
      "CheckListTest#enforce_CheckList_registration",
      "EmptyBlockCheckTest#test",
      "SelfAssignementCheckTest#test",
      "SecureXmlTransformerCheckTest#test",
      "SystemExitCalledCheckTest#detected",
      "RedundantModifierCheckTest#test",
      "DisallowedClassCheckTest#checkRegex",
      "DisallowedClassCheckTest#check",
      "DisallowedClassCheckTest#checkBadRegex",
      "DisallowedClassCheckTest#check_annotation",
      "SonarComponentsTest#base_and_work_directories",
      "SonarComponentsTest#fail_on_empty_location",
      "SonarComponentsTest#test_sonar_components",
      "SonarComponentsTest#readFileContentFromInputFile",
      "DisallowedThreadGroupCheckTest#test",
      "DisallowedThreadGroupCheckTest#no_issue_without_semantic",
      "CatchUsesExceptionWithContextCheckTest#detected",
      "GroupIdNamingConventionCheckTest#invalid_regex",
      "GroupIdNamingConventionCheckTest#test_custom",
      "GroupIdNamingConventionCheckTest#test_default",
      "GroupIdNamingConventionCheckTest#not_a_pom",
      "VolatileVariablesOperationsCheckTest#test",
      "VolatileVariablesOperationsCheckTest#test_noSemantic",
      "ExceptionsShouldBeImmutableCheckTest#test",
      "PackageInfoCheckTest#with_package_info",
      "PackageInfoCheckTest#no_package_info",
      "MissingNewLineAtEndOfFileCheckTest#test",
      "MissingNewLineAtEndOfFileCheckTest#test2",
      "MissingNewLineAtEndOfFileCheckTest#test3",
      "IncorrectOrderOfMembersCheckTest#test",
      "OctalValuesCheckTest#test",
      "AssertsOnParametersOfPublicMethodCheckTest#test",
      "SQLInjectionCheckTest#test",
      "ConstructorCallingOverridableCheckTest#test",
      "JaCoCoExtensionsTest#testExtensions",
      "NoCheckstyleTagPresenceCheckTest#test",
      "AssignmentInSubExpressionCheckTest#detected",
      "EnumSetCheckTest#test",
      "AnonymousClassShouldBeLambdaCheckTest#unknown_version",
      "AnonymousClassShouldBeLambdaCheckTest#java7",
      "AnonymousClassShouldBeLambdaCheckTest#java8",
      "CloneableImplementingCloneCheckTest#test",
      "ControllingPermissionsCheckTest#test",
      "ControllingPermissionsCheckTest#no_issue_without_semantic",
      "LambdaSingleExpressionCheckTest#java_8",
      "LambdaSingleExpressionCheckTest#no_version",
      "EqualsOnAtomicClassCheckTest#test",
      "NestedSwitchStatementCheckTest#test",
      "EmptyFileCheckTest#test_parsing_error_file",
      "EmptyFileCheckTest#with_package",
      "EmptyFileCheckTest#with_module",
      "EmptyFileCheckTest#test_non_empty_file",
      "EmptyFileCheckTest#test_empty_file",
      "StringConcatenationInLoopCheckTest#test",
      "SwitchLastCaseIsDefaultCheckTest#test",
      "DebugFeatureEnabledCheckTest#test",
      "MissingDeprecatedCheckTest#test",
      "MissingDeprecatedCheckTest#test_java9",
      "CommentedOutCodeLineCheckTest#test",
      "NestedEnumStaticCheckTest#test",
      "KeywordAsIdentifierCheckTest#test",
      "AssertionFailInCatchBlockCheckTest#test",
      "JavaCheckVerifierTest#verify_should_fail_when_using_incorrect_shift",
      "JavaCheckVerifierTest#verify_with_default_test_jar",
      "JavaCheckVerifierTest#verify_superfluous_flows",
      "JavaCheckVerifierTest#verify_should_fail_when_using_incorrect_attribute",
      "JavaCheckVerifierTest#verify_should_fail_when_using_incorrect_attribute2",
      "JavaCheckVerifierTest#verify_two_flows_with_same_lines_wrong_msg",
      "JavaCheckVerifierTest#verify_with_provided_classes",
      "JavaCheckVerifierTest#verify_should_fail_when_using_incorrect_secondaryLocation2",
      "JavaCheckVerifierTest#verify_should_fail_when_using_incorrect_endLine",
      "JavaCheckVerifierTest#verify_two_flows_with_same_lines",
      "JavaCheckVerifierTest#verify_missing_expected_issue",
      "JavaCheckVerifierTest#verify_flows",
      "JavaCheckVerifierTest#verify_no_issue",
      "JavaCheckVerifierTest#verify_issue_on_file_incorrect",
      "JavaCheckVerifierTest#verify_combined_missing_expected_and_unexpected_issues",
      "JavaCheckVerifierTest#verify_flow_messages",
      "JavaCheckVerifierTest#verify_flow_locations",
      "JavaCheckVerifierTest#verify_flow_messages_explicit_order",
      "JavaCheckVerifierTest#verify_should_fail_when_using_incorrect_secondaryLocation",
      "JavaCheckVerifierTest#verify_issue_on_file",
      "JavaCheckVerifierTest#verify_no_issue_fail_if_noncompliant",
      "JavaCheckVerifierTest#verify_flow_messages_implicit_order",
      "JavaCheckVerifierTest#verify_unexpected_flows",
      "JavaCheckVerifierTest#verify_unexpected_issue",
      "JavaCheckVerifierTest#verify_with_provided_test_jar",
      "JavaCheckVerifierTest#verify_line_issues",
      "JavaCheckVerifierTest#verify_fail_when_same_explicit_order_is_provided",
      "JavaCheckVerifierTest#verify_missing_flows",
      "JavaCheckVerifierTest#verify_fail_when_mixing_explicit_and_implicit_order",
      "EqualsParametersMarkedNonNullCheckTest#detected",
      "DataHashingCheckTest#test",
      "CommandLineArgumentsCheckTest#noSemantic",
      "CommandLineArgumentsCheckTest#test",
      "ClassFieldCountCheckTest#enums_interfaces_and_anonymous_trees",
      "ClassFieldCountCheckTest#simple_case",
      "ClassFieldCountCheckTest#count_only_public_fields",
      "ClassFieldCountCheckTest#static_final",
      "ChildClassShadowFieldCheckTest#test",
      "UnusedTestRuleCheckTest#test_JUnit5",
      "UnusedTestRuleCheckTest#test",
      "UnusedTestRuleCheckTest#test_no_issues_without_semantic",
      "SpringComponentWithWrongScopeCheckTest#test",
      "OverwrittenKeyCheckTest#test",
      "OverwrittenKeyCheckTest#test_no_semantic",
      "ObjectFinalizeOverloadedCheckTest#test",
      "DeprecatedTagPresenceCheckTest#test",
      "ConstantMethodCheckTest#test",
      "InappropriateRegexpCheckTest#test",
      "SynchronizedOverrideCheckTest#test",
      "SynchronizedOverrideCheckTest#no_semantic",
      "OptionalGetBeforeIsPresentCheckTest#test",
      "OptionalGetBeforeIsPresentCheckTest#invocation_leading_to_NoSuchElementException",
      "ArrayHashCodeAndToStringCheckTest#test",
      "SwitchCaseWithoutBreakCheckTest#test",
      "NoWayOutLoopCheckTest#test",
      "FileHeaderCheckTest#test",
      "FileHeaderCheckTest#regex",
      "OneDeclarationPerLineCheckTest#test",
      "ObjectCreatedOnlyToCallGetClassCheckTest#test",
      "SymbolsTest#primitive_type_from_descriptor",
      "SymbolsTest#builtin_types",
      "SymbolsTest#array_class",
      "SymbolsTest#root_package",
      "AssertionsWithoutMessageCheckTest#test",
      "DITCheckTest#defaults",
      "DITCheckTest#intermediate_match",
      "DITCheckTest#max_level_is_2_and_filtered",
      "DITCheckTest#max_level_is_2",
      "CollapsibleIfCandidateCheckTest#detected",
      "LogConfigurationCheckTest#test",
      "JavaPluginTest#sonarqube_6_7_extensions",
      "JavaPluginTest#use_AnalysisWarningsWrapper_before_SQ_7_4_and_sonarlint",
      "JavaPluginTest#sonarqube_7_2_extensions",
      "JavaPluginTest#sonarqube_7_4_extensions",
      "RedundantAssignmentsCheckTest#test",
      "TypeSubstitutionSolverTest#getSubstitutionFromTypeParams_does_not_provide_substitution_if_arity_of_params_is_not_matching",
      "TypeSubstitutionSolverTest#test_no_infinite_recursion_on_validation",
      "TypeSubstitutionSolverTest#substitutionFromSuperType_with_2_level_inheritance",
      "TypeSubstitutionSolverTest#type_hierarchy_visit_should_be_limited",
      "TypeSubstitutionSolverTest#compute_function_types",
      "TypeSubstitutionSolverTest#inference_on_parameters_supertypes",
      "TypeSubstitutionSolverTest#substitutionFromSuperType_complex_inheritance_and_multiple_variables",
      "TypeSubstitutionSolverTest#substitutionFromSuperType_concrete_type",
      "TypeSubstitutionSolverTest#applySubstitution_on_simple_types",
      "TypeSubstitutionSolverTest#applySubstitution_on_array_with_generic",
      "TypeSubstitutionSolverTest#substitute_thrown_types",
      "TypeSubstitutionSolverTest#substitutionFromSuperType_with_multiple_variables",
      "TypeSubstitutionSolverTest#substitutionFromSuperType_from_same_type",
      "TypeSubstitutionSolverTest#applySubstitution_on_list_of_parameters_has_no_effect_with_empty_substitution",
      "TypeSubstitutionSolverTest#getSubstitutionFromTypeParams_provide_substitution",
      "TypeSubstitutionSolverTest#substitutionFromSuperType_direct_inheritance",
      "TypeSubstitutionSolverTest#applySubstitution_on_empty_list_of_parameters_has_no_effect",
      "TypeSubstitutionSolverTest#substitutionFromSuperType_from_non_related_types_does_nothing",
      "TypeSubstitutionSolverTest#applySubstitution_on_nested_parametrized_types",
      "Struts2EndpointCheckTest#test",
      "ThreadAsRunnableArgumentCheckTest#test",
      "MissingBeanValidationCheckTest#test",
      "ParameterReassignedToCheckTest#test",
      "InnerClassOfSerializableCheckTest#test",
      "AbstractClassWithoutAbstractMethodCheckTest#detected",
      "SecureCookieCheckTest#test",
      "PredictableSeedCheckTest#test",
      "EscapedUnicodeCharactersCheckTest#test",
      "RedundantStreamCollectCheckTest#test",
      "CloneOverrideCheckTest#test",
      "FileLinesVisitorTest#executable_lines_should_be_counted",
      "FileLinesVisitorTest#lines_of_code_data",
      "MutableMembersUsageCheckTest#test",
      "DivisionByZeroCheckTest#invocation_leading_to_ArithmeticException",
      "DivisionByZeroCheckTest#test",
      "DuplicateArgumentCheckTest#test",
      "SpringConfigurationWithAutowiredFieldsCheckTest#test",
      "MinMaxRangeCheckTest#test",
      "MinMaxRangeCheckTest#test_without_corresponding_bytecode",
      "ExceptionalYieldTest#exceptional_yields_void_method",
      "ExceptionalYieldTest#test_hashCode",
      "ExceptionalYieldTest#test_equals",
      "ExceptionalYieldTest#exceptional_yields",
      "ExceptionalYieldTest#test_toString",
      "UnusedTypeParameterCheckTest#test",
      "JavaPropertiesHelperTest#null_if_variable_not_initialized",
      "JavaPropertiesHelperTest#null_if_not_identifier_or_method_invocation",
      "JavaPropertiesHelperTest#retrieve_default_value_on_method_invocation",
      "JavaPropertiesHelperTest#null_if_not_get_property",
      "JavaPropertiesHelperTest#retrieve_default_value_on_identifier",
      "JavaPropertiesHelperTest#null_if_variable_used_more_than_once",
      "JavaPropertiesHelperTest#null_if_variable_not_initilialized_method_invocation",
      "JavaPropertiesHelperTest#null_if_unknown_symbol",
      "JavaPropertiesHelperTest#null_if_get_property_without_default_value",
      "UppercaseSuffixesCheckTest#test",
      "UppercaseSuffixesCheckTest#test_only_long",
      "MainMethodThrowsExceptionCheckTest#test",
      "SwitchCaseTooBigCheckTest#custom",
      "SwitchCaseTooBigCheckTest#limit",
      "SwitchCaseTooBigCheckTest#detected",
      "ChangeMethodContractCheckTest#test",
      "ChangeMethodContractCheckTest#test_no_semantic",
      "UselessExtendsCheckTest#noSemantic",
      "UselessExtendsCheckTest#test",
      "ObjectDeserializationCheckTest#test",
      "ObjectDeserializationCheckTest#test_no_semantic",
      "WildcardReturnParameterTypeCheckTest#test",
      "MethodOnlyCallsSuperCheckTest#test",
      "MethodOnlyCallsSuperCheckTest#no_issue_without_semantic",
      "NullCipherCheckTest#test",
      "EmptyStatementUsageCheckTest#test",
      "TreeTokenCompletenessTest#test",
      "UnusedPrivateClassCheckTest#test",
      "DiamondOperatorCheckTest#test_no_version",
      "DiamondOperatorCheckTest#test_with_java_7",
      "DiamondOperatorCheckTest#test_with_java_8",
      "DefaultJavaFileScannerContextTest#add_issue_with_file",
      "DefaultJavaFileScannerContextTest#get_file_content",
      "DefaultJavaFileScannerContextTest#report_issue_on_tree_with_secondary",
      "DefaultJavaFileScannerContextTest#add_issue_no_file_with_cost",
      "DefaultJavaFileScannerContextTest#add_issue_on_project",
      "DefaultJavaFileScannerContextTest#get_semantic_model",
      "DefaultJavaFileScannerContextTest#report_issue_on_tree_with_no_secondary",
      "DefaultJavaFileScannerContextTest#get_file_parsed",
      "DefaultJavaFileScannerContextTest#report_issue_on_tree",
      "DefaultJavaFileScannerContextTest#report_issue_on_tree_with_cross_file_scanner_throws",
      "DefaultJavaFileScannerContextTest#report_issue_between_two_trees",
      "DefaultJavaFileScannerContextTest#add_issue_no_file",
      "DefaultJavaFileScannerContextTest#report_issue_on_tree_with_cost",
      "DefaultJavaFileScannerContextTest#get_java_version",
      "DefaultJavaFileScannerContextTest#get_complexity_nodes",
      "DefaultJavaFileScannerContextTest#add_issue_on_file",
      "DefaultJavaFileScannerContextTest#report_issue_with_message",
      "DefaultJavaFileScannerContextTest#working_directory",
      "DefaultJavaFileScannerContextTest#get_file_lines",
      "DefaultJavaFileScannerContextTest#get_file_key",
      "DefaultJavaFileScannerContextTest#get_file",
      "DefaultJavaFileScannerContextTest#get_tree",
      "StaticImportCountCheckTest#cu_with_custom_threshold_noncompliant",
      "StaticImportCountCheckTest#cu_with_just_static_imports",
      "StaticImportCountCheckTest#static_imports_below_threshold_are_compliant",
      "StaticImportCountCheckTest#cu_with_normal_and_static_imports",
      "StaticImportCountCheckTest#cu_with_custom_threshold_compliant",
      "StringCallsBeyondBoundsCheckTest#test",
      "SonarSymbolTableVisitorTest#sonar_symbol_table",
      "SuspiciousListRemoveCheckTest#test",
      "HardcodedURICheckTest#test",
      "LoopExecutingAtMostOnceCheckTest#test",
      "LambdaTypeParameterCheckTest#test",
      "UnusedPrivateFieldCheckTest#test",
      "UnusedPrivateFieldCheckTest#no_issue_without_semantic",
      "UnusedPrivateFieldCheckTest#testNative",
      "UselessImportCheckTest#detected_without_package",
      "UselessImportCheckTest#detected_with_package",
      "UselessImportCheckTest#with_module",
      "UselessImportCheckTest#no_semantic",
      "CatchIllegalMonitorStateExceptionCheckTest#test",
      "ToArrayCheckTest#test",
      "PublicStaticFieldShouldBeFinalCheckTest#test",
      "BadTestClassNameCheckTest#test_with_customPattern",
      "BadTestClassNameCheckTest#test",
      "DoublePrefixOperatorCheckTest#test",
      "EmptyDatabasePasswordCheckTest#test",
      "UnusedMethodParameterCheckTest#test",
      "MissingCurlyBracesCheckTest#test",
      "XmlDeserializationCheckTest#test",
      "XmlDeserializationCheckTest#test_no_semantic",
      "AssertionsInTestsCheckTest#testWithEmptyCustomAssertionMethods",
      "AssertionsInTestsCheckTest#test",
      "AssertionsInTestsCheckTest#testNoIssuesWithout",
      "FixmeTagPresenceCheckTest#test",
      "NestedTryCatchCheckTest#test",
      "RawByteBitwiseOperationsCheckTest#test",
      "ExceptionalCheckBasedYieldTest#exceptionType_cannot_be_changed",
      "ExceptionalCheckBasedYieldTest#exceptionType_is_required",
      "ExceptionalCheckBasedYieldTest#test_equals",
      "ExceptionalCheckBasedYieldTest#test_toString",
      "ExceptionalCheckBasedYieldTest#creation_of_new_yield",
      "VariableDeclarationScopeCheckTest#test",
      "ForLoopUsedAsWhileLoopCheckTest#test",
      "CatchExceptionCheckTest#test",
      "FlowComputationTest#test_unary_sv_operands",
      "FlowComputationTest#xproc_flow_messages_constraint_is_VS_can_be",
      "FlowComputationTest#test_multiple_paths",
      "FlowComputationTest#test_method_invocations_without_flows",
      "FlowComputationTest#test_messages_on_method_invocation",
      "FlowComputationTest#test_multiple_paths_xproc",
      "FlowComputationTest#test",
      "FlowComputationTest#xproc_flow_messages",
      "FlowComputationTest#test_location_should_not_be_created_on_null_tree",
      "FlowComputationTest#test_flows_with_single_msg_not_reported",
      "FlowComputationTest#test_getArgumentIdentifier",
      "FlowComputationTest#test_flow_messages_on_parameter_declaration",
      "FlowComputationTest#test_flow_messages_on_branch",
      "FlowComputationTest#test_exception_flows",
      "FlowComputationTest#test_relational_sv_operands",
      "FlowComputationTest#test_trigger_yield_flow_computation_only_on_relevant_yields",
      "FlowComputationTest#avoid_visiting_equivalent_paths",
      "FlowComputationTest#test_catof",
      "SerializableObjectInSessionCheckTest#test",
      "LabelsShouldNotBeUsedCheckTest#test",
      "BadPackageNameCheckTest#test",
      "BadPackageNameCheckTest#test2",
      "BadPackageNameCheckTest#test3",
      "DefaultEncodingUsageCheckTest#test",
      "NullDereferenceInConditionalCheckTest#test",
      "ThrowCheckedExceptionCheckTest#test",
      "InputStreamOverrideReadCheckTest#test",
      "SingleConnectionFactoryCheckTest#beans",
      "SingleConnectionFactoryCheckTest#not_beans",
      "SurefireJavaParserTest#should_handle_parameterized_tests",
      "SurefireJavaParserTest#shouldMergeInnerClasses",
      "SurefireJavaParserTest#shouldUseTestSuiteReportIfAlone",
      "SurefireJavaParserTest#shouldAggregateReportsFromMultipleDirectories",
      "SurefireJavaParserTest#should_store_zero_tests_when_directory_is_null_or_non_existing_or_a_file",
      "SurefireJavaParserTest#shouldInsertZeroWhenNoReports",
      "SurefireJavaParserTest#should_log_missing_resource_with_debug_level",
      "SurefireJavaParserTest#should_not_count_negative_tests",
      "SurefireJavaParserTest#shouldMergeNestedInnerClasses",
      "SurefireJavaParserTest#shouldNotInsertZeroOnFiles",
      "SurefireJavaParserTest#should_register_tests",
      "SurefireJavaParserTest#shouldAggregateReports",
      "ImmediateReverseBoxingCheckTest#test",
      "UnusedPrivateMethodCheckTest#test",
      "CustomCryptographicAlgorithmCheckTest#test",
      "SurefireSensorTest#ignoreSuiteAsInnerClass",
      "SurefireSensorTest#shouldManageClassesWithDefaultPackage",
      "SurefireSensorTest#shouldHandleTestSuiteDetails",
      "SurefireSensorTest#shouldNotFailIfReportsNotFound",
      "SurefireSensorTest#shouldSaveErrorsAndFailuresInXML",
      "SurefireSensorTest#noSuccessRatioIfNoTests",
      "SurefireSensorTest#measuresShouldNotIncludeSkippedTests",
      "SurefireSensorTest#successRatioIsZeroWhenAllTestsFail",
      "SurefireSensorTest#should_support_reportNameSuffix",
      "SurefireSensorTest#should_execute_if_filesystem_contains_java_files",
      "CollectInsteadOfForeachCheckTest#test",
      "ExceptionUtilsTest#test_is_unchecked_exception",
      "NPEThrowCheckTest#test",
      "InvariantReturnCheckTest#test",
      "CloneMethodCallsSuperCloneCheckTest#test",
      "InnerClassTooManyLinesCheckTest#test",
      "UnusedLabelCheckTest#test",
      "DuplicateConditionIfElseIfCheckTest#test",
      "UnclosedResourcesCheckTest#streams",
      "UnclosedResourcesCheckTest#spring",
      "UnclosedResourcesCheckTest#jdbcTests",
      "UnclosedResourcesCheckTest#skip_exception_messages",
      "UnclosedResourcesCheckTest#try_with_resources",
      "UnclosedResourcesCheckTest#test",
      "UnclosedResourcesCheckTest#test_streams",
      "UnclosedResourcesCheckTest#testWithExcludedTypes",
      "CommonsCollectionsTest#measures_on_project",
      "DebugInterruptedExecutionCheckTest#test_max_steps",
      "StringLiteralDuplicatedCheckTest#threshold_at_two",
      "StringLiteralDuplicatedCheckTest#detected",
      "HardCodedCredentialsCheckTest#custom",
      "HardCodedCredentialsCheckTest#test",
      "MethodTreeImplTest#override_with_generic_parameters_should_be_detected",
      "MethodTreeImplTest#private_method_cannot_be_overriden",
      "MethodTreeImplTest#override_without_annotation_should_be_detected",
      "MethodTreeImplTest#override_from_object_should_be_detected",
      "MethodTreeImplTest#static_method_cannot_be_overriden",
      "MethodTreeImplTest#compute_cfg",
      "MethodTreeImplTest#hiding_of_static_methods",
      "MethodTreeImplTest#has_all_syntax_token",
      "MethodTreeImplTest#varargs_flag",
      "MethodTreeImplTest#override_annotated_method_should_be_overriden",
      "MethodTreeImplTest#override_unknown",
      "StringPrimitiveConstructorCheckTest#test",
      "LocksNotUnlockedCheckTest#object_constraint_cache_issues",
      "LocksNotUnlockedCheckTest#test",
      "BadTypeParameterNameCheckTest#test",
      "BadTypeParameterNameCheckTest#test2",
      "WrongAssignmentOperatorCheckTest#test",
      "PersistentEntityUsedAsRequestParameterCheckTest#test",
      "SwitchInsteadOfIfSequenceCheckTest#prior_java_7",
      "SwitchInsteadOfIfSequenceCheckTest#detected",
      "SpringComposedRequestMappingCheckTest#test",
      "RawExceptionCheckTest#test",
      "ObjectFinalizeOverridenCallsSuperFinalizeCheckTest#test",
      "ValueBasedUtilsTest#testIsValueBased",
      "ClassComparedByNameCheckTest#test",
      "CustomSerializationMethodCheckTest#test",
      "VisitorsBridgeTest#log_only_50_elements",
      "VisitorsBridgeTest#rethrow_exception_when_hidden_property_set_to_true",
      "VisitorsBridgeTest#test_semantic_exclusions",
      "CookieDomainCheckTest#test",
      "JavaVersionAwareVisitorTest#only_checks_with_adequate_java_version_higher_than_configuration_version_are_executed",
      "JavaVersionAwareVisitorTest#all_check_executed_when_invalid_java_version",
      "JavaVersionAwareVisitorTest#all_check_executed_when_no_java_version",
      "JavaVersionAwareVisitorTest#no_java_version_matching",
      "UselessPackageInfoCheckTest#withOtherFile",
      "UselessPackageInfoCheckTest#withNoOtherFile",
      "UselessPackageInfoCheckTest#notAPackageInfo",
      "MethodNameSameAsClassCheckTest#test",
      "StreamConsumedCheckTest#test",
      "LoggersDeclarationCheckTest#custom",
      "LoggersDeclarationCheckTest#detected",
      "SeveralBreakOrContinuePerLoopCheckTest#test",
      "CollectionSizeAndArrayLengthCheckTest#noIssueWithoutSemantic",
      "CollectionSizeAndArrayLengthCheckTest#test",
      "SelectorMethodArgumentCheckTest#test",
      "RedundantThrowsDeclarationCheckTest#test",
      "JavaCheckVerifierTest#rule_metadata_unknown_remediation_function",
      "JavaCheckVerifierTest#rule_metadata_unparsable",
      "JavaCheckVerifierTest#verify_line_issues_with_java_version",
      "JavaCheckVerifierTest#test_with_no_semantic_and_java_version",
      "JavaCheckVerifierTest#rule_with_constant_remediation_function_should_not_provide_cost",
      "JavaCheckVerifierTest#verify_get_classpath_files",
      "JavaCheckVerifierTest#test_rspec_key_with_no_json_should_not_fail",
      "JavaCheckVerifierTest#rule_metadata_remediation_function",
      "JavaCheckVerifierTest#should_fail_when_no_cost",
      "JavaCheckVerifierTest#verify_with_unknown_directory_should_fail",
      "JavaCheckVerifierTest#rule_without_annotation_should_fail_with_a_clear_message",
      "JavaCheckVerifierTest#rule_metadata_undefined_remediation_function",
      "JavaCheckVerifierTest#verify_no_issue_with_version",
      "JavaCheckVerifierTest#verify_issue_on_project",
      "JavaCheckVerifierTest#test_with_no_semantic",
      "DisallowedConstructorCheckTest#all_overloads",
      "DisallowedConstructorCheckTest#empty_parameters",
      "DisallowedConstructorCheckTest#detected",
      "DisallowedConstructorCheckTest#empty_type_definition",
      "BadFieldNameStaticNonFinalCheckTest#test",
      "BadFieldNameStaticNonFinalCheckTest#test2",
      "AtLeastOneConstructorCheckTest#test",
      "ForLoopVariableTypeCheckTest#test",
      "PrintfMisuseCheckTest#test",
      "LiveVariablesTest#lambdas_read_liveness",
      "LiveVariablesTest#test_simple_death",
      "LiveVariablesTest#test_try_finally_liveness",
      "LiveVariablesTest#test_simple_live",
      "LiveVariablesTest#anonymous_class_liveness",
      "LiveVariablesTest#method_ref_liveness",
      "LiveVariablesTest#test_field_not_tracked",
      "LiveVariablesTest#in_of_first_block_should_be_empty",
      "LiveVariablesTest#test_while_loop",
      "LiveVariablesTest#test_fields_live",
      "GetClassLoaderCheckTest#test",
      "ThreadLocalWithInitialCheckTest#no_issue_prior_to_java_8",
      "ThreadLocalWithInitialCheckTest#test",
      "BigDecimalDoubleConstructorCheckTest#test",
      "BoxedBooleanExpressionsCheckTest#test",
      "WildcardImportsShouldNotBeUsedCheckTest#test",
      "InnerStaticClassesCheckTest#test",
      "OneClassInterfacePerFileCheckTest#noncompliant",
      "OneClassInterfacePerFileCheckTest#test",
      "SuppressWarningFilterTest#verify",
      "StringReplaceCheckTest#test",
      "PostAnalysisIssueFilterTest#issue_filter_should_reject_issue_if_any_issue_filter_reject_the_issue",
      "PostAnalysisIssueFilterTest#number_of_issue_filters",
      "PostAnalysisIssueFilterTest#issue_filter_should_depends_on_chain_if_filters_accetps",
      "PostAnalysisIssueFilterTest#issue_filter_should_set_componentKey_and_scan_every_filter",
      "StaticMultithreadedUnsafeFieldsCheckTest#test",
      "ThreadRunCheckTest#test",
      "EqualsArgumentTypeCheckTest#test",
      "WaitOnConditionCheckTest#test",
      "ShiftOnIntOrLongCheckTest#test",
      "CookieShouldNotContainSensitiveDataCheckTest#test",
      "MethodWithExcessiveReturnsCheckTest#custom",
      "MethodWithExcessiveReturnsCheckTest#detected",
      "ReuseRandomCheckTest#test",
      "AndroidExternalStorageCheckTest#test",
      "TypesTest#isSubtype",
      "TypesTest#array_types_equality",
      "CallToDeprecatedMethodCheckTest#test",
      "BadLocalVariableNameCheckTest#test",
      "BadLocalVariableNameCheckTest#test2",
      "DanglingElseStatementsCheckTest#test",
      "ForLoopIncrementSignCheckTest#test",
      "EclipseI18NFilterTest#test",
      "AllBranchesAreIdenticalCheckTest#test",
      "ReassignmentFinderTest#declaration",
      "ReassignmentFinderTest#assignement_with_parenthesis",
      "ReassignmentFinderTest#parameter_with_usage",
      "ReassignmentFinderTest#ignore_assignation_after_starting_point",
      "ReassignmentFinderTest#array_declaration",
      "ReassignmentFinderTest#assignement_with_other_variable",
      "ReassignmentFinderTest#outside_method",
      "ReassignmentFinderTest#last_assignement_on_same_line",
      "ReassignmentFinderTest#unknown_variable",
      "ReassignmentFinderTest#known_limitation",
      "ReassignmentFinderTest#ignore_assignation_after_starting_point_same_line",
      "ReassignmentFinderTest#last_assignement",
      "ReassignmentFinderTest#assignement",
      "ReassignmentFinderTest#in_enum",
      "ReassignmentFinderTest#parameter",
      "NonSerializableWriteCheckTest#test",
      "OperatorPrecedenceCheckTest#test",
      "CatchOfThrowableOrErrorCheckTest#test",
      "LeastUpperBoundTest#lub_approximation_with_complexe_inheritance",
      "LeastUpperBoundTest#supertypes",
      "LeastUpperBoundTest#lub_of_generics",
      "LeastUpperBoundTest#lub_approximation_inheritance_and_multiple_bounds",
      "LeastUpperBoundTest#lub_of_primitives",
      "LeastUpperBoundTest#lub_should_fail_if_no_type_provided",
      "LeastUpperBoundTest#lub_of_generics_with_raw_type",
      "LeastUpperBoundTest#lub_of_generics_infinite_types",
      "LeastUpperBoundTest#lub_with_unknown_inheritance",
      "LeastUpperBoundTest#lub_select_best_return_first_classes_then_interfaces_ordered_alphabetically",
      "LeastUpperBoundTest#lub_of_generics_without_loop2",
      "LeastUpperBoundTest#lub_of_one_element_is_itself",
      "LeastUpperBoundTest#lub_with_shared_supertypes1",
      "LeastUpperBoundTest#lub_with_shared_supertypes2",
      "LeastUpperBoundTest#lub_with_shared_supertypes3",
      "LeastUpperBoundTest#lub_of_generics_without_loop",
      "LeastUpperBoundTest#lub_of_generics_with_multiple_typeArgs_and_wildcards",
      "LeastUpperBoundTest#lub_with_hierarchy_of_supertypes1",
      "LeastUpperBoundTest#lub_with_hierarchy_of_supertypes2",
      "ObjectFinalizeCheckTest#test",
      "MismatchPackageDirectoryCheckTest#correctMatch",
      "MismatchPackageDirectoryCheckTest#mismatch",
      "MismatchPackageDirectoryCheckTest#mismatchWithDots",
      "MismatchPackageDirectoryCheckTest#defaultPackage",
      "InterfaceOrSuperclassShadowingCheckTest#test",
      "StringToStringCheckTest#test",
      "CastArithmeticOperandCheckTest#test",
      "CastArithmeticOperandCheckTest#test_no_semantic",
      "SpringComponentScanCheckTest#test",
      "ArrayCopyLoopCheckTest#test",
      "WaitInSynchronizeCheckTest#test",
      "XmlFileSensorTest#testDoNotFailAnalysisIfUnexpectedIssue",
      "XmlFileSensorTest#testHandleAnalysisCancellation",
      "XmlFileSensorTest#testDescriptor",
      "XmlFileSensorTest#testCheckFailure",
      "XmlFileSensorTest#test",
      "XmlFileSensorTest#testDoNothingIfNoXmlFile",
      "XmlFileSensorTest#testDoNothingIfNoXmlRule",
      "XmlFileSensorTest#testDoNothingIfParsingError",
      "PseudoRandomCheckTest#test",
      "DefaultMessageListenerContainerCheckTest#beans",
      "DefaultMessageListenerContainerCheckTest#not_beans",
      "TooManyLinesOfCodeInFileCheckTest#test",
      "TooManyLinesOfCodeInFileCheckTest#test2",
      "ClassWithoutHashCodeInHashStructureCheckTest#test",
      "AbsOnNegativeCheckTest#test",
      "BadAbstractClassNameCheckTest#test",
      "NonNullSetToNullCheckTest#test",
      "ParsingErrorCheckTest#test",
      "JavaSonarWayProfileTest#should_create_sonar_way_profile",
      "JavaSonarWayProfileTest#should_activate_hotspots_when_supported",
      "JavaSonarWayProfileTest#should_contains_security_rules_if_present",
      "JavaSonarWayProfileTest#should_not_activate_hotspots_when_not_supported",
      "ValidationFiltersCheckTest#web_xml_with_filter",
      "ValidationFiltersCheckTest#web_xml_incomplete_filter",
      "ValidationFiltersCheckTest#web_xml_without_filter",
      "ValidationFiltersCheckTest#web_xml_incoherent_filters",
      "StringMethodsWithLocaleCheckTest#test",
      "SystemOutOrErrUsageCheckTest#test",
      "SyntaxHighlighterVisitorTest#test_CR",
      "SyntaxHighlighterVisitorTest#test_LF",
      "SyntaxHighlighterVisitorTest#parse_error",
      "SyntaxHighlighterVisitorTest#test_restricted_keywords_outside_module",
      "SyntaxHighlighterVisitorTest#test_java10_var",
      "SyntaxHighlighterVisitorTest#test_restricted_keywords_within_module",
      "SyntaxHighlighterVisitorTest#test_CR_LF",
      "TooLongLineCheckTest#test_with_empty_import_on_first_line",
      "TooLongLineCheckTest#test_with_false_positive_link_or_see",
      "TooLongLineCheckTest#test",
      "TooLongLineCheckTest#test_with_no_import",
      "TooLongLineCheckTest#test_with_noncompliant_link_or_see",
      "IgnoredOperationStatusCheckTest#test",
      "TryWithResourcesCheckTest#test_no_java_version",
      "TryWithResourcesCheckTest#test",
      "ReflectionOnNonRuntimeAnnotationCheckTest#test",
      "OverrideAnnotationCheckTest#test_java",
      "OverrideAnnotationCheckTest#test_java_4",
      "OverrideAnnotationCheckTest#test_java_5",
      "OverrideAnnotationCheckTest#test_java_6",
      "OverrideAnnotationCheckTest#test_no_semantic",
      "AssertionsCompletenessCheckTest#test",
      "CollectionsEmptyConstantsCheckTest#test",
      "JavaTypeTest#is_primitive_wrapper",
      "JavaTypeTest#checkTagging",
      "JavaTypeTest#direct_super_types",
      "JavaTypeTest#isPrimitive",
      "JavaTypeTest#isNumerical_should_return_true_for_numerical_types",
      "JavaTypeTest#fully_qualified_name",
      "JavaTypeTest#parametrizedTypeType_methods_tests",
      "JavaTypeTest#mapping_wrapper_primitive",
      "JavaTypeTest#type_is_fully_qualified_name",
      "JavaTypeTest#is_class_is_array",
      "JavaTypeTest#test_order_of_tags",
      "JavaTypeTest#test_fully_qualified_name",
      "JavaTypeTest#isSubtypeOf",
      "JavaTypeTest#erasure_of_type_variable",
      "VariableReadExtractorTest#should_not_extract_local_vars_written",
      "VariableReadExtractorTest#should_extract_local_vars_read",
      "VariableReadExtractorTest#should_not_extract_variable_declared",
      "VariableReadExtractorTest#should_return_symbol_once",
      "VariableReadExtractorTest#should_not_extract_fields_written",
      "VariableReadExtractorTest#should_extract_fields_read",
      "SquidClassLoaderTest#test_loading_java10_class",
      "SquidClassLoaderTest#createFromDirectory",
      "SquidClassLoaderTest#unknownJarIsIgnored",
      "SquidClassLoaderTest#test_loading_java11_class",
      "SquidClassLoaderTest#empty_file_should_not_fail_but_log_warning",
      "SquidClassLoaderTest#shouldBeIsolated",
      "SquidClassLoaderTest#empty_archive_should_not_fail",
      "SquidClassLoaderTest#test_loading_class",
      "SquidClassLoaderTest#empty_classloader_should_not_find_bytes",
      "SquidClassLoaderTest#testFindResources",
      "SquidClassLoaderTest#closeCanBeCalledMultipleTimes",
      "SquidClassLoaderTest#should_read_child_classes_first",
      "SquidClassLoaderTest#exceptionThrownWhenAlreadyClosed",
      "SquidClassLoaderTest#testFindResource",
      "SquidClassLoaderTest#test_loading_java9_class",
      "SquidClassLoaderTest#not_jar_is_ignored",
      "SquidClassLoaderTest#createFromAar",
      "SquidClassLoaderTest#createFromJar",
      "Java10SemanticTest#var_foreach",
      "Java10SemanticTest#var_parametrized_type_with_diamond",
      "Java10SemanticTest#var_foreach_unknown_type",
      "Java10SemanticTest#var_cast_intersection_type",
      "Java10SemanticTest#var_basic_type",
      "Java10SemanticTest#var_upward_projection_wildcard_extends",
      "Java10SemanticTest#var_type_anonymous_class",
      "Java10SemanticTest#var_try_with_resource",
      "Java10SemanticTest#var_upward_projection_wildcard_nested",
      "Java10SemanticTest#var_upward_projection_wildcard_super",
      "Java10SemanticTest#var_parametrized_type",
      "Java10SemanticTest#var_foreach_unspecified_raw_type",
      "Java10SemanticTest#var_foreach_iterable_raw_type",
      "Java10SemanticTest#var_upward_projection_wildcard",
      "Java10SemanticTest#var_parametrized_type_with_wildcard",
      "DebugMethodYieldsOnInvocationsCheckTest#test_max_steps",
      "DebugMethodYieldsOnInvocationsCheckTest#test",
      "StreamNotConsumedCheckTest#test",
      "HardcodedIpCheckTest#test",
      "MultipleFilesJavaCheckVerifierTest#test_issues_with_no_semantic",
      "MultipleFilesJavaCheckVerifierTest#verify_no_issue",
      "MultipleFilesJavaCheckVerifierTest#verify_combined_missing_expected_and_unexpected_issues",
      "MultipleFilesJavaCheckVerifierTest#verify_issues_in_multiple_files",
      "MultipleFilesJavaCheckVerifierTest#verify_unexpected_issue",
      "MultipleFilesJavaCheckVerifierTest#test_with_no_semantic",
      "BadFieldNameCheckTest#test",
      "BadFieldNameCheckTest#test2",
      "ResultSetIsLastCheckTest#test",
      "PrivateFieldUsedLocallyCheckTest#test",
      "FloatEqualityCheckTest#test",
      "AndroidSSLConnectionCheckTest#test",
      "SwitchAtLeastThreeCasesCheckTest#test",
      "LeftCurlyBraceStartLineCheckTest#detected",
      "SynchronizedFieldAssignmentCheckTest#test",
      "SynchronizedFieldAssignmentCheckTest#no_semantic",
      "StreamPeekCheckTest#test",
      "IgnoredTestsCheckTest#test",
      "UnusedLocalVariableCheckTest#test",
      "ServletInstanceFieldCheckTest#test",
      "JacocoReportReaderTest#analyzing_a_deleted_file_should_fail",
      "JacocoReportReaderTest#not_existing_class_files_should_not_be_analyzed_for_current",
      "SwitchDefaultLastCaseCheckTest#test",
      "SpringAutoConfigurationCheckTest#test",
      "UnusedReturnedDataCheckTest#test",
      "ExpressionsHelperTest#notAnIdentifier",
      "ExpressionsHelperTest#unknownValue",
      "ExpressionsHelperTest#variableSwapSOE",
      "ExpressionsHelperTest#andAssignement",
      "ExpressionsHelperTest#simpleInitializer",
      "ExpressionsHelperTest#selfAssigned",
      "ExpressionsHelperTest#initializerAndAssignment",
      "ExpressionsHelperTest#simpleAssignment",
      "ExpressionsHelperTest#moreThanOneAssignment",
      "FileCreateTempFileCheckTest#java_7",
      "FileCreateTempFileCheckTest#no_version",
      "SuppressWarningsCheckTest#warning_based_on_constants_are_ignored",
      "SuppressWarningsCheckTest#two_warnings_from_different_lines_are_not_allowed",
      "SuppressWarningsCheckTest#only_one_warning_is_not_allowed",
      "SuppressWarningsCheckTest#list_of_warnings_with_syntax_error_then_any_suppressWarnings_is_an_issue",
      "SuppressWarningsCheckTest#empty_list_of_warnings_then_any_suppressWarnings_is_an_issue",
      "ConstantsShouldBeStaticFinalCheckTest#test",
      "BytecodeCompleterTest#test_completion_of_generic_inner_class",
      "BytecodeCompleterTest#test_loading_java10_class",
      "BytecodeCompleterTest#outer_class_before_inner",
      "BytecodeCompleterTest#annotationArrayOfEnum",
      "BytecodeCompleterTest#complete_flags_for_inner_class",
      "BytecodeCompleterTest#package_annotations",
      "BytecodeCompleterTest#symbol_type_in_same_package_should_be_resolved",
      "BytecodeCompleterTest#forward_type_parameter_in_classes",
      "BytecodeCompleterTest#bridge_method_not_synthetic_should_not_be_created_as_symbol_nor_fail_analysis",
      "BytecodeCompleterTest#forward_type_parameter_in_methods",
      "BytecodeCompleterTest#class_names_ending_with_$",
      "BytecodeCompleterTest#class_not_found_should_have_unknown_super_type_and_no_interfaces",
      "BytecodeCompleterTest#innerClassWithDollarName",
      "BytecodeCompleterTest#test_loading_java11_class",
      "BytecodeCompleterTest#type_parameters_should_be_read_from_bytecode",
      "BytecodeCompleterTest#annotations",
      "BytecodeCompleterTest#type_parameters_in_inner_class",
      "BytecodeCompleterTest#owning_class_name",
      "BytecodeCompleterTest#wildcards_in_methods_declaration",
      "BytecodeCompleterTest#named_class_within_method",
      "BytecodeCompleterTest#default_value_of_annotation_methods",
      "BytecodeCompleterTest#array_types_dimension_taken_into_account",
      "BytecodeCompleterTest#wildcards_in_fields_declaration",
      "BytecodeCompleterTest#wildcards_in_class_declaration",
      "BytecodeCompleterTest#complete_flags_for_varargs_methods",
      "BytecodeCompleterTest#wildcards_type_equality",
      "BytecodeCompleterTest#constant_value",
      "BytecodeCompleterTest#loadClass_with_edge_cases_do_not_fail",
      "BytecodeCompleterTest#completing_symbol_ArrayList",
      "BytecodeCompleterTest#inner_class_should_be_correctly_flagged",
      "BytecodeCompleterTest#defaultMethods_should_be_correctly_flagged",
      "BytecodeCompleterTest#annotationOnSymbols",
      "BytecodeCompleterTest#test_loading_java9_class",
      "BytecodeCompleterTest#test_loading_java9_iface",
      "BytecodeCompleterTest#annotations_on_members",
      "BytecodeCompleterTest#deprecated_classes_should_be_flagged",
      "BytecodeCompleterTest#inner_classes_constructors_have_outerclass_as_implicit_first_parameter",
      "BytecodeCompleterTest#inner_class_obfuscated",
      "BytecodeCompleterTest#annotated_enum_constructor",
      "BytecodeCompleterTest#anonymous_class",
      "BytecodeCompleterTest#type_annotation_on_members",
      "BytecodeCompleterTest#void_method_type_should_be_resolved",
      "BytecodeCompleterTest#inner_class_before_outer",
      "BytecodeCompleterTest#super_class_can_be_an_inner_class",
      "FinalizeFieldsSetCheckTest#test",
      "RegexPatternsNeedlesslyCheckTest#test"
    ],
    "quickfixj": [
      "SLF4JLogTest#testLog",
      "SLF4JLogTest#testLogHeartbeatFiltering"
    ],
    "amazon-kinesis-client": [
      "MultiLangDaemonTest#testSuccessfulLoggingConfiguration",
      "MultiLangDaemonTest#testUnsuccessfulLoggingConfiguration"
    ],
    "logbook": [
      "IncludeTest#shouldNotExcludeApi",
      "IncludeTest#shouldNotExcludeApiWithPath",
      "IncludeTest#shouldNotExcludeApiWithParameter",
      "DefaultHttpLogWriterTest#shouldUseTraceLevelForActivation",
      "DefaultHttpLogWriterTest#shouldUseTraceLevelForLoggingRequests",
      "DefaultHttpLogWriterTest#shouldDefaultToTraceLevelForLoggingResponses",
      "LogbackLogstashSinkTest#shouldLogRequestAndResponse",
      "LogbackLogstashSinkTest#shouldLogCorrectJsonForEmptyBody"
    ]
  },
  "com.fasterxml.jackson.core:jackson-databind": {
    "rest-assured": [
      "RestDocsTest#path_parameters_are_automatically_supported",
      "PutTest#can_supply_object_as_body_and_serialize_as_json",
      "PostTest#can_supply_object_as_body_and_serialize_as_json"
    ],
    "light-4j": [
      "BasicAuthConfigTest#testDecryption",
      "ConsulHeartbeatManagerTest#testStart",
      "WhitelistConfigTest#testLoadConfig",
      "TlsUtilTest#testLoadInvalidTrustStore",
      "TlsUtilTest#testLoadValidKeyStore",
      "TlsUtilTest#testLoadTrustStore",
      "TlsUtilTest#testLoadInvalidKeyStore",
      "ConsulServiceTest#testToStringSingleTag",
      "ConsulServiceTest#testToStringMultipleTag",
      "ConsulRegistryTest#doRegisterAndAvailable",
      "ConsulRegistryTest#discoverService",
      "ConsulRegistryTest#subAndUnsubService",
      "TestCentralizedManagement#testMap_allowNullOverwrite",
      "TestCentralizedManagement#testMap_valueCastToInt",
      "TestCentralizedManagement#testMap_valueCastToDouble",
      "TestCentralizedManagement#testMap_mergeApplied_mutatesInPlaceCorrectly",
      "TestCentralizedManagement#testMap_valueCastToBoolean",
      "TestCentralizedManagement#testMap_allowEmptyStringOverwrite",
      "TestCentralizedManagement#testMap_mergeWhenFieldNotInValues_throwsException",
      "ConfigDefaultTest#testInvalidValueJsonMapConfig",
      "ConfigDefaultTest#testInjectionExclusionConfig",
      "ConfigDefaultTest#test2GetJsonObjectConfig",
      "ConfigDefaultTest#testEmptyStringValueJsonMapConfig",
      "ConfigDefaultTest#testGetNullValueJsonMapConfig",
      "ConfigDefaultTest#test1GetJsonObjectConfig",
      "ConfigDefaultTest#testGetStringFromFile",
      "ConfigDefaultTest#testGetJsonMapConfig",
      "ConfigDefaultTest#testObjectMapperLocalDateTime",
      "ConfigDefaultTest#test1GetJsonMapConfig",
      "ConfigDefaultTest#testGetJsonObjectConfig",
      "ConfigDefaultTest#test2GetJsonMapConfig",
      "ConfigDefaultTest#testObjectMapperLocalDate",
      "ConfigDefaultTest#testObjectMapperZonedDateTime",
      "ConfigDefaultTest#testGetInputStream",
      "TokenKeyRequestTest#testConstructor",
      "FingerPrintUtilTest#testGetCertFingerPrint",
      "ServerConfigTest#testInvalidServerOptions",
      "ServerConfigTest#testDefaultServerOptions",
      "ServerConfigTest#testValidServerOptions",
      "ServerConfigTest#testNullEnv",
      "ServerConfigEnvTest#testStringEnv",
      "TestMergeStatusConfig#testAppStatus",
      "TestMergeStatusConfig#testDuplicateStatus",
      "TestMergeStatusConfig#testEmptyAppStatus",
      "TestMergeStatusConfig#testWithoutAppStatus",
      "HandlerTest#validConfig_init_handlersCreated",
      "HandlerTest#validClassNameWithoutAt_split_returnsCorrect",
      "HandlerTest#validClassNameWithAt_split_returnsCorrect",
      "HandlerTest#mixedPathsAndSource",
      "HandlerTest#invalidMethod_init_throws",
      "HandlerTest#conflictingSourceAndPath_init_throws",
      "JwtHelperTest#testVerifySign",
      "JwtHelperTest#testVerifyJwtByJsonWebKeys",
      "JwtHelperTest#testVerifyJwt",
      "JwtHelperTest#testReadCertificate",
      "JwtHelperTest#testVerifyToken",
      "LightClusterTest#testServiceToUrl",
      "LightClusterTest#testServices",
      "ConfigPropertyPathTest#testGetConfigFromAbsPath",
      "ConfigPropertyPathTest#testGetObjectConfigFromAbsPath",
      "ConfigPropertyPathTest#testGetConfigFromRelPath",
      "ConfigPropertyPathTest#testGetConfig",
      "ConfigPropertyPathTest#testGetObjectConfigFromRelPath",
      "ConfigPropertyPathTest#testGetMapConfigFromMultiPath",
      "ServiceConfigTest#testServiceConfig",
      "TokenResponseTest#testErrorStatus",
      "TokenResponseTest#testExactFields",
      "TokenResponseTest#testMissingFields",
      "TokenResponseTest#testExtraFields",
      "PathResourceConfigTest#testLoadConfig",
      "JwtIssuerTest#longLivedProductSubjectJwt",
      "JwtIssuerTest#longLivedTrainingJwt",
      "JwtIssuerTest#normalPetStoreJwt",
      "JwtIssuerTest#longLivedHelloWorldJwt",
      "JwtIssuerTest#longlivedTransferJwt",
      "JwtIssuerTest#longlivedTokenizationJwt",
      "JwtIssuerTest#longLivedProductAccessJwt",
      "JwtIssuerTest#longLivedAPIAJwt",
      "JwtIssuerTest#longLivedCodegenJwt",
      "JwtIssuerTest#longLivedReferenceJwt",
      "JwtIssuerTest#longLivedATMP1000Jwt",
      "JwtIssuerTest#longLivedPetStoreJwt",
      "JwtIssuerTest#longlivedTokenizationJwt73",
      "OauthHelperTest#testGetSignKey",
      "OauthHelperTest#testDerefToken",
      "OauthHelperTest#testGetToken",
      "OauthHelperTest#testGetTokenKey",
      "OauthHelperTest#testGetTokenResult",
      "VirtualHostConfigTest#testLoadConfig",
      "ConfigDecryptTest#testDecryptObject",
      "ConfigDecryptTest#testDecryptMap",
      "ConfigDecryptTest#testDecryptorClass",
      "StatusDefaultTest#testToStringWithoutSeverity",
      "StatusDefaultTest#testToString",
      "StatusDefaultTest#testToStringWithAllArgs",
      "StatusDefaultTest#testConstructorMissingArgs",
      "StatusDefaultTest#testToStringWithArgs",
      "StatusDefaultTest#testJacksonPerf",
      "StatusDefaultTest#testToStringPerf",
      "StatusDefaultTest#testConstructor",
      "PluggableConfigLoaderTest#testInvalidConfigLoader",
      "PluggableConfigLoaderTest#testGetMapConfigWithoutPluggableConfigLoader",
      "PluggableConfigLoaderTest#testGetMapConfigByPluggableConfigLoader",
      "PluggableConfigLoaderTest#testGetObjectConfigByPluggableConfigloader",
      "SignKeyRequestTest#testConstructor",
      "ConsulClientImplTest#testWaitProperty",
      "JsonMapperTest#testLong",
      "JwtVerifierTest#testVerifySign",
      "JwtVerifierTest#testVerifyJwtByJsonWebKeys",
      "JwtVerifierTest#testVerifyJwt",
      "JwtVerifierTest#testReadCertificate",
      "JwtVerifierTest#testVerifyToken",
      "GenericDataSourceTest#testGetMysqlDataSource",
      "GenericDataSourceTest#testGetDataSource",
      "GenericDataSourceTest#testGetH2DataSource",
      "ResultTest#testResult",
      "ResponseEncodeConfigTest#loadConfig",
      "DecryptUtilTest#testDecryptMap",
      "ConfigClassPathTest#testGetConfigFromClassPath",
      "DirectRegistryTest#testDirectRegistry",
      "RequestDecodeConfigTest#loadConfig"
    ],
    "immutables": [
      "MongoAggregationTest#no_groupBy",
      "MongoAggregationTest#agg1",
      "MongoAggregationTest#agg2",
      "MongoAggregationTest#empty",
      "JacksonCodecsTest#encodeDecode",
      "JacksonCodecsTest#array",
      "JacksonCodecsTest#document",
      "MongoIntegrationTest#projection",
      "MongoIntegrationTest#nullable",
      "MongoIntegrationTest#comparison",
      "MongoIntegrationTest#optional",
      "MongoIntegrationTest#empty",
      "MongoIntegrationTest#equality",
      "MongoIntegrationTest#basic",
      "MongoIntegrationTest#startsWith",
      "MongoIntegrationTest#contains",
      "MongoIntegrationTest#fetch",
      "MongoIntegrationTest#whitespace",
      "MongoIntegrationTest#endsWith",
      "MarshallingTest#unmarshalingPolymorphicTypes",
      "MarshallingTest#marshalingPolymorphicTypesList",
      "BuilderDeserializationTest#workingTest",
      "BuilderDeserializationTest#brokenTest",
      "ObjectMappedTest#propertyOrder2",
      "ObjectMappedTest#abstractUnmarshalByAnnotation",
      "ObjectMappedTest#keywordNames",
      "ObjectMappedTest#includeNonEmpty",
      "ObjectMappedTest#anyGetterSetter",
      "ObjectMappedTest#noAnnotationsWorks",
      "ObjectMappedTest#constructorMapping",
      "ObjectMappedTest#propertyOrder",
      "ObjectMappedTest#minimumMarshaledPropertyNames",
      "ObjectMappedTest#jsonValueBuilderRoundTrip",
      "ObjectMappedTest#topUnmarshalMinimumAnnotations",
      "ObjectMappedTest#jacksonRoundtrip",
      "ObjectMappedTest#topLevelMarshalUnmarshal",
      "ObjectMappedTest#jsonPropertyName",
      "ObjectMappedTest#customBuilderDeserialize",
      "ObjectMappedTest#jsonValueConstructorRoundtrip",
      "ObjectMappedTest#packageHiddenInsideBuilder",
      "ObjectMappedTest#jsonValueSingletonRoundtrip",
      "ObjectMappedTest#includeNonEmptyWithConstructor",
      "ObjectMappedTest#anyGetterInBuilderSetter",
      "ObjectMappedTest#minimumIgnoreUnknownNames",
      "ObjectMappedTest#nestedMarshalUnmarshal",
      "ObjectMappedTest#lazyAttribute",
      "ObjectMappedTest#jacksonMetaAnnotated",
      "ElasticPersonTest#regex_forElastic",
      "IdAttributeTest#idAttribute",
      "BugsTest#deserialize368",
      "BugsTest#roundtrip328",
      "BugsTest#roundtrip353",
      "BugsTest#serialize273",
      "BsonParserTest#object",
      "BsonParserTest#scalar",
      "BsonParserTest#array",
      "DefaultTypingTest#roundtrip",
      "QueryBuildersTest#exists",
      "QueryBuildersTest#term",
      "QueryBuildersTest#range",
      "QueryBuildersTest#terms",
      "QueryBuildersTest#matchAll",
      "QueryBuildersTest#boolQuery",
      "TupleCodecProviderTest#optionalAttribute_nickname",
      "TupleCodecProviderTest#age",
      "FieldConflictTest#dummyWithMetaAnnotationWithCustomObjectMapper",
      "FieldConflictTest#dummyWithDefaultObjectMapper",
      "FieldConflictTest#customDummyWithMetaAnnotationWithCustomObjectMapper",
      "FieldConflictTest#customDummyWithCustomObjectMapper",
      "FieldConflictTest#dummyWithCustomObjectMapper",
      "FieldConflictTest#customDummyWithMetaAnnotationWithDefaultObjectMapper",
      "FieldConflictTest#dummyWithMetaAnnotationWithDefaultObjectMapper",
      "FieldConflictTest#customDummyWithDefaultObjectMapper",
      "ElasticAggregationTest#no_groupBy",
      "ElasticAggregationTest#agg1",
      "ElasticAggregationTest#agg2",
      "ElasticAggregationTest#empty",
      "ScrollingTest#withLimit",
      "ScrollingTest#noLimit",
      "ElasticIntegrationTests#projection",
      "ElasticIntegrationTests#nullable",
      "ElasticIntegrationTests#comparison",
      "ElasticIntegrationTests#optional",
      "ElasticIntegrationTests#empty",
      "ElasticIntegrationTests#equality",
      "ElasticIntegrationTests#basic",
      "ElasticIntegrationTests#startsWith",
      "ElasticIntegrationTests#contains",
      "ElasticIntegrationTests#fetch",
      "ElasticIntegrationTests#whitespace",
      "ElasticIntegrationTests#endsWith",
      "JsonTest#aggMultiBuckets",
      "JsonTest#aggSingle1",
      "JsonTest#aggSingle2",
      "JsonTest#aggMultiValues",
      "JsonTest#aggBuckets1",
      "JsonTest#aggManyAggregations",
      "JsonTest#aggEmpty",
      "EncodingTest#optMap",
      "PolymorphicTest#polymorphic",
      "JacksonRepoTest#nullDate",
      "JacksonRepoTest#withDate",
      "JacksonRepoTest#criteria",
      "MongoPersonTest#stringContains",
      "MongoPersonTest#emptyNotEmptyIterable",
      "MongoPersonTest#projection_ofContainers",
      "MongoPersonTest#orderBy",
      "MongoPersonTest#iterableHasSize",
      "MongoPersonTest#nested",
      "MongoPersonTest#comparison",
      "MongoPersonTest#intComparison",
      "MongoPersonTest#iterableContains",
      "MongoPersonTest#projection_basic",
      "MongoPersonTest#projection_nulls",
      "MongoPersonTest#projection_tuple",
      "MongoPersonTest#between",
      "MongoPersonTest#stringLength",
      "MongoPersonTest#basic",
      "MongoPersonTest#empty",
      "MongoPersonTest#limit",
      "MongoPersonTest#regex",
      "MongoPersonTest#startsOrEndsWith",
      "MongoPersonTest#stringEmptyNotEmpty",
      "MongoPersonTest#notLogic",
      "AggregateQueryBuilderTest#agg1",
      "JacksonGenericsTest#rountrip",
      "JavaTimeTypeTest#localDate",
      "JavaTimeTypeTest#localDateTime",
      "JavaTimeTypeTest#instant"
    ],
    "incubator-pinot": [
      "ControllerInstanceToggleTest#testInstanceToggle",
      "SegmentPreProcessorTest",
      "UploadRefreshDeleteIntegrationTest#setupMethod",
      "StarTreeV2ClusterIntegrationTest",
      "PinotSchemaRestletResourceTest#testBadContentType",
      "PinotSchemaRestletResourceTest#testCreateUpdateSchema",
      "ValidationManagerTest",
      "SegmentPartitionTest#testSegmentPartitionConfig",
      "TableSizeReaderTest#getTableSizeDetailsRealtimeOnly",
      "TableSizeReaderTest#testGetTableSubTypeSizeAllSuccess",
      "TableSizeReaderTest#testGetTableSubTypeSizesWithErrors",
      "PinotURIUploadIntegrationTest#setupMethod",
      "SegmentCompletionProtocolDeserTest#testJsonNullSegmentLocationAndVip",
      "SegmentCompletionProtocolDeserTest#testJsonResponseWithAllParams",
      "SegmentCompletionProtocolDeserTest#testJsonResponseWithSegmentLocationNullVip",
      "SegmentCompletionProtocolDeserTest#testJsonResponseWithVipAndNullSegmentLocation",
      "SegmentCompletionProtocolDeserTest#testJsonResponseWithoutSplitCommit",
      "PinotOutputFormatTest#verifyRawIndex",
      "PinotOutputFormatTest#verifyStarIndex",
      "ReplicaGroupRebalanceStrategyTest",
      "FlakyConsumerRealtimeClusterIntegrationTest",
      "TraceContextTest#testMultipleRequests",
      "TraceContextTest#testSingleRequest",
      "PartitionAwareOfflineRoutingTableBuilderTest#testBrokerSideServerAndSegmentPruning",
      "PartitionAwareOfflineRoutingTableBuilderTest#testRoutingTableAfterRebalance",
      "TableQueryQuotaManagerTest#testBothTableHaveQpsQuotaConfig",
      "TableQueryQuotaManagerTest#testOfflineTableWithNullQuotaButWithRealtimeTableConfigNotNullQpsConfig",
      "TableQueryQuotaManagerTest#testOfflineTableWithNullQuotaButWithRealtimeTableConfigNullQpsConfig",
      "TableQueryQuotaManagerTest#testRealtimeTableWithNullQuotaButWithOfflineTableConfigNotNullQpsConfig",
      "TableQueryQuotaManagerTest#testRealtimeTableWithNullQuotaButWithOfflineTableConfigNullQpsConfig",
      "JSONRecordReaderTest",
      "TableSizeResourceTest#testTableSizeDetailed",
      "TableSizeResourceTest#testTableSizeNoDetails",
      "TableSizeResourceTest#testTableSizeOld",
      "PinotInstanceRestletResourceTest#testInstanceListingAndCreation",
      "ServerTableSizeReaderTest#testServerSizeReader",
      "ServerTableSizeReaderTest#testServerSizesErrors",
      "PinotSegmentRestletResourceTest#testSegmentCrcApi",
      "PinotResourceManagerTest",
      "LLCRealtimeClusterSplitCommitIntegrationTest",
      "LLCRealtimeClusterIntegrationTest",
      "SegmentStatusCheckerIntegrationTest",
      "HelixBrokerStarterTest",
      "PartitionAwareRealtimeRoutingTableBuilderTest#testBrokerSideSegmentPruning",
      "PartitionAwareRealtimeRoutingTableBuilderTest#testMultipleConsumingSegments",
      "PartitionAwareRealtimeRoutingTableBuilderTest#testRoutingAfterRebalance",
      "MultiNodesOfflineClusterIntegrationTest",
      "SegmentAssignmentStrategyTest#testBalanceNumSegmentAssignmentStrategy",
      "SegmentAssignmentStrategyTest#testPartitionLevelReplicaGroupSegmentAssignmentStrategy",
      "SegmentAssignmentStrategyTest#testRandomSegmentAssignmentStrategy",
      "SegmentAssignmentStrategyTest#testReplicaGroupPartitionAssignment",
      "SegmentAssignmentStrategyTest#testTableLevelAndMirroringReplicaGroupSegmentAssignmentStrategy",
      "LLRealtimeSegmentDataManagerTest#testCommitAfterCatchup",
      "LLRealtimeSegmentDataManagerTest#testCommitAfterHold",
      "LLRealtimeSegmentDataManagerTest#testConsumingException",
      "LLRealtimeSegmentDataManagerTest#testDiscarded",
      "LLRealtimeSegmentDataManagerTest#testEndCriteriaChecking",
      "LLRealtimeSegmentDataManagerTest#testFileRemovedDuringOnlineTransition",
      "LLRealtimeSegmentDataManagerTest#testHolding",
      "LLRealtimeSegmentDataManagerTest#testNotLeader",
      "LLRealtimeSegmentDataManagerTest#testOnlineTransitionAfterStop",
      "LLRealtimeSegmentDataManagerTest#testRetained",
      "LLRealtimeSegmentDataManagerTest#testReuseOfBuiltSegment",
      "LLRealtimeSegmentDataManagerTest#testSegmentBuildException",
      "TimeBoundaryServiceTest#testExternalViewBasedTimeBoundaryService",
      "HybridClusterIntegrationTest",
      "PinotHelixResourceManagerTest#testRebuildBrokerResourceFromHelixTags",
      "ConvertToRawIndexMinionClusterIntegrationTest",
      "SimpleMinionClusterIntegrationTest",
      "PinotTableRestletResourceTest",
      "MetadataAndDictionaryAggregationPlanClusterIntegrationTest",
      "OfflineClusterIntegrationTest",
      "PinotFileUploadTest",
      "ResultSetGroupTest#testDeserializeAggregationGroupByResultSet",
      "ResultSetGroupTest#testDeserializeAggregationResultSet",
      "ResultSetGroupTest#testDeserializeExceptionResultSet",
      "ResultSetGroupTest#testDeserializeSelectionResultSet",
      "StarTreeClusterIntegrationTest",
      "SegmentMetadataImplTest#testToJson",
      "HadoopSegmentBuildPushOfflineClusterIntegrationTest",
      "PinotTenantRestletResourceTest#testTableListForTenant",
      "BalanceNumSegmentAssignmentStrategyIntegrationTest",
      "DeleteAPIHybridClusterIntegrationTest",
      "ControllerTenantTest#testBrokerTenant",
      "ControllerTenantTest#testServerTenant",
      "RealtimeClusterIntegrationTest",
      "TableViewsTest",
      "TablesResourceTest#getSegments",
      "TablesResourceTest#getTables",
      "TablesResourceTest#testSegmentCrcMetadata",
      "TablesResourceTest#testSegmentMetadata",
      "PinotLLCRealtimeSegmentManagerTest#testCommitSegmentWhenControllerWentThroughGC",
      "PinotLLCRealtimeSegmentManagerTest#testCommittingSegment",
      "PinotLLCRealtimeSegmentManagerTest#testCommittingSegmentIfDisconnected",
      "PinotLLCRealtimeSegmentManagerTest#testValidateLLCPartitionIncrease",
      "PinotLLCRealtimeSegmentManagerTest#testValidateLLCRepair"
    ],
    "jmxtrans": [
      "DetailedResultSerializerTest#serializeNumericResultWithPath",
      "DetailedResultSerializerTest#equalsHashCodeWhenSame",
      "DetailedResultSerializerTest#serializeNumericResult",
      "KafkaWriterFactoryTest#testConstructorWithNullProducerConfig",
      "KafkaWriterFactoryTest#testDefaultSerializers",
      "KafkaWriterFactoryTest#testReadConfigDefaultCustomized",
      "KafkaWriterFactoryTest#testReadConfigDetailed",
      "KafkaWriterFactoryTest#testConstructorWithNullResultSerializer",
      "KafkaWriterFactoryTest#testConstructorWithNullTopic",
      "KafkaWriterFactoryTest#testReadConfigDefault",
      "JsonPrinterTest#standardJsonPrinting",
      "JsonPrinterTest#prettyJsonPrinting",
      "GraphiteWriterFactoryTest#timedSocketExpirationIsUsedWhenConfigured",
      "GraphiteWriterFactoryTest#socketExpirationIsUsedByDefault",
      "GraphiteWriterFactoryTest#use_tcp_protocol_by_default",
      "GraphiteWriterFactoryTest#canParseConfigurationFileWithCustomParameters",
      "GraphiteWriterFactoryTest#writer_using_udp_protocol",
      "KafkaWriter2Test#producerClosed",
      "KafkaWriter2Test#testWrite",
      "KafkaWriter2Test#testFilterResultSerializer",
      "ProcessConfigUtilsTest#loadingFromSimpleYamlFile",
      "ProcessConfigUtilsTest#loadingFromJsonFileWithVariables",
      "ProcessConfigUtilsTest#loadingFromSimpleJsonFile",
      "ProcessConfigUtilsTest#loadingFromYamlFileWithVariables",
      "LibratoWriter2Test#metricsAreFormattedCorrectly",
      "ZabbixWriterTest#metricsAreFormattedCorrectly",
      "ConfigurationParserTest#mixJsonAndYamlFormats",
      "ConfigurationParserTest#failParsingOnErrorIfRequested",
      "ConfigurationParserTest#testMerge",
      "ConfigurationParserTest#sameServerWithTwoDifferentQueriesMergesQueries",
      "ConfigurationParserTest#continueParsingOnErrorIfRequested",
      "ConfigurationParserTest#mergeAlreadyExistingServerDoesNotModifyList",
      "DefaultResultSerializerTest#initDefaults",
      "DefaultResultSerializerTest#convertSingleNonNumericToString",
      "DefaultResultSerializerTest#equalsWhenDifferent",
      "DefaultResultSerializerTest#convertSingleNumericToString",
      "DefaultResultSerializerTest#equalsHashCodeWhenSame",
      "InfluxDbWriterTests#loadingFromFile"
    ],
    "galen": [
      "GalenTest#checkLayout_shouldGiveErrors_ifCustomRules_areFailed",
      "GalenTest#checkLayout_shouldTestLayout_andFilterSectionsByName",
      "GalenTest#checkLayout_shouldTestLayout_andReturnLayoutReport",
      "GalenTest#dumpPage_shouldExcludeObjects_thatMatch_givenRegex",
      "GalenTest#dumpPage_shouldGenereate_htmlJsonReport_andStorePicturesOfElements",
      "GalenTest#dumpPage_shouldOnlyStoreScreenshots_thatAreLessThan_theMaxAllowed",
      "GalenTest#dumpPage_shouldOnlyStoreScreenshots_withoutHtmlReport",
      "GalenMutateTest#should_perform_mutation_testing",
      "GalenMutateTest#should_perform_mutation_testing_2",
      "GalenMutateTest#should_perform_mutation_testing_with_custom_offset",
      "PageSpecReaderTest#shouldRead_objectDefinitions_withMultiLevelObjects",
      "PageSpecReaderTest#shouldRead_objectDefinitions_withMultiObjects",
      "GalenPageActionDumpPageTest#shouldCreate_pageDump",
      "GalenPageActionRunJavascriptTest#shouldRun_javascriptFile_andPerformActions_onBrowser",
      "GalenPageActionCheckTest#runsTestSuccessfully_andExcludesSpecifiedTags",
      "GalenPageActionCheckTest#runsTestSuccessfully_inPredefinedBrowser",
      "GalenPageActionCheckTest#runsTestSuccessfully_onlyForFilteredSections",
      "SpecGeneratorTest#should_generate_simple_spec_from_page_dump",
      "SpecGeneratorTest#should_generate_spec_for_large_page",
      "SpecGeneratorTest#should_generate_spec_without_galen_extras",
      "SeleniumPageTest#initDriver",
      "GalenMainTest#shouldCheckLayout_inJsTests_andPassCustomJsVariables",
      "GalenMainTest#shouldRunJavascriptTests_andRetryThem",
      "GalenMainTest#shouldRun_javascriptTest_andGenerateReports",
      "ReportingTest#shouldReportWithEmptyScreenshot_inJsonFormat",
      "ReportingTest#shouldReport_inHtmlFormat_withException_andAttachments",
      "ReportingTest#shouldReport_inHtmlWithJsonFormat_successfully_andSplitFiles_perTest",
      "ReportingTest#shouldReport_inJsonFormat"
    ],
    "jvm-profiler": [
      "ArgumentsTest#processConfigProvider_OverrideConfigProvider"
    ],
    "servicecomb-java-chassis": [
      "ServiceCombRestTemplateConfigTest#exposesServiceCombRestTemplate",
      "TestProtobufSchemaUtils#object",
      "ApolloClientTest#testCompareChangedConfig",
      "ApolloClientTest#refreshApolloConfig",
      "TestAnySchema#anys_json",
      "TestAnySchema#json",
      "TestAnySchema#json_fromMapWithoutType",
      "TestOperationInstancesDiscoveryFilter#discovery_v1_0_0",
      "TestOperationInstancesDiscoveryFilter#discovery_v1_1_0_add",
      "TestOperationInstancesDiscoveryFilter#discovery_v1_1_0_dec",
      "TestRestTemplateWrapper#deleteWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#optionsForAllowWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#exchangeWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#postForLocationWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#doNotSetRequestFactoryWithUnderlying",
      "TestRestTemplateWrapper#exchangeUsingParameterizedTypeWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#getForObjectWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#getsDefaultRestTemplate",
      "TestRestTemplateWrapper#setMessageConvertersWithUnderlying",
      "TestRestTemplateWrapper#dotNotSetUriTemplateHandlerWithUnderlying",
      "TestRestTemplateWrapper#postForObjectWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#getsAcceptableRestTemplate",
      "TestRestTemplateWrapper#putWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#setInterceptorsWithUnderlying",
      "TestRestTemplateWrapper#getForEntityWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#headForHeadersWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#setDefaultUriVariablesWithUnderlying",
      "TestRestTemplateWrapper#postForEntityWithUnderlyingRestTemplate",
      "TestRestTemplateWrapper#setErrorHandlerWithUnderlying",
      "TestRestTemplateWrapper#executeWithUnderlyingRestTemplate",
      "TestCseRestTemplate#testCseRestTemplate",
      "TestDefaultConsumerResponseMapperFactory#createResponseMapper",
      "TestServiceRegistryClientImpl#testException",
      "TestServiceRegistryClientImpl#findServiceInstances_microserviceNotExist",
      "TestServiceRegistryClientImpl#getSchemas",
      "TestServiceRegistryClientImpl#testPrivateMethodCreateHttpClientOptions",
      "TestServiceRegistryClientImpl#getAggregatedMicroservice",
      "TestServiceRegistryClientImpl#getAggregatedSchema",
      "TestServiceRegistryClientImpl#getSchemasForNew",
      "TestCseClientHttpRequest#testNormal",
      "TestHandler#testAbstractHandlerManager",
      "TestDefaultProducerResponseMapper#mapResponse",
      "TestProducerSchemaFactory#testGetOrCreateProducer",
      "TestProducerSchemaFactory#testCompletableFuture",
      "TestProducerSchemaFactory#testGetOrCreateProducerWithPrefix",
      "TestClientHttp#testServiceRegistryClientImpl",
      "TestInvocationPublishModelFactory#createDefaultPublishModel",
      "CseAsyncRestTemplateTest#testCseAsyncRestTemplate",
      "TestJaxrs#testEnumBody",
      "TestJaxrs#testQuery",
      "TestJaxrs#testEcho",
      "TestJaxrs#testForm",
      "TestJaxrs#testEmptyPath",
      "TestJaxrs#testResponse",
      "TestJaxrs#testRawJsonStringMethod",
      "TestJaxrs#testCookie",
      "TestJaxrs#testNonRestful",
      "TestRestTemplateBuilder#addsRestTemplateToWrapper",
      "TestConsumerSchemaFactory#createConsumerSchema",
      "ProducerBeanParamMapperTest#mapArgumentOnRecursiveParam",
      "ProducerBeanParamMapperTest#mapArgument",
      "ProducerBeanParamMapperTest#mapArgumentWithPart",
      "TestMicroserviceMeta#priorityPropertyManager",
      "TestVertxRestDispatcher#testWrapResponseBody",
      "TestInstanceCacheChecker#check_findInstances_serviceNotExist",
      "TestInstanceCacheChecker#check_appManager_empty",
      "TestInstanceCacheChecker#check_findInstances_revisionNotMatch",
      "TestInstanceCacheChecker#check_findInstances_cacheNotMatch",
      "TestInstanceCacheChecker#check_findInstances_failed",
      "TestInstanceCacheChecker#check_StaticMicroservice",
      "TestInstanceCacheChecker#check_microserviceManager_empty",
      "TestDynamicSchemaLoader#testRegisterSchemas",
      "TestDynamicSchemaLoader#testRegisterShemasAcrossApp",
      "TestSwaggerUtils#testResponseHeader",
      "TestSwaggerUtils#testInt",
      "TestSwaggerUtils#testMap",
      "TestSwaggerUtils#testSet",
      "TestSwaggerUtils#testAllType",
      "TestSwaggerUtils#testArray",
      "TestSwaggerUtils#testBytes",
      "TestSwaggerUtils#testFloat",
      "TestSwaggerUtils#testShort",
      "TestSwaggerUtils#testByte",
      "TestSwaggerUtils#testChar",
      "TestSwaggerUtils#testDate",
      "TestSwaggerUtils#testEnum",
      "TestSwaggerUtils#testList",
      "TestSwaggerUtils#testLong",
      "TestSwaggerUtils#testApiResponse",
      "TestSwaggerUtils#testBoolean",
      "TestSwaggerUtils#testAllMethod",
      "TestSwaggerUtils#testCompletableFutureOptional",
      "TestSwaggerUtils#testMapList",
      "TestSwaggerUtils#testMultiParam",
      "TestSwaggerUtils#testOptional",
      "TestSwaggerUtils#testCompletableFuture",
      "TestSwaggerUtils#testDouble",
      "TestSwaggerUtils#testApiOperation",
      "TestSwaggerUtils#testObject",
      "TestSwaggerUtils#testString",
      "TestDefaultHttpClientFilter#testAfterReceiveResponseNullProduceProcessor",
      "TestOperationMeta#opConfig",
      "TestOperationMeta#testOperationMeta",
      "TestSpringmvc#testInheritHttpMethod",
      "TestSpringmvc#testDefaultParameter",
      "TestSpringmvc#testResponseEntity",
      "TestSpringmvc#testEnumBody",
      "TestSpringmvc#testEmptyPath",
      "TestSpringmvc#testMixupAnnotations",
      "TestSpringmvc#testRawJsonStringMethod",
      "TestSpringmvc#testResponseEntityOptional",
      "TestSpringmvc#testAsyncResponseEntity",
      "TestSpringmvc#testCompletableFutureResponseEntityOptional",
      "TestDefaultProducerResponseMapperFactory#createResponseMapper",
      "TestDefaultConsumerResponseMapper#mapResponse",
      "TestOperationProtobuf#testOperationProtobuf",
      "TestSwaggerUtils#testInvalidateValid",
      "TestSwaggerUtils#swaggerToStringNormal",
      "TestSwaggerUtils#parseSwaggerUrlNormal",
      "TestOperationGenerator#testNestedListStringParam",
      "StaticSchemaFactoryTest#testLoadSchema",
      "TestArrayType#test",
      "TestModelWrap#pojoModel",
      "TestInstanceCacheCheckTask#autoTask_normal",
      "TestInstanceCacheCheckTask#manualTask",
      "TestSCBEngine#test",
      "ProducerSpringMVCQueryObjectMapperTest#mapArgumentOnRecursiveParam",
      "ProducerSpringMVCQueryObjectMapperTest#mapArgument",
      "TestInspectorImpl#urlPrefix",
      "TestInspectorImpl#getSchemaContentById_view_html",
      "TestInspectorImpl#getSchemaContentById_download_html",
      "TestInspectorImpl#downloadSchemas_html"
    ],
    "wasabi": [
      "EventPayloadTest#payloadSerialization",
      "EventPayloadTest#equalsTest",
      "EventPayloadTest#payloadDeSerialization",
      "EventPayloadTest#hashCodeTest",
      "RoleTest#testJacksonSerialization",
      "PermissionTest#testJacksonSerialization",
      "InvalidIdentifierExceptionProviderTest#toResponse",
      "EventNameTest#payloadSerialization",
      "EventNameTest#equalsTest",
      "EventNameTest#payloadDeSerialization",
      "EventNameTest#hashCodeTest"
    ],
    "jafka": [
      "ZookeeperConsumerConnector4Test#testCreateMessageStreams",
      "ZookeeperConsumerConnector3Test#testCreateMessageStreams",
      "ZookeeperStringTest#testCreateMessageStreams",
      "ZookeeperConsumerConnectorTest#testCreateMessageStreams",
      "ZookeeperConsumerConnector2Test#testCreateMessageStreams"
    ],
    "ff4j": [
      "FeatureJsonParserTest#testMarshaling",
      "FeatureJsonParserTest#testArrays",
      "FeatureJsonParserTest#testParseFlipStrategyAsJson",
      "MultiValuedPropertyTest#testMultiMap",
      "EventJsonParserTest#testMarshaling",
      "EventJsonParserTest#testArrays",
      "PropertyJsonParserTest#testFull",
      "FeatureStoreHttpTest#testStoreHasBeenInitialized",
      "FeatureStoreHttpTest#testGrantRoleToFeatureRoleDoesNotExist",
      "FeatureStoreHttpTest#testUpdateFlipLessAutorisation",
      "FeatureStoreHttpTest#testEnableGroup",
      "FeatureStoreHttpTest#testUpdateFeatureMoreAutorisation",
      "FeatureStoreHttpTest#testUpdateRemoveFlippingStrategy",
      "FeatureStoreHttpTest#testUpdateRemoveProperty",
      "FeatureStoreHttpTest#testUpdateEditFlippingStrategy",
      "FeatureStoreHttpTest#testClear",
      "FeatureStoreHttpTest#testUpdateAddProperty",
      "FeatureStoreHttpTest#testUpdateFlipMoreAutorisationNotExist",
      "FeatureStoreHttpTest#testReadAllFeatures",
      "FeatureStoreHttpTest#testDisableFeature",
      "FeatureStoreHttpTest#testReadGroup",
      "FeatureStoreHttpTest#testAddToGroup",
      "FeatureStoreHttpTest#testDisableGroup",
      "FeatureStoreHttpTest#testAddFeature",
      "FeatureStoreHttpTest#testUpdateAddFlippingStrategy",
      "FeatureStoreHttpTest#testRemoveFromGroupDoesNotExist",
      "FeatureStoreHttpTest#testDeleteRoleToFeature",
      "FeatureStoreHttpTest#testRemoveLastFeatureOfGroupDeleteGroup",
      "FeatureStoreHttpTest#testDeleteFeature",
      "FeatureStoreHttpTest#testUpdateEditPropertyValue",
      "FeatureStoreHttpTest#testUpdateEditPropertyAddFixedValues",
      "FeatureStoreHttpTest#testUpdateFeatureCoreData",
      "FeatureStoreHttpTest#testRemoveFromGroupIfNotInGroup",
      "FeatureStoreHttpTest#testReadAllGroup",
      "FeatureStoreHttpTest#testUpdateEditPropertyRemoveFixedValues",
      "FeatureStoreHttpTest#testReadFullFeature",
      "FeatureStoreHttpTest#testRemoveFromGroup",
      "FeatureStoreHttpTest#testAddFeatureAlreadyExis",
      "FeatureStoreHttpTest#testEnableFeature"
    ],
    "storm-crawler": [
      "SimpleFetcherBoltTest#test304",
      "SiteMapParserBoltTest#testNonSitemapParsing",
      "SiteMapParserBoltTest#testSitemapParsingNoMT",
      "SiteMapParserBoltTest#testSitemapParsing",
      "FastURLFilterTest#testMD",
      "FastURLFilterTest#testImagesFilter",
      "FastURLFilterTest#testDomainNotAllowed",
      "BasicURLNormalizerTest#testRemoveSomeOfManyQueryParams",
      "BasicURLNormalizerTest#testRemoveDupeQueryParams",
      "BasicURLNormalizerTest#testDontFixMangledQueryString",
      "BasicURLNormalizerTest#testQuerySort",
      "BasicURLNormalizerTest#testProperURLEncodingWithoutQueryParameter",
      "BasicURLNormalizerTest#testPipeInUrlAndFilterStillWorks",
      "BasicURLNormalizerTest#testProperURLEncodingWithBackSlash",
      "BasicURLNormalizerTest#testBothAnchorAndQueryFilter",
      "BasicURLNormalizerTest#testProperURLEncodingWithQueryParameters",
      "BasicURLNormalizerTest#testRemoveAllQueryParams",
      "BasicURLNormalizerTest#testMangledQueryString",
      "FetcherBoltTest#test304",
      "CollectionTaggerTest#testCollectionTagger",
      "XPathFilterTest#testScriptExtraction",
      "XPathFilterTest#testLDJsonExtraction",
      "XPathFilterTest#testBasicExtraction",
      "StackOverflowTest#testNamespaceExtraction",
      "StackOverflowTest#testStackOverflow",
      "DuplicateLinksTest#testSitemapSubdocuments",
      "SubDocumentsFilterTest#testSitemapSubdocuments",
      "CSVMetadataFilterTest#testMultivalued",
      "FeedParserBoltTest#testFeedParsing",
      "FeedParserBoltTest#testNonFeedParsing",
      "FeedParserBoltTest#testFeedParsingDetextBytes",
      "FeedParserBoltTest#testFeedParsingNoMT"
    ],
    "jongo": [
      "ParameterQueryBindingTest#canBindOidWithASpecificName",
      "ParameterQueryBindingTest#canBindEnum",
      "ParameterQueryBindingTest#canBindAHashIntoParameter",
      "ParameterQueryBindingTest#canBindPattern",
      "ParameterQueryBindingTest#canBindTwoOidInSameQuery",
      "ParameterQueryBindingTest#canUseParameterWith$push",
      "UpdateTest#canPartiallyUdpateWithaNewDocument",
      "UpdateTest#canUpsert",
      "UpdateTest#canPartiallyUdpateWithAPreexistingDocument",
      "UpdateTest#canUpdateByObjectId",
      "UpdateTest#canReplaceAllFields",
      "QuestionsSpikeTest#canSetAFieldToNullDuringAnUpdate",
      "QuestionsSpikeTest#canSelectOnlyAField",
      "QuestionsSpikeTest#canHandleElemMatchOperator",
      "QuestionsSpikeTest#canUpdateIntoAnArray",
      "QuestionsSpikeTest#pushANonBSONObject",
      "QuestionsSpikeTest#canUseElemMatchWithDateParams",
      "AnnotationsMisusedTest#savingAPojoWithAnEmptyStringCustomId",
      "AnnotationsMisusedTest#savingAPojoWithAnEmptyCustomIntegerId",
      "MongoCollectionTest#canCreateGeospacialIndex",
      "MongoCollectionTest#canUseConditionnalOperator",
      "DistinctTest#distinctWithParameterizedQuery",
      "DistinctTest#distinctOnTypedProperty",
      "DistinctTest#distinctWithQuery",
      "AggregateTest#canAggregateWithMultipleDocuments",
      "AggregateTest#canAggregateParameters",
      "AggregateTest#canAggregate",
      "AggregateTest#canAggregateWithDefaultOptions",
      "AggregateTest#shouldCheckIfCommandHasErrors",
      "AggregateTest#canAggregateWithManyMatch",
      "AggregateTest#canAggregateWithManyOperators",
      "AggregateTest#shouldUnmarshalNestedDocuments",
      "AggregateTest#canAggregateWithOptions",
      "AggregateTest#shouldPopulateIds",
      "FindAndModifyTest#shouldFailWhenUnableToUnmarshallResult",
      "FindAndModifyTest#canRemove",
      "FindAndModifyTest#canUpsertByStringId",
      "FindAndModifyTest#canReturnNew",
      "FindAndModifyTest#canSort",
      "FindAndModifyTest#canUpsertByObjectId",
      "FindAndModifyTest#canFindAndModifyWithNullValue",
      "FindAndModifyTest#canFindAndModifyOne",
      "FindOneTest#canFindOneWithOidAsString",
      "FindOneTest#shouldFailWhenUnableToUnmarshallResult",
      "FindOneTest#canFindOne",
      "FindOneTest#canFindOneWithReadPreference",
      "FindOneTest#canFindOneWithReadConcern",
      "FindOneTest#canFindOneWithEmptyQuery",
      "FindOneTest#canFindOneWithObjectId",
      "FindOneTest#canOrderBy",
      "FindOneTest#canFindOneWithOid",
      "RemoveTest#canRemoveASpecificDocument",
      "NonPojoTest#canFindAndSaveMap",
      "NonPojoTest#canSaveMapWithObjectId",
      "NonPojoTest#canSaveANewJsonNode",
      "NonPojoTest#canSaveANewMap",
      "NonPojoTest#canFindAndSaveJsonNode",
      "GridFsTest#shouldAllowDualAccessToFilesCollection",
      "JacksonAnnotationsHandlingTest#canHandleAnnotatedGetter",
      "JacksonAnnotationsHandlingTest#canHandleObjectIdNotAnnotated",
      "JacksonAnnotationsHandlingTest#canInjectObjectIdIntoAMisspelledGetter",
      "JacksonAnnotationsHandlingTest#canHandleStringIdNotAnnotated",
      "AnnotationsTest#shouldIgnoreObjectIdAnnotation",
      "AnnotationsTest#shouldHandleIdAnnotation",
      "AnnotationsTest#shouldIgnoreIdAnnotation",
      "AnnotationsTest#shouldHandleObjectIdAnnotation",
      "JacksonMapperTest#canAddDeserializer",
      "JacksonEngineTest#canUnmarshallBson",
      "JacksonEngineTest#shouldFailWhenUnableToUnmarshall",
      "FindWithModifierTest#canUseQueryModifier",
      "UnmarshallingWithJsonCreatorTest#canSaveAndMapAPojoWithoutId",
      "UnmarshallingWithJsonCreatorTest#canSaveAndMapAPojoWithObjectIdCreator",
      "UnmarshallingWithJsonCreatorTest#canSaveAndMapAPojoWithDateCreator",
      "UnmarshallingWithJsonCreatorTest#canSaveWithDateFieldAndMapWithout",
      "UnmarshallingWithJsonCreatorTest#canSaveAndMapAPojoStringCreatorAndObjectId",
      "FindTest#canFind",
      "FindTest#shouldFailWhenUnableToUnmarshallResult",
      "FindTest#canFindWithReadPreference",
      "FindTest#canFindUsingSubProperty",
      "FindTest#canFindWithEmptySelector",
      "FindTest#canFindWithOid",
      "FindTest#canFindWithStringAsObjectId",
      "CommandTest#canRunACommandAs",
      "CommandTest#canRunInvalidCommand",
      "CommandTest#canRunAGeoNearCommand",
      "MongoDumpTest#importBsonDumpFileIntoCollection",
      "InsertTest#canInsertPojo",
      "InsertTest#canInsertAPojoWithNewObjectId",
      "InsertTest#canInsertAPojoWithACustomId",
      "InsertTest#canInsertAnObjectWithoutId",
      "InsertTest#canInsertAListOfDocuments",
      "DocumentMarshallingTest#canHandleArray",
      "DocumentMarshallingTest#canHandleMapWithPrimitiveType",
      "DocumentMarshallingTest#canHandleIterableWithPrimitiveType",
      "DocumentMarshallingTest#canHandleByteArray",
      "DocumentMarshallingTest#canHandleJavaTypes",
      "DocumentMarshallingTest#canHandleMinAndMaxKey",
      "DocumentMarshallingTest#canHandleObjectId",
      "DocumentMarshallingTest#canHandleMapWithComplexType",
      "DocumentMarshallingTest#canHandleBSONTimestamp",
      "DocumentMarshallingTest#canHandleNonIsoDate",
      "DocumentMarshallingTest#canHandleDBObject",
      "DocumentMarshallingTest#canHandlePattern",
      "DocumentMarshallingTest#canHandleISODate",
      "DocumentMarshallingTest#canHandleUUID",
      "DocumentMarshallingTest#canHandleIterableWithComplexType",
      "ParameterBindingWithJacksonTest#canBindStringWithJsonValue",
      "ParameterBindingWithJacksonTest#canBindEnumWithJsonValue",
      "FindPartialFieldTest#canFindOneWithProjectionParamsWithDot",
      "FindPartialFieldTest#shouldIgnoreNullProjection",
      "FindPartialFieldTest#canFindOneWithComplexProjection",
      "FindPartialFieldTest#canFindWithComplexProjection",
      "JacksonViewTest#respectsJsonPublicViewOnUnmarshall",
      "JacksonViewTest#respectsJsonPrivateViewOnUnmarshall",
      "NestedPolymorphismTest#testCanSaveAndReadNestedPolymorphicField",
      "NestedPolymorphismTest#testCanUpdatePolymorphicField",
      "BinaryTest#canMarhsallBinary",
      "BinaryTest#testSave",
      "BinaryTest#testUpdate",
      "BinaryTest#testInsert",
      "PolymorphismTest#canUpdateIdFieldOnSuperType",
      "PolymorphismTest#canFindInheritedWithBSONTimestamp",
      "PolymorphismTest#canFindInheritedEntityByDiscriminator",
      "PolymorphismTest#canFindInheritedEntity",
      "PolymorphismTest#canHandleInheritanceAsAQueryParameter",
      "PolymorphismTest#canHandleInheritanceInASubDocument",
      "SaveTest#canSaveWithACustomTypeId",
      "SaveTest#canSave",
      "SaveTest#canUpdateWithACustomTypeId",
      "SaveTest#canSaveWithObjectIdAsString",
      "SaveTest#canUpdateAnEntity",
      "SaveTest#canSaveWithObjectId",
      "SaveTest#canSaveAPojoWithAnEmptyObjectIdAsString",
      "SaveTest#canUpdateWithObjectIdAsString",
      "SaveTest#canUpdateWithObjectId",
      "SaveTest#canUpdateAPojoWithACustomId",
      "SaveTest#canSaveAnObjectWithoutIdAnnotation",
      "FindSkipSortLimitTest#canLimit",
      "FindSkipSortLimitTest#canSkip",
      "FindSkipSortLimitTest#canSort"
    ],
    "isis": [
      "JsonRepresentationTest_getString_isString#happyCase",
      "JsonRepresentationTest_getString_isString#forMap",
      "JsonRepresentationTest_getString_isString#forList",
      "JsonRepresentationTest_getString_isString#forMultipartKey",
      "JsonRepresentationTest_getString_isString#forValueButNotAString",
      "JsonRepresentationTest_getString_isString#forNonExistent",
      "RestfulObjectsApplicationExceptionMapper_Test#entity_withMessage",
      "RestfulObjectsApplicationExceptionMapper_Test#entity_forExceptionWithCause",
      "RestfulObjectsApplicationExceptionMapper_Test#entity_forException",
      "RestfulObjectsApplicationExceptionMapper_Test#simpleNoMessage",
      "JsonRepresentationTest_urlEncoding#test",
      "JsonRepresentationTest_isArray_isMap_isValue#forMap",
      "JsonRepresentationTest_isArray_isMap_isValue#forList",
      "JsonRepresentationTest_isArray_isMap_isValue#forValue",
      "JsonRepresentationTest_streamMapEntries#forJsonRepresentation",
      "JsonRepresentationTest_getInt#happyCase",
      "JsonRepresentationTest_getInt#forMap",
      "JsonRepresentationTest_getInt#forList",
      "JsonRepresentationTest_getInt#forValueButNotAnInt",
      "JsonRepresentationTest_getInt#forMultipartKey",
      "JsonRepresentationTest_getInt#forNonExistent",
      "ResourceContextTest_getArg#whenArgDoesNotExist",
      "ResourceContextTest_getArg#whenArgExists",
      "DomainResourceHelperTest_readBodyAsMap#whenArray",
      "DomainResourceHelperTest_readBodyAsMap#map",
      "DomainResourceHelperTest_readBodyAsMap#emptyMap",
      "DomainObjectRepresentationTest_getProperty#getProperty",
      "JsonRepresentationTest_getLong#happyCase",
      "JsonRepresentationTest_getLong#forMap",
      "JsonRepresentationTest_getLong#forList",
      "JsonRepresentationTest_getLong#forMultipartKey",
      "JsonRepresentationTest_getLong#forValueButNotAnLong",
      "JsonRepresentationTest_getLong#forNonExistent",
      "JsonRepresentationTest_streamArrayElements#forJsonRepresentation",
      "JsonRepresentationTest_streamArrayElements#forString",
      "JsonRepresentationTest_size#size_forNonEmptyList",
      "JsonRepresentationTest_size#size_forEmptyList",
      "JsonRepresentationTest_size#size_forValue",
      "JsonRepresentationTest_size#size_forNonEmptyMap",
      "JsonRepresentationTest_size#size_forEmptyMap",
      "JsonRepresentationTest_arrayGet_arraySetElementAt#arrayGet_forMap",
      "JsonRepresentationTest_arrayGet_arraySetElementAt#arrayGet_outOfBounds",
      "JsonRepresentationTest_arrayGet_arraySetElementAt#arrayGet_forValue",
      "JsonRepresentationTest_arrayGet_arraySetElementAt#arraySetElementAt_happyCaseWhenSetElementToObject",
      "JsonRepresentationTest_arrayGet_arraySetElementAt#arraySetElementAt_forAttemptingToSetElementToArray",
      "JsonRepresentationTest_arrayGet_arraySetElementAt#arraySetElementAt_outOfBounds",
      "JsonRepresentationTest_arrayGet_arraySetElementAt#arrayGet_forNonEmptyList",
      "DomainObjectRepresentationTest_getCollections#getProperties",
      "JsonRepresentationTest_getBoolean#happyCase",
      "JsonRepresentationTest_getBoolean#forMap",
      "JsonRepresentationTest_getBoolean#forList",
      "JsonRepresentationTest_getBoolean#forMultipartKey",
      "JsonRepresentationTest_getBoolean#forValueButNotABoolean",
      "JsonRepresentationTest_getBoolean#forNonExistent",
      "JsonRepresentationTest_getBigInteger#happyCase",
      "JsonRepresentationTest_getBigInteger#invalidFormat",
      "JsonRepresentationTest_getBigInteger#forMap",
      "JsonRepresentationTest_getBigInteger#happyCaseForFormatJustFits",
      "JsonRepresentationTest_getBigInteger#forList",
      "JsonRepresentationTest_getBigInteger#forMultipartKey",
      "JsonRepresentationTest_getBigInteger#validFormattedFromPath",
      "JsonRepresentationTest_getBigInteger#invalidFormattedFromPathButOverridden",
      "JsonRepresentationTest_getBigInteger#invalidFormattedFromPath",
      "JsonRepresentationTest_getBigInteger#forNonExistent",
      "JsonRepresentationTest_getBigInteger#forNonParseableString",
      "JsonRepresentationTest_mapHas#forMap",
      "JsonRepresentationTest_mapHas#forList",
      "JsonRepresentationTest_getRepresentation#forMap",
      "JsonRepresentationTest_getRepresentation#forList",
      "JsonRepresentationTest_getRepresentation#forPath",
      "JsonRepresentationTest_getRepresentation#forListWithSingleCriteriaMatchingOne",
      "JsonRepresentationTest_getRepresentation#whenStartingWithList",
      "JsonRepresentationTest_getRepresentation#forValue",
      "JsonRepresentationTest_getRepresentation#forListWithMultipleCriteriaMatchingOne",
      "JsonRepresentationTest_getRepresentation#forNonExistent",
      "JsonRepresentationTest_getRepresentation#forListWithMultipleCriteriaMatchingMultiple",
      "JsonRepresentationTest_getArray#forMap",
      "JsonRepresentationTest_getArray#emptyArray",
      "JsonRepresentationTest_getArray#nonEmptyArray",
      "JsonRepresentationTest_getArray#forValue",
      "JsonRepresentationTest_getArray#forNonExistent",
      "JsonRepresentationTest_asInputStream#asInputStream",
      "DomainObjectRepresentationTest_getProperties#getProperties",
      "JsonRepresentationTest_getLink_isLink#forLink_whenMultipartKey",
      "JsonRepresentationTest_getLink_isLink#forMap",
      "JsonRepresentationTest_getLink_isLink#forList",
      "JsonRepresentationTest_getLink_isLink#withPredicate",
      "JsonRepresentationTest_getLink_isLink#forValue",
      "JsonRepresentationTest_getLink_isLink#forNonExistent",
      "JsonRepresentationTest_getLink_isLink#forLink_whenSimpleKey",
      "JsonRepresentationTest_getBigDecimal#happyCase",
      "JsonRepresentationTest_getBigDecimal#invalidFormat",
      "JsonRepresentationTest_getBigDecimal#forMap",
      "JsonRepresentationTest_getBigDecimal#happyCaseForFormatJustFits",
      "JsonRepresentationTest_getBigDecimal#forList",
      "JsonRepresentationTest_getBigDecimal#forMultipartKey",
      "JsonRepresentationTest_getBigDecimal#validFormattedFromPath",
      "JsonRepresentationTest_getBigDecimal#invalidFormattedFromPathButOverridden",
      "JsonRepresentationTest_getBigDecimal#invalidFormattedFromPath",
      "JsonRepresentationTest_getBigDecimal#happyCaseConvertingAnIntToBigDecimal",
      "JsonRepresentationTest_getBigDecimal#forNonExistent",
      "JsonRepresentationTest_getBigDecimal#happyCaseConvertingAnotherDoubleToBigDecimal",
      "JsonRepresentationTest_getBigDecimal#forNonParseableString",
      "DomainObjectRepresentationTest_getCollection#getCollection",
      "JsonRepresentationTest_getNull_isNull#isNull_forArray",
      "JsonRepresentationTest_getNull_isNull#isNull_forNonExistent",
      "JsonRepresentationTest_getNull_isNull#forMap",
      "JsonRepresentationTest_getNull_isNull#getNull_forArray",
      "JsonRepresentationTest_getNull_isNull#isNull_forMap",
      "JsonRepresentationTest_getNull_isNull#forNullValue",
      "JsonRepresentationTest_getNull_isNull#getNull_forNonExistent",
      "JsonRepresentationTest_getDouble#happyCase",
      "JsonRepresentationTest_getDouble#forMap",
      "JsonRepresentationTest_getDouble#forList",
      "JsonRepresentationTest_getDouble#forMultipartKey",
      "JsonRepresentationTest_getDouble#forValueButNotAnLong",
      "JsonRepresentationTest_getDouble#forNonExistent"
    ],
    "Cerberus": [
      "ProtectedControllerTest#requestingProtectedWithUnauthorizedCredentialsReturnsForbidden",
      "ProtectedControllerTest#requestingProtectedWithValidCredentialsReturnsExpected",
      "ProtectedControllerTest#requestingProtectedWithNoAuthorizationTokenReturnsUnauthorized",
      "AuthenticationControllerTest#requestingAuthenticationWithNoCredentialsReturnsBadRequest",
      "AuthenticationControllerTest#requestingAuthenticationWithInvalidCredentialsReturnsUnauthorized",
      "AuthenticationControllerTest#requestingProtectedWithValidCredentialsReturnsExpected",
      "AuthenticationControllerTest#requestingAuthenticationRefreshWithNoAuthorizationTokenReturnsUnauthorized",
      "AuthenticationControllerTest#requestingAuthenticationRefreshTokenWithTokenCreatedBeforeLastPasswordResetReturnsBadRequest"
    ],
    "GeoIP2-java": [
      "CountryResponseTest#testRegisteredCountry",
      "CountryResponseTest#testContinent",
      "CountryResponseTest#testCountry",
      "CountryResponseTest#testRepresentedCountry",
      "CountryResponseTest#testTraits",
      "DatabaseReaderTest#testLocaleListURL",
      "DatabaseReaderTest#testMemoryModeFile",
      "DatabaseReaderTest#hasIpAddressFile",
      "DatabaseReaderTest#testEnterprise",
      "DatabaseReaderTest#testAsn",
      "DatabaseReaderTest#testIsp",
      "DatabaseReaderTest#testLocaleListFile",
      "DatabaseReaderTest#testDefaultLocaleFile",
      "DatabaseReaderTest#testDefaultLocaleURL",
      "DatabaseReaderTest#testAnonymousIp",
      "DatabaseReaderTest#testConnectionType",
      "DatabaseReaderTest#testMemoryModeURL",
      "DatabaseReaderTest#testIsInEuropeanUnion",
      "DatabaseReaderTest#testDomain",
      "DatabaseReaderTest#hasIpAddressURL",
      "JsonTest#testIspSerialization",
      "JsonTest#testConnectionTypeSerialization",
      "JsonTest#testCitySerialization",
      "JsonTest#testAnonymousIPSerialization",
      "JsonTest#testCountrySerialization",
      "JsonTest#testDomainSerialization",
      "JsonTest#testInsightsSerialization",
      "InsightsResponseTest#testLocation",
      "InsightsResponseTest#testSubdivisionsList",
      "InsightsResponseTest#mostSpecificSubdivision",
      "InsightsResponseTest#testMaxMind",
      "InsightsResponseTest#testIsInEuropeanUnion",
      "InsightsResponseTest#testRepresentedCountry",
      "InsightsResponseTest#leastSpecificSubdivision",
      "InsightsResponseTest#testPostal",
      "InsightsResponseTest#testTraits",
      "WebServiceClientTest#test200WithInvalidJson",
      "WebServiceClientTest#test300",
      "WebServiceClientTest#test500",
      "WebServiceClientTest#testAddressReserved",
      "WebServiceClientTest#testInvalidRequest",
      "WebServiceClientTest#test200OnCityAsMe",
      "WebServiceClientTest#testPermissionRequired",
      "WebServiceClientTest#test400WithNoBody",
      "WebServiceClientTest#test400WithInvalidJson",
      "WebServiceClientTest#test200WithDefaultValues",
      "WebServiceClientTest#test200WithNoBody",
      "WebServiceClientTest#test200OnCountryAsMe",
      "WebServiceClientTest#testAddressInvalid",
      "WebServiceClientTest#test400WithUnexpectedJson",
      "WebServiceClientTest#testAddressNotFound",
      "WebServiceClientTest#test400WithUnexpectedContentType",
      "WebServiceClientTest#test200OnInsightsAsMe",
      "CityResponseTest#testNames",
      "CityResponseTest#noLocale",
      "CityResponseTest#testMissing",
      "CityResponseTest#testFallback",
      "CityResponseTest#russianFallback",
      "CityResponseTest#noFallback"
    ],
    "enunciate": [
      "TestGeneratedJsonTypeSerialization#testBasicShapes",
      "TestGeneratedJsonTypeSerialization#testBus",
      "TestGeneratedJsonTypeSerialization#testCat",
      "TestGeneratedJsonTypeSerialization#testHouse",
      "TestGeneratedJsonTypeSerialization#testCanvas"
    ],
    "Argus": [
      "NamespaceServiceTest#testGetNamespace",
      "NamespaceServiceTest#testUpdateNamespace",
      "NamespaceServiceTest#testCreateNamespace",
      "NamespaceServiceTest#testUpdateNamespaceMembers",
      "MetricSerDesTest#testMetricDeserializationList",
      "MetricSerDesTest#testMetricDeserializationListWithEmptyDatapointSet",
      "MetricSerDesTest#testMetricDeserializationEmptyList",
      "AuditServiceTest#testGetAudit",
      "AuditServiceTest#testGetAuditsForEntity",
      "JWTUtilsTest#testJWTExpiry",
      "JWTUtilsTest#testJWTUsername",
      "MetricServiceTest#testPutMetrics",
      "MetricServiceTest#testGetMetrics",
      "HistoryServiceTest#testGetHistoryForEntity",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testAlertEnqueue",
      "AlertServiceTest#testUpdateNotification",
      "AlertServiceTest#testUpdateNotificationWrongSeverityLevel",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testDeleteTriggers",
      "AlertServiceTest#testGetAlert",
      "AlertServiceTest#testGetTriggersForNotification",
      "AlertServiceTest#testGetTriggerIfAssigned",
      "AlertServiceTest#testDuplicateAlert",
      "AlertServiceTest#testGetTriggers",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testCreateTrigger",
      "AlertServiceTest#testCreateAlert",
      "AlertServiceTest#testGetNotifications",
      "AlertServiceTest#testDeleteNotifications",
      "AlertServiceTest#testGetTrigger",
      "AlertServiceTest#testUpdateTrigger",
      "AlertServiceTest#testUnlinkTrigger",
      "AlertServiceTest#testUnlinkTriggers",
      "AlertServiceTest#testLinkTrigger",
      "AlertServiceTest#testDeleteTrigger",
      "AlertServiceTest#testCreateNotification",
      "AlertServiceTest#testGetAlerts",
      "AlertServiceTest#testDeleteNotification",
      "AlertServiceTest#testGetNotification",
      "AuthServiceTest#testBadLogin",
      "AuthServiceTest#testLoginLogout",
      "AuthServiceTest#testObtainNewAccessToken",
      "BatchServiceTest#testDeleteBatch",
      "BatchServiceTest#testGetBatch",
      "BatchServiceTest#testCreateBatch",
      "BatchServiceTest#testGetBatches",
      "AnnotationServiceTest#testPutAnnotations",
      "AnnotationServiceTest#testGetAnnotations",
      "DiscoveryServiceTest#testGetMatchingRecords_GET",
      "DiscoveryServiceTest#testGetMatchingRecords_POST",
      "DiscoveryServiceTest#testGetMatchingRecordFields_POST",
      "DiscoveryServiceTest#testGetMatchingRecordFields",
      "SchedulingServiceTest#testAlertSchedulingWithGlobalInterlock",
      "UserServiceTest#testGetUserByUsername",
      "UserServiceTest#testGetUserById",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinMaxDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithTag",
      "MetricFederationTest#testEndPointFederationForkJoinMinDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsampler",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricTagvRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutCreateUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutUpdateUsingScopeAndMetricSchemaIndex",
      "DashboardServiceTest#testGetDashboards",
      "DashboardServiceTest#testDeleteDashboard",
      "DashboardServiceTest#testGetDashboard",
      "DashboardServiceTest#testUpdateDashboard",
      "DashboardServiceTest#testGetDashboardsMeta",
      "DashboardServiceTest#testCreateDashboard",
      "CallbackServiceTest#testCallbackNotifier",
      "CachedDiscoveryServiceTest#testWildcardExpansionWithinLimit",
      "CachedDiscoveryServiceTest#testWildcardExpansionExceedingLimit"
    ]
  },
  "org.springframework:spring-test": {
    "rest-assured": [
      "NonMultiPartFileUploadITest#initializationError",
      "GetTest#unnamed_path_params_works",
      "CookieTest#can_send_cookie_using_cookie_class",
      "CookieTest#can_send_cookies_using_cookies_class",
      "CookieTest#can_send_multiple_cookies",
      "CookieTest#can_receive_cookies",
      "CookieTest#can_send_cookie_using_cookie_name_and_value",
      "CookieTest#can_send_cookies_using_map",
      "RequestLoggingTest#can_supply_string_as_body_for_post",
      "MockMvcStaticRequestAndResponseSpecTest#response_validation_fails_if_any_property_in_the_response_is_not_valid",
      "MockMvcStaticRequestAndResponseSpecTest#response_validation_kicks_in_even_when_no_then_clause_is_specified",
      "MockMvcStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "AttributeTest#can_send_attribute_using_attribute_name_and_value",
      "AttributeTest#can_send_attributes_using_map",
      "MockMvcResponseStatusTest#can_use_spring_http_status_for_status_matching",
      "MockMvcResponseStatusTest#can_use_integer_value_for_status_code_matching",
      "MockMvcResponseStatusTest#can_use_hamcrest_matcher_for_status_code_matching",
      "BasePathTest#base_path_can_end_with_slash_and_path_doesnt_have_to_begin_with_slash",
      "BasePathTest#base_path_doesnt_have_to_end_with_slash_even_though_path_doesnt_begin_with_slash2",
      "BasePathTest#default_base_path_is_slash",
      "BasePathTest#base_path_is_prepended_to_path",
      "BasePathTest#double_slashes_are_prevented",
      "ResultMatcherTest#unnamed_path_params_works",
      "ScalaMockMvcTest#implicit_conversion_works_when_using_the_spring_mock_mvc_module",
      "MockMvcMatcherConfigTest#response_message_is_formatted_with_hamcrest_description_type",
      "MockMvcMatcherConfigTest#response_message_is_formatted_with_rest_assured_description_type",
      "MockMvcResponseAwareMatcherTest#can_use_custom_matcher_for_response_aware_matching",
      "MockMvcResponseAwareMatcherTest#can_use_predefined_matcher_for_response_aware_matching",
      "MockMvcResponseTimeTest#can_extract_response_time_in_mock_mvc_extension",
      "MockMvcResponseTimeTest#can_use_response_time_validation_in_mock_mvc_extension",
      "PutTest#can_supply_object_as_body_and_serialize_as_json",
      "PutTest#can_supply_string_as_body_for_put",
      "AutoSpringSecurityConfigurerITest#initializationError",
      "RestDocsTest#path_parameters_are_automatically_supported",
      "RestDocsTest#can_disable_automatic_spring_rest_docks_mvc_support",
      "ContentTypeTest#doesnt_add_default_charset_to_content_type_if_configured_not_to_do_so",
      "ContentTypeTest#adds_specific_charset_to_content_type_by_default",
      "ContentTypeTest#adds_default_charset_to_content_type_by_default",
      "ContentTypeTest#doesnt_duplication_of_content_type",
      "ContentTypeTest#doesnt_add_default_charset_to_content_type_if_charset_is_defined_explicitly",
      "ContentTypeTest#doesnt_duplication_of_content_type_with_default_charset",
      "GreetingControllerVanillaMockMvcTest#mock_mvc_example_for_get_greeting_controller",
      "GreetingControllerVanillaMockMvcTest#mock_mvc_example_for_post_greeting_controller",
      "SecuredControllerTest#statically_defined_auth_has_precedence_over_statically_defined_request_spec",
      "SecuredControllerTest#spring_security_authentication_authentication_works",
      "SecuredControllerTest#spring_security_set_authentication_also_set_principal",
      "SecuredControllerTest#spring_context_holder_is_cleared_after_test",
      "SecuredControllerTest#spring_security_principal_authentication_works",
      "SecuredControllerTest#dsl_defined_defined_request_spec_may_include_auth",
      "SecuredControllerTest#can_override_static_auth_config_with_none",
      "SecuredControllerTest#statically_defined_defined_request_spec_may_include_auth",
      "SecuredControllerTest#statically_defined_authentication_works",
      "SecuredControllerTest#javax_principal_authentication_works",
      "SecuredControllerTest#spring_context_holder_is_cleared_after_failed_test_when_auth_is_statically_defined",
      "SecuredControllerTest#spring_context_holder_is_cleared_after_failed_test",
      "MockHttpServletRequestBuilderInterceptorTest#mock_http_servlet_request_builder_interceptor_works",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_using_static_response_and_request_specs_declared_before_enable_logging",
      "LoggingIfValidationFailsTest#logging_is_applied_when_using_non_static_response_specifications",
      "LoggingIfValidationFailsTest#doesnt_log_if_request_or_response_when_validation_succeeds_when_request_and_response_logging_if_validation_fails_is_enabled",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_configured_with_log_detail",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails",
      "MockMvcSecurityITest#initializationError",
      "MockMvcNonStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "MockMvcRequestSpecificationMergingTest#logging_is_not_overwritten_when_not_defined_in_specification",
      "MockMvcRequestSpecificationMergingTest#logging_is_overwritten_when_defined_in_specification",
      "MockMvcRequestSpecificationMergingTest#mock_mvc_instance_is_overwritten_when_defined_in_specification",
      "MockMvcRequestSpecificationMergingTest#mock_mvc_factory_is_not_overwritten_when_not_defined_in_specification",
      "ParserTest#using_static_parser_its_possible_to_parse_unknown_content_types",
      "ParserTest#using_non_static_parser_its_possible_to_parse_unknown_content_types",
      "MockMvcPathParamTest#unnamed_path_param_works",
      "RequestLoggingTest#doesnt_log_if_request_validation_succeeds_when_request_logging_if_validation_fails_is_enabled",
      "RequestLoggingTest#logging_query_param_works",
      "RequestLoggingTest#logging_form_param_works",
      "RequestLoggingTest#logging_param_works",
      "RequestLoggingTest#logging_if_request_validation_fails_works",
      "RequestLoggingTest#base_path_is_prepended_to_path_when_logging",
      "MultiPartFileUploadITest#initializationError",
      "MockMvcRequestMethodTest#request_method_accepts_string_verb",
      "MockMvcRequestMethodTest#throws_iae_when_http_verb_is_not_supported_by_mock_mvc",
      "MockMvcRequestMethodTest#static_request_method_accepts_enum_verb_and_path_params",
      "MockMvcRequestMethodTest#request_method_accepts_enum_verb_and_unnamed_path_params",
      "MockMvcRequestMethodTest#static_request_method_accepts_string_verb",
      "MockMvcRequestMethodTest#request_method_accepts_string_verb_and_unnamed_path_params",
      "MockMvcRequestMethodTest#request_method_accepts_enum_verb",
      "PostTest#can_supply_object_as_body_and_serialize_as_json",
      "PostTest#can_supply_string_as_body_for_post",
      "QueryParamTest#query_param",
      "QueryParamTest#param_with_int",
      "MockMvcParamConfigTest#replaces_query_params_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_form_params_by_default",
      "MockMvcParamConfigTest#replaces_request_params_when_configured_to_do_so",
      "MockMvcParamConfigTest#replaces_form_params_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_query_params_by_default",
      "MockMvcParamConfigTest#replaces_all_parameters_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_all_parameters_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_request_params_by_default",
      "ExtractTest#can_extract_spring_mvcs_response",
      "ExtractTest#can_extract_rest_assureds_mock_mvc_response",
      "ExtractTest#can_extract_spring_mvcs_result",
      "ResultHandlerTest#merges_result_handlers_using_the_dsl",
      "ResultHandlerTest#merges_statically_defined_result_handlers_with_dsl_defined_using_response_spec",
      "ResultHandlerTest#supports_defining_result_handlers_statically",
      "ResultHandlerTest#supports_using_result_handlers_using_the_response_dsl",
      "GreetingControllerRestAssuredTest#uses_static_mock_mvc",
      "GreetingControllerRestAssuredTest#param_with_int",
      "GreetingControllerRestAssuredTest#uses_predefined_standalone",
      "GreetingControllerRestAssuredTest#uses_predefined_mock_mvc_instance",
      "AcceptTest#adds_accept_by_media_type",
      "AcceptTest#adds_accept_by_string_value",
      "AcceptTest#adds_accept_by_content_type",
      "HeaderTest#can_send_header_using_header_name_and_value",
      "HeaderTest#can_send_multiple_headers",
      "HeaderTest#can_send_headers_using_headers_class",
      "HeaderTest#validate_may_fail_when_using_mapping_function_when_validating_header_value",
      "HeaderTest#can_send_headers_using_map",
      "HeaderTest#can_send_header_using_header_class",
      "HeaderTest#canUseResponseAwareMatchersForHeaderValidation",
      "HeaderTest#can_use_mapping_function_when_validating_header_value",
      "ResponseLoggingTest#logging_if_response_validation_fails_doesnt_log_anything_if_validation_succeeds",
      "ResponseLoggingTest#logging_if_response_validation_fails_works",
      "WebAppContextWithMockMvcConfigurerITest#initializationError"
    ],
    "shiro": [
      "DapcAuthorizationAnnotationTest#initializationError",
      "ShiroConfigurationTest#initializationError",
      "SchemaAuthorizationAnnotationTest#initializationError",
      "ShiroWebSpringAutoConfigurationTest#initializationError",
      "ShiroBeanConfigurationTest#initializationError",
      "ShiroWebConfigurationTest#initializationError",
      "ShiroSpringAutoConfigurationTest#initializationError",
      "ShiroWebConfigurationWithCacheTest#initializationError",
      "ShiroConfigurationWithOptionalComponentsTest#initializationError"
    ],
    "fluent-validator": [
      "FluentValidateInterceptorTest#initializationError",
      "SpringApplicationContextRegistryTest#initializationError"
    ],
    "citrus": [
      "PageAuthorizationConfigTests#initializationError",
      "SpringextWebContextLoaderTests#initializationError",
      "SpringextContextLoaderTests#initializationError"
    ],
    "metrics-spring": [
      "TestSuite#initializationError"
    ],
    "ff4j": [
      "FlippingServiceTest#initializationError",
      "GreetingServiceTest#initializationError",
      "FeatureAdvisorTest#initializationError",
      "FF4JMBeanTest#initializationError",
      "FeatureAdvisorCGLIBTest#initializationError",
      "FlippingRepositoryTest#initializationError",
      "AopWithoutAnnotationTest#initializationError",
      "PlaceHolderTest#initializationError",
      "WholeClassFlippingTest#initializationError",
      "SampleServiceFeatureTest#initializationError",
      "SpringJdbcXMLDataSourceStoreTest#initializationError"
    ],
    "spring-websocket-portfolio": [
      "ContextPortfolioControllerTests#initializationError"
    ],
    "ddd-leaven-v2": [
      "OrderingTest#initializationError"
    ],
    "togglz": [
      "FeatureInterceptorTest#preHandle_noAnnotations",
      "FeatureInterceptorTest#preHandle_ClassFeature_Inactive",
      "FeatureInterceptorTest#preHandle_ClassFeature_Active",
      "FeatureInterceptorTest#preHandle_MethodFeature_Inactive",
      "FeatureInterceptorTest#preHandle_MethodFeature_Active",
      "FeatureInterceptorTest#preHandle_MethodFeatureTwo_AllActive",
      "FeatureInterceptorTest#preHandle_methodFeatureNoEnum_InvalidEnum",
      "FeatureInterceptorTest#preHandle_MethodFeatureTwo_Inactive",
      "FeatureInterceptorTest#preHandle_MethodFeatureTwo_OnlyOneActive"
    ],
    "nacos-spring-project": [
      "NacosPropertySourcePostProcessorTest#initializationError",
      "CacheableNacosInjectedFactoryTest#initializationError",
      "NacosBeanUtilsTest#initializationError",
      "CacheableEventPublishingNacosServiceFactoryTest#initializationError",
      "GlobalNacosPropertiesBeanDefinitionParserTest#initializationError",
      "NacosNamespaceHandlerTest#initializationError",
      "NacosPropertySourceYamlTest#initializationError",
      "NacosAnnotationDrivenBeanDefinitionParserTest#initializationError",
      "NacosConfigurationPropertiesBindingPostProcessorTest#initializationError",
      "NacosConfigBeanDefinitionRegistrarTest#initializationError",
      "NacosBeanDefinitionRegistrarTest#initializationError",
      "NacosPropertySourceXmlTest#initializationError",
      "NacosConfigListenerMethodProcessorTest#initializationError",
      "NacosPropertySourceJsonTest#initializationError",
      "NacosPropertySourceBeanDefinitionParserTest#initializationError",
      "AnnotationNacosInjectedBeanPostProcessorTest#initializationError",
      "NacosPropertySourceTest#initializationError"
    ],
    "logbook": [
      "WritingTest#shouldNotLogFormRequestOff",
      "WritingTest#shouldLogNonFormRequest",
      "WritingTest#shouldLogFormRequestParameter",
      "WritingTest#shouldLogFormRequestBody",
      "WritingTest#shouldLogRequest"
    ],
    "postgresql-embedded": [
      "TestPostgresWithinSpringContext#initializationError"
    ],
    "lavagna": [
      "ProjectServiceFindRelatedTest#initializationError",
      "StatisticsServiceTest#initializationError",
      "CalendarServiceTest#initializationError",
      "WebUserControllerTest#initializationError",
      "CardRepositoryTest#initializationError",
      "ExcelExportServiceTest#initializationError",
      "UserServiceTest#initializationError",
      "ListValueMetadataRepositoryTest#initializationError",
      "SearchServiceTest#initializationError",
      "ImportServiceTest#initializationError",
      "LabelServiceTest#initializationError",
      "EventRepositoryTest#initializationError",
      "ProjectServiceTest#initializationError",
      "BoardColumnRepositoryTest#initializationError",
      "CardLabelRepositoryTest#initializationError",
      "CardEventRepositoryTest#initializationError",
      "NotificationServiceTest#initializationError",
      "CardDataRepositoryTest#initializationError",
      "UserRepositoryTest#initializationError",
      "CardServiceTest#initializationError",
      "ConfigurationRepositoryTest#initializationError",
      "PermissionServiceTest#initializationError",
      "ExportImportServiceTest#initializationError",
      "WebEndpointInfoTest#initializationError",
      "BoardRepositoryTest#initializationError",
      "CardDataServiceTest#initializationError",
      "BulkOperationServiceTest#initializationError",
      "EventEmitterTest#initializationError",
      "MailTicketServiceTest#initializationError"
    ]
  },
  "ch.qos.logback:logback-classic": {
    "languagetool": [
      "MainTest#testFileWithExternalRule"
    ],
    "shiro": [
      "ShiroWebSpringAutoConfigurationTest#testMinimalConfiguration"
    ],
    "light-4j": [
      "AuditHandlerTest#shouldAddListenerIfIsStatusCodeAndIsResponseTimeAreTrue",
      "AuditHandlerTest#shouldAddListenerIfIsStatusCodeIsTrueAndIsResponseTimeIsFalse",
      "AuditHandlerTest#testAuditWithoutTrace",
      "AuditHandlerTest#shouldNotAddListenerIfStatusCodeAndResponseTimeAreFalse",
      "AuditHandlerTest#shouldAddListenerIfIsStatusCodeIsFalseAndIsResponseTimeIsTrue",
      "AuditHandlerTest#testAuditWithTrace"
    ],
    "java-driver": [
      "BasicLoadBalancingPolicyInitTest#should_not_infer_local_dc_if_not_provided",
      "BasicLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_config",
      "BasicLoadBalancingPolicyInitTest#should_include_nodes_from_local_dc_if_local_dc_set",
      "BasicLoadBalancingPolicyInitTest#should_ignore_nodes_from_remote_dcs_if_local_dc_set",
      "BasicLoadBalancingPolicyInitTest#should_not_ignore_nodes_from_remote_dcs_if_local_dc_not_set",
      "BasicLoadBalancingPolicyInitTest#should_warn_if_contact_points_not_in_local_dc",
      "BasicLoadBalancingPolicyInitTest#should_ignore_nodes_excluded_by_filter",
      "BasicLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_context",
      "BasicLoadBalancingPolicyEventsTest#should_remove_removed_node_from_live_set",
      "BasicLoadBalancingPolicyEventsTest#should_set_added_node_to_local",
      "BasicLoadBalancingPolicyEventsTest#should_add_up_node_to_live_set",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_added_node_when_filtered",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_added_node_when_remote_dc",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_up_node_when_remote_dc",
      "BasicLoadBalancingPolicyEventsTest#should_remove_down_node_from_live_set",
      "BasicLoadBalancingPolicyEventsTest#should_ignore_up_node_when_filtered",
      "DefaultLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_config",
      "DefaultLoadBalancingPolicyInitTest#should_ignore_nodes_from_remote_dcs",
      "DefaultLoadBalancingPolicyInitTest#should_require_local_dc_if_explicit_contact_points",
      "DefaultLoadBalancingPolicyInitTest#should_include_nodes_from_local_dc",
      "DefaultLoadBalancingPolicyInitTest#should_infer_local_dc_if_no_explicit_contact_points",
      "DefaultLoadBalancingPolicyInitTest#should_warn_if_contact_points_not_in_local_dc",
      "DefaultLoadBalancingPolicyInitTest#should_ignore_nodes_excluded_by_filter",
      "DefaultLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_context",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_round_robin_and_log_error_when_request_throws",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_key",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_session_keyspace_and_routing_key",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_key_or_token",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_request",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_prioritize_and_shuffle_replicas",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_keyspace",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_absent",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_session",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_prioritize_single_replica",
      "DefaultLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_token",
      "BasicLoadBalancingPolicyQueryPlanTest#should_round_robin_and_log_error_when_request_throws",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_key",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_session_keyspace_and_routing_key",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_key_or_token",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_request",
      "BasicLoadBalancingPolicyQueryPlanTest#should_prioritize_and_shuffle_replicas",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_keyspace",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_absent",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_session",
      "BasicLoadBalancingPolicyQueryPlanTest#should_prioritize_single_replica",
      "BasicLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_token",
      "DcInferringLoadBalancingPolicyEventsTest#should_remove_removed_node_from_live_set",
      "DcInferringLoadBalancingPolicyEventsTest#should_set_added_node_to_local",
      "DcInferringLoadBalancingPolicyEventsTest#should_add_up_node_to_live_set",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_added_node_when_filtered",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_added_node_when_remote_dc",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_up_node_when_remote_dc",
      "DcInferringLoadBalancingPolicyEventsTest#should_remove_down_node_from_live_set",
      "DcInferringLoadBalancingPolicyEventsTest#should_ignore_up_node_when_filtered",
      "DcInferringLoadBalancingPolicyInitTest#should_infer_local_dc_from_contact_points",
      "DcInferringLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_config",
      "DcInferringLoadBalancingPolicyInitTest#should_ignore_nodes_from_remote_dcs",
      "DcInferringLoadBalancingPolicyInitTest#should_include_nodes_from_local_dc",
      "DcInferringLoadBalancingPolicyInitTest#should_require_local_dc_if_contact_points_from_different_dcs",
      "DcInferringLoadBalancingPolicyInitTest#should_warn_if_contact_points_not_in_local_dc",
      "DcInferringLoadBalancingPolicyInitTest#should_ignore_nodes_excluded_by_filter",
      "DcInferringLoadBalancingPolicyInitTest#should_use_local_dc_if_provided_via_context",
      "DcInferringLoadBalancingPolicyInitTest#should_require_local_dc_if_contact_points_have_null_dcs",
      "AtomicTimestampGeneratorTest#should_use_clock_if_it_keeps_increasing",
      "AtomicTimestampGeneratorTest#should_warn_if_timestamps_drift",
      "AtomicTimestampGeneratorTest#should_share_timestamps_across_all_threads",
      "AtomicTimestampGeneratorTest#should_increment_if_clock_does_not_increase",
      "AtomicTimestampGeneratorTest#should_go_back_to_clock_if_new_tick_high_enough",
      "NetworkTopologyReplicationStrategyTest#should_abort_early_and_log_when_bad_replication_factor_cannot_be_met",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_round_robin_and_log_error_when_request_throws",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_key",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_session_keyspace_and_routing_key",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_key_or_token",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_request",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_prioritize_and_shuffle_replicas",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_request_has_no_routing_keyspace",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_absent",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_no_session",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_prioritize_single_replica",
      "DcInferringLoadBalancingPolicyQueryPlanTest#should_use_round_robin_when_token_map_returns_no_replicas_using_request_keyspace_and_routing_token",
      "DefaultLoadBalancingPolicyEventsTest#should_remove_removed_node_from_live_set",
      "DefaultLoadBalancingPolicyEventsTest#should_set_added_node_to_local",
      "DefaultLoadBalancingPolicyEventsTest#should_add_up_node_to_live_set",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_added_node_when_filtered",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_added_node_when_remote_dc",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_up_node_when_remote_dc",
      "DefaultLoadBalancingPolicyEventsTest#should_remove_down_node_from_live_set",
      "DefaultLoadBalancingPolicyEventsTest#should_ignore_up_node_when_filtered",
      "ThreadLocalTimestampGeneratorTest#should_use_clock_if_it_keeps_increasing",
      "ThreadLocalTimestampGeneratorTest#should_warn_if_timestamps_drift",
      "ThreadLocalTimestampGeneratorTest#should_increment_if_clock_does_not_increase",
      "ThreadLocalTimestampGeneratorTest#should_confine_timestamps_to_thread",
      "ThreadLocalTimestampGeneratorTest#should_go_back_to_clock_if_new_tick_high_enough",
      "ContactPointsTest#should_ignore_malformed_host_and_port_and_warn",
      "ContactPointsTest#should_parse_ipv6_address_and_port_in_configuration",
      "ContactPointsTest#should_warn_if_duplicate_in_configuration",
      "ContactPointsTest#should_parse_ipv4_address_and_port_in_configuration",
      "ContactPointsTest#should_warn_if_duplicate_between_programmatic_and_configuration",
      "ContactPointsTest#should_ignore_malformed_port_and_warn",
      "ContactPointsTest#should_parse_host_and_port_in_configuration_and_create_unresolved",
      "ContactPointsTest#should_merge_programmatic_and_configuration",
      "ContactPointsTest#should_parse_host_and_port_and_resolve_all_a_records",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_present_v2",
      "DefaultTopologyMonitorTest#should_refresh_node_list_from_local_and_peers",
      "DefaultTopologyMonitorTest#should_warn_when_control_host_found_in_system_peers_v2",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_present",
      "DefaultTopologyMonitorTest#should_get_new_node_from_peers",
      "DefaultTopologyMonitorTest#should_warn_when_control_host_found_in_system_peers",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_not_present_V2",
      "DefaultTopologyMonitorTest#should_get_new_node_from_peers_v2",
      "DefaultTopologyMonitorTest#should_stop_executing_queries_once_closed",
      "DefaultTopologyMonitorTest#should_refresh_node_from_peers_if_broadcast_address_is_not_present",
      "DefaultTopologyMonitorTest#should_not_refresh_control_node",
      "DefaultTopologyMonitorTest#should_initialize_control_connection"
    ],
    "servicecomb-java-chassis": [
      "ZipkinSpanAspectTest#reportedSpanContainsAnnotatedMethodInfo",
      "ZipkinSpanAspectTest#reportCustomSpanInfomation"
    ],
    "citrus": [
      "LogbackConfiguratorTests#getConfigurator_autoDiscovery",
      "LogbackConfiguratorTests#configureDefault_noDebug",
      "LogbackConfiguratorTests#configure_failure",
      "LogbackConfiguratorTests#configure",
      "LogbackConfiguratorTests#configure_wrongContext",
      "LogbackConfiguratorTests#getConfigurator_withName",
      "LogbackConfiguratorTests#configureDefault_debug",
      "LogConfiguratorListenerTests#defaultValues",
      "ConfigurableLoggerTests#defaultLogger",
      "ConfigurableLoggerTests#setLogName",
      "ConfigurableLoggerTests#logWithLevel",
      "ConfigurableLoggerTests#isLevelEnabled",
      "ConfigurableLoggerTests#toString_",
      "CheckCsrfTokenValveTests#checkCsrfToken_checkManually",
      "SecurityLoggerTests#toString_",
      "LifecycleLoggerListenerTests#test",
      "Log4jConfiguratorTests#getConfigurator_wrongContext",
      "BaseServiceTests#log",
      "VelocityEngineTests#advancedProperties",
      "VelocityEngineTests#defaultSettings",
      "AttributeWhitelistTests#init_",
      "AttributeWhitelistTests#access_sessionModelOnly",
      "AttributeWhitelistTests#read_notExistAttr",
      "AttributeWhitelistTests#readWrite_anyType",
      "AttributeWhitelistTests#readWrite_anyType2",
      "AttributeWhitelistTests#readWrite_specifiedType",
      "AttributeWhitelistTests#readWrite_wrongType",
      "AttributeWhitelistTests#readWrite_primitiveType",
      "AttributeWhitelistTests#readWrite_wrongPrimitiveType",
      "AttributeWhitelistTests#readWrite_nameNotInWhitelist"
    ],
    "FluentLenium": [
      "SeleniumVersionCheckLoggingTest#shouldNotWarnWhenVersionIsCorrect",
      "SeleniumVersionCheckLoggingTest#shouldNotLogWarningWhenParameterSetInParentPom",
      "SeleniumVersionCheckLoggingTest#shouldNotifyWhenSeleniumVersionNotDeclared",
      "SeleniumVersionCheckLoggingTest#shouldWarnAboutWrongSeleniumVersion",
      "ContainerAnnotationsEventsRegistrySuperClassSetupTest#shouldRegisterAnnotationBasedListenersFromSuperClass",
      "SeleniumVersionCheckLoggingTest#shouldNotLogAnythingWhenCorrectVersionIsDeclared"
    ],
    "cicada": [
      "RouteActionTest#exTest",
      "RouteActionTest#reflect2",
      "RouteActionTest#reflect3",
      "RouteActionTest#costTest",
      "RouteActionTest#reflect"
    ],
    "sofa-tracer": [
      "LogTest#testLogback"
    ],
    "zt-exec": [
      "ProcessExecutorLoggerTest#testShortName",
      "ProcessExecutorLoggerTest#testClassNameWithShortName",
      "ProcessExecutorLoggerTest#testMyClassName",
      "ProcessExecutorLoggerTest#testFullName"
    ],
    "graphql-spqr": [
      "NonNullTest#testNonNullWithDefaultValueWarning",
      "TypeRegistryTest#nameUniquenessTest",
      "InterceptorTest#exceptionLogInterceptorTest",
      "InterceptorTest#authInterceptorTest",
      "RelayTest#testConflictingConnections"
    ],
    "amazon-kinesis-client": [
      "MultiLangDaemonTest#testSuccessfulLoggingConfiguration",
      "MultiLangDaemonTest#testUnsuccessfulLoggingConfiguration"
    ],
    "Argus": [
      "AbstractSchemaServiceTest#testPutNothingCached",
      "AbstractSchemaServiceTest#testPutEverythingCached",
      "AbstractSchemaServiceTest#testNumHoursUntilNextFlushBloomFilter",
      "AbstractSchemaServiceTest#testPutPartialCached",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndInertiaOne",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForMoreThanOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStampsReturnNull",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_Scenario1",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTime",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndZeroInertia",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeriesMultipleTriggers",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ClearNotification",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_OnCooldown",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_AlertWithMultipleMetricsNotificationSentForEach",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWehnNoDatapoints",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps2",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps3",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps4",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps5",
      "SystemConfiguratorTest#testLifecycle",
      "WardenServiceTest#testAssertSubsystemUsePermitted_AdminUser",
      "WardenServiceTest#testServiceIsSingleton",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
      "WardenServiceTest#testEnableWarden",
      "WardenServiceTest#testSuspendAdminUser",
      "WardenServiceTest#testAssertSubsystemUsePermitted_ExpiredSuspension",
      "WardenServiceTest#testSuspendUser",
      "WardenServiceTest#testDisableWarden",
      "WardenServiceTest#testModifyPolicyCounterEnablesAlert",
      "WardenServiceTest#testSubSystemSuspensionLevels",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NoSuspension",
      "WardenServiceTest#testUpdatePolicyCounterEnablesAlert",
      "WardenServiceTest#testWardenDashboard",
      "WardenServiceTest#testWardenAlertUsesUpdatedPolicyLimitForUser",
      "MainTest#testSchemaCommitClientInterrupt",
      "MainTest#testAlertClientInterrupt",
      "MainTest#testAnnotationCommitClientInterrupt",
      "MainTest#testMetricCommitClientInterrupt",
      "NamespaceServiceTest#testUserIsPermitted",
      "NamespaceServiceTest#testCreateNamespace",
      "NamespaceServiceTest#testFindNamespaceByPrimaryKey",
      "NamespaceServiceTest#testAdditionalUserIsPermitted",
      "NamespaceServiceTest#testNamespaceUnique",
      "NamespaceServiceTest#testAddAdditionalUsersToNamespace",
      "GlobalInterlockServiceTest#testObtainReleaseLock",
      "GlobalInterlockServiceTest#testObtainOnExpiredScheduleLock",
      "GlobalInterlockServiceTest#testLockExclusivity",
      "GlobalInterlockServiceTest#testObtainRefreshLock",
      "GlobalInterlockServiceTest#testReleaseNonexistentScheduleLock",
      "AlertServiceTest#testFindSharedAlertsByOwner",
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#testUpdateNotification",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#testAlertDelete",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testfindAlertsByOwner",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindAlertByNameAndOwner",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#findAlertsModifiedAfterDate",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testAlertDeleteCreateAnotherAlertWithSameName",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testFindAlertsByOwnerPaged",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser",
      "AlertServiceTest#testCountSharedAlertsMetaPaged",
      "AlertServiceTest#testFindPrivateAlertsPagedForNonPrivilegedUser",
      "AlertServiceTest#testAlertsCountContext",
      "AlertServiceTest#testCountAlertsByOwner",
      "AlertServiceTest#testfindAlertsByOwnerMeta",
      "AlertServiceTest#testDeletedTriggersInNotifications",
      "AlertServiceTest#testAlertEnqueue",
      "DashboardServiceTest#testFindSharedDashboardsByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsByOwner",
      "DashboardServiceTest#testFindDashboardsMetaByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwner",
      "DashboardServiceTest#testFindDashboardsMeta",
      "DashboardServiceTest#testDashboard_FindShareDelete",
      "DashboardServiceTest#testFindDashboardsByOwnerMeta",
      "DashboardServiceTest#testFindSharedDashboardsMetaByVersion",
      "DashboardServiceTest#testFindDashboardsByOwnerMetaAndByVersion",
      "DashboardServiceTest#testDashboardCrud",
      "DashboardServiceTest#testDashboard_FindShareDeleteByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMeta",
      "ManagementServiceTest#testPrivilegeGrant",
      "AuditServiceTest#testUpdateAudit",
      "AuditServiceTest#testFindAll",
      "AuditServiceTest#testCreateAudit",
      "AuditServiceTest#testFindByMessage",
      "AuditServiceTest#testFindByJPAEntity",
      "AuditServiceTest#testFindByHostName",
      "OAuthServiceTest#testAcceptOauthModifiedParams",
      "OAuthServiceTest#testAcceptOauth",
      "OAuthServiceTest#testCreateAuthorizationCode",
      "OAuthServiceTest#testAcceptOauthInvalidParams",
      "SchedulingServiceTest#testAlertSchedulingWithGlobalInterlock",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinMaxDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithTag",
      "MetricFederationTest#testEndPointFederationForkJoinMinDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsampler",
      "MetricFederationTest#testTimeFederationFork",
      "MonitorServiceTest#testAlertsCreatedOnStartMonitoring",
      "MonitorServiceTest#testConcurrentUpdates",
      "MonitorServiceTest#test_getCounterFromMetricName",
      "MonitorServiceTest#testServiceIsSingleton",
      "MonitorServiceTest#testEnableDisableMonitoring",
      "MonitorServiceTest#test_MonitoringDashboardNotNull",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithDownsampling",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags",
      "DefaultDiscoveryServiceTest#testWildcardQueriesNoMatch",
      "DefaultDiscoveryServiceTest#testNonWildcardQuery",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchExceedingLimit",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags1",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithinLimit",
      "UserServiceTest#testDefaultUserExistence",
      "UserServiceTest#testAdminUserExistence",
      "UserServiceTest#testUserCrud",
      "UserServiceTest#testUniqueUserCount",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricTagvRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutCreateUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutUpdateUsingScopeAndMetricSchemaIndex",
      "ChartServiceTest#testDeleteChartById",
      "ChartServiceTest#testDeleteChart",
      "ChartServiceTest#testGetChartsForEntity",
      "ChartServiceTest#testCreateChart",
      "ChartServiceTest#testGetChartByPrimaryKey",
      "ChartServiceTest#testGetChartsByOwner",
      "CallbackServiceTest#testCallbackNotifier",
      "MQServiceTest#testServiceIsSingleton",
      "MQServiceTest#testBulkPutAndGetMessages",
      "MQServiceTest#testPutAndBulkGetMessages",
      "MQServiceTest#testPutAndBulkGetMessagesMultiThredaing",
      "AbstractTSDBServiceTest#testCyclingIterator",
      "NotifierTest#testUpdatingTriggerName",
      "NotifierTest#testDBNotifier",
      "NotifierTest#testAbsoluteTimeStampsInExpression",
      "NotifierTest#testTemplateNaming",
      "CachedDiscoveryServiceTest#testWildcardExpansionWithinLimit",
      "CachedDiscoveryServiceTest#testWildcardExpansionExceedingLimit"
    ]
  },
  "com.google.guava:guava": {
    "apollo": [
      "ConfigControllerIntegrationTest#testQueryPublicConfigForNoAppIdPlaceHolder"
    ],
    "error-prone": [
      "FutureReturnValueIgnoredTest#testNegativeCase",
      "AsyncFunctionReturnsNullTest#testPositiveCase"
    ],
    "incubator-pinot": [
      "UploadRefreshDeleteIntegrationTest#testRefresh",
      "LLCRealtimeClusterSplitCommitIntegrationTest",
      "SegmentStatusCheckerIntegrationTest",
      "MetadataAndDictionaryAggregationPlanClusterIntegrationTest"
    ],
    "Jest": [
      "JestHttpClientConfiguredProxyIntegrationTest#testConnectionThroughConfiguredProxy",
      "JestHttpClientSystemWideProxyIntegrationTest#testConnectionThroughDefaultProxy"
    ],
    "AthenaX": [
      "InstanceManagerITest#testInstantiation",
      "JobDeployerITest#testCreateAthenaXCluster",
      "StartJobITest#testStartJob"
    ],
    "glowroot": [
      "PreInitializeWeavingClassesTest#shouldCheckHardcodedListAgainstReality"
    ],
    "jpmml-evaluator": [
      "ScalarVerificationTest#verify",
      "ScalarVerificationTest#verifyMapped",
      "DefaultChildTest#evaluate",
      "PredicateUtilTest#evaluateSimpleSetPredicate",
      "ClusteringTest#evaluateKMeansIris",
      "NoTrueChildStrategyTest#returnNullPrediction",
      "NoTrueChildStrategyTest#returnLastPrediction",
      "PredicateInternerTest#internSimpleSetPredicate",
      "ClassificationTest#evaluateProbitRegressionAudit",
      "ClassificationTest#evaluateLogisticRegressionAudit",
      "ClassificationTest#evaluateLogisticRegressionIris",
      "ContinuousResidualTest#evaluate",
      "RegressionTest#evaluateRegressionAuto",
      "RegressionTest#evaluateDecisionTreeAuto",
      "RegressionTest#evaluateModelEnsembleAuto",
      "RegressionTest#evaluateRegressionEnsembleAuto",
      "RegressionTest#evaluateGBTAuto",
      "RegressionTest#evaluatePolynomialRegressionAuto",
      "RegressionTest#evaluateGeneralRegressionAuto",
      "ModelEvaluationContextTest#evaluateMissing",
      "ModelEvaluationContextTest#evaluate",
      "ClusteringTest#evaluateHierarchicalClusteringIris",
      "RegressionOutputTest#evaluate",
      "TargetValueCountsTest#evaluate",
      "BayesInputTest#evaluate",
      "ComplexPartialScoreTest#evaluate",
      "CoxRegressionTest#evaluateCoxRegressionLung",
      "TransactionalSchemaTest#prepare",
      "TransactionalSchemaTest#evaluate",
      "CompoundRuleTest#evaluateDefault",
      "CompoundRuleTest#evaluate",
      "ClusteringNeighborhoodTest#evaluate",
      "FieldScopeTest#evaluate",
      "ClassificationTest#evaluateDecisionTreeAudit",
      "ClassificationTest#evaluateDecisionTreeIris",
      "ClassificationTest#evaluateRuleSetAudit",
      "ClassificationTest#evaluateModelEnsembleIris",
      "ClassificationTest#evaluateRuleSetIris",
      "ClassificationTest#evaluateGeneralRegressionAudit",
      "ClassificationTest#evaluateNeuralNetworkIris",
      "ClassificationTest#evaluateSupportVectorMachineIris",
      "ClassificationTest#evaluateDecisionTreeEnsembleIris",
      "ClassificationTest#evaluateDecisionTreeEnsembleAudit",
      "ClassificationTest#evaluateGeneralRegressionIris",
      "MissingValueStrategyTest#defaultChildMultiplePenalties",
      "MissingValueStrategyTest#defaultChildSinglePenalty",
      "MissingValueStrategyTest#nullPrediction",
      "MissingValueStrategyTest#lastPredictionDefault",
      "MissingValueStrategyTest#lastPrediction",
      "MissingValueStrategyTest#nullPredictionDefault",
      "TextUtilTest#normalize",
      "SparseArrayUtilTest#intSparseArray",
      "SparseArrayUtilTest#realSparseArray",
      "ClassificationOutputTest#evaluate",
      "PriorProbabilitiesTest#evaluate",
      "EmptyPPMatrixTest#evaluate",
      "CharacteristicReasonCodeTest#evaluate",
      "AssociationOutputTest#evaluate",
      "ModelChainEfficientCompositionTest#evaluateVirginica",
      "ModelChainEfficientCompositionTest#evaluateSetosa",
      "ModelChainEfficientCompositionTest#evaluateVersicolor",
      "ModelChainEfficientCompositionTest#getResultFields",
      "SelectAllTest#evaluate",
      "AttributeReasonCodeTest#evaluate",
      "RegressionTest#evaluateLibSVMAuto",
      "RegressionTest#evaluateRandomForestAuto",
      "RegressionTest#evaluateKernlabSVMAuto",
      "RegressionTest#evaluateDecisionTreeXFormAuto",
      "RegressionTest#evaluateRegressionXformAuto",
      "RegressionTest#evaluateGeneralRegressionXformAuto",
      "RegressionTest#evaluateGBMAuto",
      "RegressionTest#evaluateNeuralNetworkAuto",
      "DefaultValueTest#evaluate",
      "CategoricalResidualTest#evaluate",
      "AlternateBinaryTargetCategoryTest#evaluate",
      "HasNodeRegistryTest#getPath",
      "CollectionVerificationTest#verify",
      "SimpleRuleTest#evaluateDefault",
      "SimpleRuleTest#evaluate",
      "InputFieldUtilTest#prepareContinuousInputValue",
      "ModelChainSimpleTest#evaluateSetosa",
      "ModelChainSimpleTest#getResultFields",
      "TargetUtilTest#evaluateRegressionDefault",
      "TargetUtilTest#evaluateClassificationDefault",
      "MiningModelEvaluationContextTest#evaluate",
      "ExpressionUtilTest#evaluateDiscretize",
      "ExpressionUtilTest#evaluateMapValues",
      "ExpressionUtilTest#evaluateTextIndexNormalization",
      "ExpressionUtilTest#evaluateTextIndex",
      "MixedNeighborhoodTest#evaluateLastVsRest",
      "MixedNeighborhoodTest#evaluate",
      "MixedNeighborhoodTest#evaluateFirstVsRest",
      "ModelChainCompositionTest#evaluateVirginica",
      "ModelChainCompositionTest#evaluateSetosa",
      "ModelChainCompositionTest#evaluateVersicolor",
      "ModelChainCompositionTest#getResultFields",
      "CategoricalSchemaTest#evaluate",
      "EmptyTargetCategoryTest#evaluate",
      "ModelNestingTest#evaluate",
      "ClassificationTest#evaluateRandomForestXformIris",
      "ClassificationTest#evaluateNaiveBayesAudit",
      "ClassificationTest#evaluateLibSVMIris",
      "ClassificationTest#evaluateRandomForestIris",
      "ClassificationTest#evaluateNeuralNetworkAudit",
      "ClassificationTest#evaluateKernlabSVMAudit",
      "ClassificationTest#evaluateKernlabSVMIris",
      "ClassificationTest#evaluateDecisionTreeXformIris",
      "ClassificationTest#evaluateNaiveBayesIris",
      "ClassificationTest#evaluateGeneralRegressionVersicolor",
      "ClassificationTest#evaluateLibSVMAudit",
      "ClassificationTest#evaluateRandomForestAudit",
      "ClusteringTest#evaluateKMeansEnsembleIris",
      "AssociationRulesTest#evaluateAssociationRulesShopping",
      "ContrastMatrixTest#evaluate",
      "VectorInstanceTest#evaluate",
      "MissingPredictionTest#evaluate",
      "TieBreakTest#firstLevel",
      "TieBreakTest#secondLevel",
      "MatrixUtilTest#diagonalMatrix",
      "MatrixUtilTest#anyMatrixDense",
      "MatrixUtilTest#symmetricMatrix",
      "CategoricalValueTest#evaluate",
      "TransformationDictionaryTest#evaluateSelfRef",
      "TransformationDictionaryTest#evaluateChain",
      "TransformationDictionaryTest#evaluateGroup",
      "TransformationDictionaryTest#evaluatePower",
      "TransformationDictionaryTest#evaluateShift",
      "TransformationDictionaryTest#evaluateRef",
      "TransformationDictionaryTest#evaluateComplexTable",
      "TransformationDictionaryTest#evaluateSimpleTable",
      "RankingTest#evaluate"
    ],
    "dble": [
      "IncrSequenceZKHandlerTest#testCorrectnessAndEfficiency"
    ],
    "openscoring": [
      "ModelResourceTest#linearRegressionAuto",
      "ModelResourceTest#associationRulesShopping",
      "ModelResourceTest#decisionTreeIris"
    ],
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange"
    ]
  },
  "org.apache.logging.log4j:log4j-core": {
    "immutables": [
      "ElasticPersonTest#regex_forElastic",
      "ElasticAggregationTest#no_groupBy",
      "ElasticAggregationTest#agg1",
      "ElasticAggregationTest#agg2",
      "ElasticAggregationTest#empty",
      "ScrollingTest#withLimit",
      "ScrollingTest#noLimit",
      "ElasticIntegrationTests#projection",
      "ElasticIntegrationTests#nullable",
      "ElasticIntegrationTests#comparison",
      "ElasticIntegrationTests#optional",
      "ElasticIntegrationTests#empty",
      "ElasticIntegrationTests#equality",
      "ElasticIntegrationTests#basic",
      "ElasticIntegrationTests#startsWith",
      "ElasticIntegrationTests#contains",
      "ElasticIntegrationTests#fetch",
      "ElasticIntegrationTests#whitespace",
      "ElasticIntegrationTests#endsWith"
    ],
    "Jest": [
      "CatIntegrationTest#shouldReturnEmptyPlainTextForIndices"
    ],
    "servicecomb-pack": [
      "MemoryAlphaTccServerTest#assertOnSwitchOtherCallbackInstance",
      "MemoryAlphaTccServerTest#assertOnTccTransactionFailedEnded",
      "MemoryAlphaTccServerTest#assertOnConnect",
      "MemoryAlphaTccServerTest#assertOnTransactionStart",
      "MemoryAlphaTccServerTest#assertOnCallbackNotExist",
      "MemoryAlphaTccServerTest#assertOnCallbacksExecuteError",
      "MemoryAlphaTccServerTest#assertOnParticipated",
      "MemoryAlphaTccServerTest#assertOnTccTransactionSucceedEnded",
      "MemoryAlphaTccServerTest#assertOnDisConnect",
      "AlphaIntegrationWithRandomPortTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#persistsEvent",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithRandomPortTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithRandomPortTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithRandomPortTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithRandomPortTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithRandomPortTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutSagaStartedEvent",
      "AlphaTccEventControllerTest#retrievesEventsFromRepo",
      "AlphaIntegrationTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationTest#persistsEvent",
      "AlphaIntegrationTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationTest#getCompensateCommandOnFailure",
      "AlphaIntegrationTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationTest#closeStreamOnDisconnected",
      "AlphaIntegrationTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationTest#removeCallbackOnClientDown",
      "AlphaIntegrationTest#abortTimeoutSagaStartedEvent",
      "RdbAlphaTccServerTest#assertOnSwitchOtherCallbackInstance",
      "RdbAlphaTccServerTest#assertOnTccTransactionFailedEnded",
      "RdbAlphaTccServerTest#assertOnConnect",
      "RdbAlphaTccServerTest#assertOnTransactionStart",
      "RdbAlphaTccServerTest#assertOnCallbackNotExist",
      "RdbAlphaTccServerTest#assertOnCallbacksExecuteError",
      "RdbAlphaTccServerTest#assertOnParticipated",
      "RdbAlphaTccServerTest#assertOnTccTransactionSucceedEnded",
      "RdbAlphaTccServerTest#assertOnDisConnect",
      "TccTxEventServiceTest#handleTimeoutGlobalTraction",
      "TccTxEventServiceTest#clearUpCompletedTxFromGlobalTxTable",
      "TccTxEventServiceTest#onlyCoordinateParticipatedEventOnce",
      "TccTxEventServiceTest#clearUpCompletedTxFromGlobalTxTableMoreThanOne",
      "ClusterLockServiceTest#testSlaveNodeUpdateLockLater",
      "ClusterLockServiceTest#testSlaveNodeWhenDuplicateKey",
      "ClusterLockServiceTest#testMasterNode",
      "ClusterLockServiceTest#testSlaveNodeWhenInitLockException",
      "ClusterLockServiceTest#testSlaveNodeWhenUpdateLockException",
      "TccTxEventServiceTransactionTest#rollbackAfterSaveTccTxEventDbFailure",
      "SagaTransactionsControllerTest#findTransactionsTest",
      "SagaTransactionsControllerTest#getTransactionsTest",
      "SagaTransactionsControllerTest#getDashboardStats",
      "SagaTransactionsControllerTest#getRecentTransactionsTest",
      "AlphaIntegrationWithSSLTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithSSLTest#persistsEvent",
      "AlphaIntegrationWithSSLTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithSSLTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithSSLTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithSSLTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithSSLTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithSSLTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithSSLTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithSSLTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithSSLTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithSSLTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithSSLTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithSSLTest#abortTimeoutSagaStartedEvent",
      "TccCallbackEngineTest#sendCoordinateFailedForOmegaDown",
      "TccCallbackEngineTest#sendCoordinateCommandAfterTccEnd",
      "TccCallbackEngineTest#doRetryCoordinateTillOmegaReceived",
      "AlphaEventControllerTest#retrievesEventsFromRepo"
    ],
    "httpcomponents-client": [
      "TestDefaultAsyncCacheInvalidator#flushesEntrySpecifiedByContentLocationIfEntryHasNoDate",
      "TestDefaultAsyncCacheInvalidator#flushesEntryIfFresherAndSpecifiedByContentLocation",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfEtagsMatch",
      "TestDefaultAsyncCacheInvalidator#testInvalidatesUrisInLocationHeadersOnPUTs",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateGETCacheEntryIfSubsequentGETRequestsAreMadeToTheSameURI",
      "TestDefaultAsyncCacheInvalidator#flushesEntryIfFresherAndSpecifiedByRelativeContentLocation",
      "TestDefaultAsyncCacheInvalidator#testVariantURIsAreFlushedAlso",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateUrisInContentLocationHeadersOnPUTsToDifferentHosts",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushEntryForUnsuccessfulResponse",
      "TestDefaultAsyncCacheInvalidator#testInvalidatesUrisInContentLocationHeadersOnPUTs",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateHEADCacheEntry",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfResponseHasNoEtag",
      "TestDefaultAsyncCacheInvalidator#flushesEntryIfFresherAndSpecifiedByLocation",
      "TestDefaultAsyncCacheInvalidator#testInvalidatesHEADCacheEntryIfSubsequentGETRequestsAreMadeToTheSameURI",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushEntryIfContentLocationFromDifferentHost",
      "TestDefaultAsyncCacheInvalidator#testInvalidatesRelativeUrisInContentLocationHeadersOnPUTs",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfEntryHasNoEtag",
      "TestDefaultAsyncCacheInvalidator#flushesEntryIfFresherAndSpecifiedByNonCanonicalContentLocation",
      "TestDefaultAsyncCacheInvalidator#flushesEntrySpecifiedByContentLocationIfEntryHasMalformedDate",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateHEADCacheEntryIfSubsequentHEADRequestsAreMadeToTheSameURI",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushForResponsesWithoutContentLocation",
      "TestDefaultAsyncCacheInvalidator#flushesEntrySpecifiedByContentLocationIfResponseHasMalformedDate",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateHEADRequest",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushEntryIfNotInCache",
      "TestDefaultAsyncCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfOlder",
      "TestDefaultAsyncCacheInvalidator#testInvalidatesVariantHEADCacheEntriesIfSubsequentGETRequestsAreMadeToTheSameURI",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateGETRequest",
      "TestDefaultAsyncCacheInvalidator#testInvalidatesRequestsThatArentGETorHEAD",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateRequestsWithClientCacheControlHeaders",
      "TestDefaultAsyncCacheInvalidator#flushesEntrySpecifiedByContentLocationIfResponseHasNoDate",
      "TestDefaultAsyncCacheInvalidator#testDoesNotInvalidateRequestsWithClientPragmaHeaders",
      "TestHttpClientConnectionOperator#testUpgradeUpsupportedScheme",
      "TestHttpClientConnectionOperator#testConnectExplicitAddress",
      "TestHttpClientConnectionOperator#testConnectTimeout",
      "TestHttpClientConnectionOperator#testConnectFailure",
      "TestHttpClientConnectionOperator#testUpgrade",
      "TestHttpClientConnectionOperator#testUpgradeNonLayeringScheme",
      "TestHttpClientConnectionOperator#testConnectFailover",
      "TestHttpClientConnectionOperator#testConnect",
      "TestMainClientExec#testExecRequestPersistentConnectionNoResponseEntity",
      "TestMainClientExec#testExecHttpException",
      "TestMainClientExec#testExecIOException",
      "TestMainClientExec#testExecRequestNonPersistentConnectionNoResponseEntity",
      "TestMainClientExec#testExecRequestPersistentConnection",
      "TestMainClientExec#testExecRequestNonPersistentConnection",
      "TestMainClientExec#testExecConnectionShutDown",
      "TestMainClientExec#testExecRuntimeException",
      "TestMainClientExec#testExecRequestConnectionRelease",
      "TestRFC5861Compliance#testStaleIfErrorInResponseYieldsToProxyRevalidateForSharedCache",
      "TestRFC5861Compliance#testStaleIfErrorInRequestIsFalseReturnsError",
      "TestRFC5861Compliance#testStaleIfErrorInResponseIsTrueReturnsStaleEntryWithWarning",
      "TestRFC5861Compliance#testStaleWhileRevalidateYieldsToProxyRevalidateForSharedCache",
      "TestRFC5861Compliance#testStaleWhileRevalidateYieldsToExplicitFreshnessRequest",
      "TestRFC5861Compliance#testStaleWhileRevalidateYieldsToMustRevalidate",
      "TestRFC5861Compliance#testStaleIfErrorInResponseYieldsToMustRevalidate",
      "TestRFC5861Compliance#testStaleWhileRevalidateReturnsStaleEntryWithWarning",
      "TestRFC5861Compliance#testStaleIfErrorInResponseYieldsToExplicitFreshnessRequest",
      "TestRFC5861Compliance#testCanAlsoServeStale304sWhileRevalidating",
      "TestRFC5861Compliance#testConsumesErrorResponseWhenServingStale",
      "TestRFC5861Compliance#testStaleIfErrorInResponseIsFalseReturnsError",
      "TestRFC5861Compliance#testStaleIfErrorInRequestIsTrueReturnsStaleNonRevalidatableEntryWithWarning",
      "TestRFC5861Compliance#testStaleIfErrorInRequestIsTrueReturnsStaleEntryWithWarning",
      "TestRFC5861Compliance#testStaleIfErrorInResponseNeedNotYieldToProxyRevalidateForPrivateCache",
      "TestRFC5861Compliance#testStaleWhileRevalidateReturnsStaleNonRevalidatableEntryWithWarning",
      "TestConnectExec#testExecAcquireConnection",
      "TestConnectExec#testEstablishRouteViaProxyTunnelFailure",
      "TestConnectExec#testEstablishRouteViaProxyTunnelRetryOnAuthChallengePersistentConnection",
      "TestConnectExec#testEstablishRouteViaProxyTunnelRetryOnAuthChallengeNonPersistentConnection",
      "TestConnectExec#testEstablishRouteViaProxyTunnelMultipleHops",
      "TestConnectExec#testEstablishDirectRoute",
      "TestConnectExec#testEstablishRouteDirectProxy",
      "TestConnectExec#testEstablishRouteViaProxyTunnel",
      "TestConnectExec#testEstablishRouteViaProxyTunnelUnexpectedResponse",
      "TestSSLSocketFactory#testSSLTrustVerificationOverrideWithCustsom",
      "TestSSLSocketFactory#testClientAuthSSLFailure",
      "TestSSLSocketFactory#testSSLTrustVerificationOverrideWithTrustSelfSignedStrategy",
      "TestSSLSocketFactory#testBasicSSL",
      "TestSSLSocketFactory#testSSLTrustVerification",
      "TestSSLSocketFactory#testBasicDefaultHostnameVerifier",
      "TestSSLSocketFactory#testSSLTrustVerificationOverrideWithTrustAllStrategy",
      "TestSSLSocketFactory#testClientAuthSSL",
      "TestSSLSocketFactory#testSSLDisabledByDefault",
      "TestSHA256HashingScheme#canHash",
      "TestProtocolRequirements#testMustIncludeProxyAuthenticateHeaderFromAnOrigin407Response",
      "TestProtocolRequirements#testSharedCacheMayCacheAuthorizedResponsesWithCacheControlPublic",
      "TestProtocolRequirements#testGenerates504IfCannotRevalidateAMustRevalidateEntry",
      "TestProtocolRequirements#testCannotCombinePartialResponseIfCacheEntryDoesNotHaveACacheValidator",
      "TestProtocolRequirements#testResponsesToTRACEsAreNotCached",
      "TestProtocolRequirements#testOrderOfMultipleContentEncodingHeadersIsPreservedOnResponses",
      "TestProtocolRequirements#testOrderOfMultipleAllowHeadersIsPreservedOnResponses",
      "TestProtocolRequirements#testConditionalRequestWhereAllValidatorsMatchMayBeServedFromCache",
      "TestProtocolRequirements#testHEADResponseWithUpdatedContentMD5FieldMakeACacheEntryStale",
      "TestProtocolRequirements#testDoesNotModifyContentMD5HeaderOnRequest",
      "TestProtocolRequirements#testDoesNotAddContentLocationToRequestIfNotPresent",
      "TestProtocolRequirements#testValidationMustUseETagIfProvidedByOriginServer",
      "TestProtocolRequirements#testTransmitsAgeHeaderIfIncomingAgeHeaderTooBig",
      "TestProtocolRequirements#testOrderOfMultipleViaHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testStripsBadlyDatedWarningsFromForwardedResponses",
      "TestProtocolRequirements#testDoesNotAddEtagToOriginResponse",
      "TestProtocolRequirements#testCacheIsNotUsedWhenRespondingToRequestWithCacheControlNoCache",
      "TestProtocolRequirements#test206ResponseToIfRangeWithStrongValidatorReturnsAllEntityHeaders",
      "TestProtocolRequirements#test304ResponseGeneratedFromCacheIncludesExpiresCacheControlAndOrVaryIfResponseMightDiffer",
      "TestProtocolRequirements#testUpdatesWarningHeadersOnValidation",
      "TestProtocolRequirements#testWarnDatesAreAddedToWarningsOnLowerProtocolVersions",
      "TestProtocolRequirements#test206ContainsContentLocationIfA200ResponseWouldHaveIncludedIt",
      "TestProtocolRequirements#testRequestsNotExpecting100ContinueBehaviorShouldNotSetExpectContinueHeader",
      "TestProtocolRequirements#test206ResponseReturnedToClientMustHaveDateHeader",
      "TestProtocolRequirements#testDoesNotAddContentTypeHeaderToCachedResponseWithNoTransformIfNotPresent",
      "TestProtocolRequirements#testMustDiscardCachedPartialResponseIfCacheValidatorsDoNotStronglyMatchAndDateHeadersAreEqual",
      "TestProtocolRequirements#testDoesNotForwardOPTIONSWhenMaxForwardsIsZeroOnAbsoluteURIRequest",
      "TestProtocolRequirements#testDoesNotAddContentTypeToRequestIfNotPresent",
      "TestProtocolRequirements#testUnknownHeadersOnResponsesAreForwarded",
      "TestProtocolRequirements#testOrderOfMultipleContentEncodingHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testDoesNotAddLastModifiedToRequestIfNotPresent",
      "TestProtocolRequirements#test100ContinueResponsesAreNotForwardedTo1_0ClientsWhoDidNotAskForThem",
      "TestProtocolRequirements#testRequestsWithLowerProtocolVersionsGetUpgradedTo1_1",
      "TestProtocolRequirements#testOrderOfMultipleAcceptHeaderValuesIsPreservedOnRequests",
      "TestProtocolRequirements#testDoesNotModifyServerResponseHeader",
      "TestProtocolRequirements#testDoesNotAddContentEncodingHeaderToCachedResponseWithNoTransformIfNotPresent",
      "TestProtocolRequirements#testDELETERequestsAreWrittenThroughToOrigin",
      "TestProtocolRequirements#testMustDiscardLeastRecentPartialResponseIfCacheValidatorsDoNotStronglyMatch",
      "TestProtocolRequirements#testRemovesWarningHeaderIfAllWarnValuesAreBadlyDated",
      "TestProtocolRequirements#testPostInvalidatesCacheForThatUriInContentLocationHeader",
      "TestProtocolRequirements#testDoesNotAddContentTypeHeaderToRequestIfNotPresent",
      "TestProtocolRequirements#test2xxWarningsAreNotDeletedAfterSuccessfulRevalidation",
      "TestProtocolRequirements#testNoStoreOnResponseIsNotStoredInCache",
      "TestProtocolRequirements#test302ResponseWithoutExplicitCacheabilityIsNotReturnedFromCache",
      "TestProtocolRequirements#testExpiresHeaderMatchesDateIfAddedToCacheHit",
      "TestProtocolRequirements#testLowerOriginResponsesUpgradedToOurVersion1_1",
      "TestProtocolRequirements#test206ResponseGeneratedFromCacheMustHaveContentRangeOrMultipartByteRangesContentType",
      "TestProtocolRequirements#testSharedCacheMustUseNewRequestHeadersWhenRevalidatingAuthorizedResponsesWithMustRevalidate",
      "TestProtocolRequirements#testProperlyFormattedViaHeaderIsAddedToResponses",
      "TestProtocolRequirements#testHigher1_XProtocolVersionsDowngradeTo1_1",
      "TestProtocolRequirements#testExpectHeadersAreForwardedOnRequests",
      "TestProtocolRequirements#testCacheMissOnGETUsesOriginResponse",
      "TestProtocolRequirements#testOrderOfMultipleAcceptCharsetHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testDELETEWithIfNoneMatchWeakETagIsNotAllowed",
      "TestProtocolRequirements#testDoesNotModifyContentLocationHeaderOnRequest",
      "TestProtocolRequirements#testPutDoesNotInvalidateCacheForUriInContentLocationHeadersFromOtherHosts",
      "TestProtocolRequirements#test304ResponseGeneratedFromCacheIncludesContentLocationIfOriginResponseDid",
      "TestProtocolRequirements#testOrderOfMultipleAcceptEncodingHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testHEADResponseWithUpdatedLastModifiedFieldMakeACacheEntryStale",
      "TestProtocolRequirements#testDeleteInvalidatesCacheForThatUriInLocationHeader",
      "TestProtocolRequirements#testSubrangeGETWithWeakETagIsNotAllowed",
      "TestProtocolRequirements#testOrderOfMultipleWWWAuthenticateHeadersIsPreservedOnResponses",
      "TestProtocolRequirements#testCONNECTRequestsAreWrittenThroughToOrigin",
      "TestProtocolRequirements#testCachedResponsesWithMissingDateHeadersShouldBeAssignedOne",
      "TestProtocolRequirements#testExpiresHeaderEqualToDateHeaderIsTreatedAsStale",
      "TestProtocolRequirements#testDoesNotTransmitNoCacheDirectivesWithFieldsDownstream",
      "TestProtocolRequirements#testExpiresHeaderMatchesDateIfAddedToOriginResponse",
      "TestProtocolRequirements#testNoCacheOnFieldIsNotReturnedWithoutRevalidation",
      "TestProtocolRequirements#test206ResponseIsNotCombinedWithPreviousContentIfETagDoesNotMatch",
      "TestProtocolRequirements#testSubrangeGETMustUseStrongComparisonForCachedResponse",
      "TestProtocolRequirements#testOrderOfMultipleWarningHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testMustNotAddMultipartByteRangeContentTypeTo416Response",
      "TestProtocolRequirements#testCacheControlPrivateIsNotCacheableBySharedCache",
      "TestProtocolRequirements#testOrderOfMultiplePragmaHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testSharedCacheMustRevalidateAuthorizedResponsesWhenSMaxAgeIsZero",
      "TestProtocolRequirements#test206ResponseIsNotCombinedWithPreviousContentIfLastModifiedDoesNotMatch",
      "TestProtocolRequirements#testPutDoesNotInvalidateCacheForUriInLocationHeadersFromOtherHosts",
      "TestProtocolRequirements#testMultiHeadersAreSuccessfullyReplacedOn304Validation",
      "TestProtocolRequirements#testResponsesToPUTsAreNotCached",
      "TestProtocolRequirements#testCacheWithoutSupportForRangeAndContentRangeHeadersDoesNotCacheA206Response",
      "TestProtocolRequirements#testNoStoreOnResponseIsNotStoredInCacheEvenWithContraryIndicators",
      "TestProtocolRequirements#testDoesNotModifyContentLocationHeaderFromOrigin",
      "TestProtocolRequirements#testOrderOfMultipleViaHeadersIsPreservedOnResponses",
      "TestProtocolRequirements#testNoCacheCannotSatisfyASubsequentRequestWithoutRevalidationEvenWithContraryIndications",
      "TestProtocolRequirements#testMustDiscardLeastRecentPartialResponseIfCachedResponseDoesNotHaveCacheValidator",
      "TestProtocolRequirements#test1xxWarningsAreDeletedAfterSuccessfulRevalidation",
      "TestProtocolRequirements#testDoesNotAddContentRangeHeaderToCachedResponseWithNoTransformIfNotPresent",
      "TestProtocolRequirements#testOrderOfMultipleContentEncodingHeaderValuesIsPreserved",
      "TestProtocolRequirements#testDoesNotAddContentMD5ToRequestIfNotPresent",
      "TestProtocolRequirements#testDoesNotModifyContentEncodingHeaderOnCachedResponseWithNoTransform",
      "TestProtocolRequirements#test206ResponseToConditionalRangeRequestDoesNotIncludeOtherEntityHeaders",
      "TestProtocolRequirements#test206ResponseGeneratedFromCacheMustHaveDateHeader",
      "TestProtocolRequirements#testDoesNotModifyAllowHeaderWithUnknownMethods",
      "TestProtocolRequirements#testStaleEntryWithMustRevalidateIsNotUsedWithoutRevalidatingWithOrigin",
      "TestProtocolRequirements#testOrderOfMultipleCacheControlHeadersIsPreservedOnResponses",
      "TestProtocolRequirements#testSharedCacheMustUseNewRequestHeadersWhenRevalidatingAuthorizedResponsesWithSMaxAge",
      "TestProtocolRequirements#testPutInvalidatesCacheForThatUriInRelativeContentLocationHeader",
      "TestProtocolRequirements#testNoStoreOnRequestIsNotStoredInCacheEvenIfResponseMarkedCacheable",
      "TestProtocolRequirements#testMustReturnAFreshEnoughCacheEntryIfItHasIt",
      "TestProtocolRequirements#testDoesNotModifyContentLocationFromOriginOnCacheHit",
      "TestProtocolRequirements#testPutInvalidatesCacheForThatUriInLocationHeader",
      "TestProtocolRequirements#testUnknownHeadersOnRequestsAreForwarded",
      "TestProtocolRequirements#testOrderOfMultipleCacheControlHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testDoesNotModifyLastModifiedFromOriginOnCacheHit",
      "TestProtocolRequirements#testDoesNotAddContentRangeHeaderToRequestIfNotPresent",
      "TestProtocolRequirements#testDELETEWithIfMatchWeakETagIsNotAllowed",
      "TestProtocolRequirements#testDoesNotModifyContentMD5HeaderFromOrigin",
      "TestProtocolRequirements#test303ResponsesAreNotCached",
      "TestProtocolRequirements#testResponsesToDELETEsAreNotCached",
      "TestProtocolRequirements#testConditionalRequestWhereNotAllValidatorsMatchCannotBeServedFromCache",
      "TestProtocolRequirements#testMustDiscardLeastRecentPartialResponseIfIncomingRequestDoesNotHaveCacheValidator",
      "TestProtocolRequirements#testCacheIsNotUsedWhenRespondingToRequestWithPragmaNoCache",
      "TestProtocolRequirements#testOrderOfMultiplePragmaHeadersIsPreservedOnResponses",
      "TestProtocolRequirements#testCannotCombinePartialResponseIfCacheValidatorsDoNotStronglyMatch",
      "TestProtocolRequirements#testDoesNotModifyExpiresHeaderFromOrigin",
      "TestProtocolRequirements#testExpiresZeroHeaderIsTreatedAsStale",
      "TestProtocolRequirements#testPUTWithIfNoneMatchWeakETagIsNotAllowed",
      "TestProtocolRequirements#testResponseToAHEADRequestMustNotHaveABody",
      "TestProtocolRequirements#testOrderOfMultipleExpectHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testUnknownResponseStatusCodesAreNotCached",
      "TestProtocolRequirements#testDoesNotAddContentRangeToRequestIfNotPresent",
      "TestProtocolRequirements#testDoesNotAddContentLocationToOriginResponse",
      "TestProtocolRequirements#testHEADResponseWithUpdatedContentLengthFieldMakeACacheEntryStale",
      "TestProtocolRequirements#testDoesNotModifyContentRangeHeaderOnCachedResponseWithNoTransform",
      "TestProtocolRequirements#testDoesNotAddContentMD5ToOriginResponse",
      "TestProtocolRequirements#testDoesNotAddETagHeaderOnCacheHit",
      "TestProtocolRequirements#testAgeHeaderPopulatedFromCacheEntryCurrentAge",
      "TestProtocolRequirements#testViaHeaderOnResponseProperlyRecordsOriginProtocol",
      "TestProtocolRequirements#testMustServeAppropriateErrorOrWarningIfNoOriginCommunicationPossible",
      "TestProtocolRequirements#test206ResponseGeneratedFromCacheMustHaveABodyThatMatchesContentLengthHeaderIfPresent",
      "TestProtocolRequirements#testPostDoesNotInvalidateCacheForUriInContentLocationHeadersFromOtherHosts",
      "TestProtocolRequirements#testNonmatchingVariantCannotBeServedFromCacheUnlessConditionallyValidated",
      "TestProtocolRequirements#test304ResponseGeneratedFromCacheIncludesEtagIfOriginResponseDid",
      "TestProtocolRequirements#testForwardsUnknownHeadersOnRequestsFromHigherProtocolVersions",
      "TestProtocolRequirements#testWarning110IsAddedToStaleResponses",
      "TestProtocolRequirements#testPOSTRequestsAreWrittenThroughToOrigin",
      "TestProtocolRequirements#testGenerates504IfSharedCacheCannotRevalidateAProxyRevalidateEntry",
      "TestProtocolRequirements#testDoesNotModifyETagHeaderOnRequest",
      "TestProtocolRequirements#testPUTRequestsAreWrittenThroughToOrigin",
      "TestProtocolRequirements#testMalformedExpiresHeaderIsTreatedAsStale",
      "TestProtocolRequirements#testDoesNotAddETagToRequestIfNotPresent",
      "TestProtocolRequirements#test304ResponseGeneratedFromCacheIncludesDateHeader",
      "TestProtocolRequirements#testSharedCacheMayCacheAuthorizedResponsesWithMustRevalidate",
      "TestProtocolRequirements#testStaleEntryWithProxyRevalidateOnSharedCacheIsNotUsedWithoutRevalidatingWithOrigin",
      "TestProtocolRequirements#testCannotServeFromCacheForVaryStar",
      "TestProtocolRequirements#test206ResponsesAreNotCachedIfTheCacheDoesNotSupportRangeAndContentRangeHeaders",
      "TestProtocolRequirements#test204ResponsesDoNotContainMessageBodies",
      "TestProtocolRequirements#testDoesNotAddContentTypeHeaderToOriginResponseWithNoTransformIfNotPresent",
      "TestProtocolRequirements#testOrderOfMultipleTransferEncodingsInSingleHeadersIsPreserved",
      "TestProtocolRequirements#testPutInvalidatesCacheForThatUriInContentLocationHeader",
      "TestProtocolRequirements#testUnknownMethodRequestsAreWrittenThroughToOrigin",
      "TestProtocolRequirements#testDoesNotAddAMaxForwardsHeaderToForwardedOPTIONSRequests",
      "TestProtocolRequirements#testDeleteInvalidatesCacheForThatUriInRelativeContentLocationHeader",
      "TestProtocolRequirements#testStripsBadlyDatedWarningsFromStoredResponses",
      "TestProtocolRequirements#testCannotCombinePartialResponseIfIncomingResponseDoesNotHaveACacheValidator",
      "TestProtocolRequirements#testDeleteDoesNotInvalidateCacheForUriInLocationHeadersFromOtherHosts",
      "TestProtocolRequirements#test304GeneratedFromCacheOnWeakValidatorDoesNotIncludeOtherEntityHeaders",
      "TestProtocolRequirements#testPUTWithIfMatchWeakETagIsNotAllowed",
      "TestProtocolRequirements#testOrderOfMultipleTransferEncodingHeadersIsPreserved",
      "TestProtocolRequirements#testDoesNotAddContentEncodingHeaderToOriginResponseWithNoTransformIfNotPresent",
      "TestProtocolRequirements#testDoesNotModifyContentTypeHeaderFromOriginResponseWithNoTransform",
      "TestProtocolRequirements#testOrderOfMultipleContentLanguageHeadersIsPreservedOnResponses",
      "TestProtocolRequirements#testHEADResponseWithUpdatedETagFieldMakeACacheEntryStale",
      "TestProtocolRequirements#testDoesNotAddLastModifiedToOriginResponse",
      "TestProtocolRequirements#testPostDoesNotInvalidateCacheForUriInLocationHeadersFromOtherHosts",
      "TestProtocolRequirements#testDeleteToUriInvalidatesCacheForThatUri",
      "TestProtocolRequirements#testDoesNotModifyLastModifiedHeaderFromOrigin",
      "TestProtocolRequirements#test200ResponseToOPTIONSWithNoBodyShouldIncludeContentLengthZero",
      "TestProtocolRequirements#testUpdatedEndToEndHeadersFrom304ArePassedOnResponseAndUpdatedInCacheEntry",
      "TestProtocolRequirements#testDoesNotModifyContentMD5FromOriginOnCacheHit",
      "TestProtocolRequirements#testPostInvalidatesCacheForThatUriInLocationHeader",
      "TestProtocolRequirements#testAttachesWarningHeaderWhenGeneratingStaleResponse",
      "TestProtocolRequirements#testMustDiscardLeastRecentPartialResponseIfCacheValidatorsDoNotStronglyMatchEvenIfResponsesOutOfOrder",
      "TestProtocolRequirements#testHigherMajorProtocolVersionsOnRequestSwitchToTunnelBehavior",
      "TestProtocolRequirements#testDoesNotAddContentLocationHeaderOnCacheHit",
      "TestProtocolRequirements#testDoesNotAddContentMD5HeaderOnCacheHit",
      "TestProtocolRequirements#testPostToUriInvalidatesCacheForThatUri",
      "TestProtocolRequirements#test304ResponseWithDateHeaderForwardedFromOriginIncludesDateHeader",
      "TestProtocolRequirements#testMustReturnACacheEntryIfItCanRevalidateIt",
      "TestProtocolRequirements#testNoStoreOnRequestIsNotStoredInCache",
      "TestProtocolRequirements#testDeleteDoesNotInvalidateCacheForUriInContentLocationHeadersFromOtherHosts",
      "TestProtocolRequirements#testHeuristicCacheOlderThan24HoursHasWarningAttached",
      "TestProtocolRequirements#testPostInvalidatesCacheForRelativeUriInContentLocationHeader",
      "TestProtocolRequirements#testDoesNotModifyContentEncodingHeaderFromOriginResponseWithNoTransform",
      "TestProtocolRequirements#testDoesNotModifyContentRangeHeaderFromOriginResponseWithNoTransform",
      "TestProtocolRequirements#testTransferCodingsAreNotSentToAnHTTP_1_0Client",
      "TestProtocolRequirements#testDoesNotAddContentEncodingHeaderToRequestIfNotPresent",
      "TestProtocolRequirements#testOrderOfMultipleContentLanguageHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testNotModifiedOfNonCachedEntityShouldRevalidateWithUnconditionalGET",
      "TestProtocolRequirements#testCacheControlPrivateOnFieldIsNotReturnedBySharedCache",
      "TestProtocolRequirements#testDoesNotModifyExpiresHeaderFromOriginOnCacheHit",
      "TestProtocolRequirements#testCacheEntryIsUpdatedWithNewFieldValuesIn304Response",
      "TestProtocolRequirements#testDoesNotModifyContentTypeHeaderOnCachedResponseWithNoTransform",
      "TestProtocolRequirements#testDoesNotAddContentEncodingToRequestIfNotPresent",
      "TestProtocolRequirements#testNoCacheCannotSatisfyASubsequentRequestWithoutRevalidation",
      "TestProtocolRequirements#testMustIncludeAllowHeaderFromAnOrigin405Response",
      "TestProtocolRequirements#testDoesNotModifyLastModifiedHeaderOnRequest",
      "TestProtocolRequirements#testResponsesToPOSTWithoutCacheControlOrExpiresAreNotCached",
      "TestProtocolRequirements#testVaryStarIsNotGeneratedByProxy",
      "TestProtocolRequirements#testDoesNotModifyEtagFromOriginOnCacheHit",
      "TestProtocolRequirements#testViaHeaderOnRequestProperlyRecordsClientProtocol",
      "TestProtocolRequirements#testTRACERequestsAreWrittenThroughToOrigin",
      "TestProtocolRequirements#testDecrementsMaxForwardsWhenForwardingOPTIONSRequest",
      "TestProtocolRequirements#testMustIncludeWWWAuthenticateHeaderOnAnOrigin401Response",
      "TestProtocolRequirements#testRetainsWarningHeadersReceivedFromUpstream",
      "TestProtocolRequirements#testOrderOfMultipleAllowHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#testPutToUriInvalidatesCacheForThatUri",
      "TestProtocolRequirements#testDeleteInvalidatesCacheForThatUriInContentLocationHeader",
      "TestProtocolRequirements#testProperlyFormattedViaHeaderIsAddedToRequests",
      "TestProtocolRequirements#testRequestsExpecting100ContinueBehaviorShouldSetExpectHeader",
      "TestProtocolRequirements#testResponsesToOPTIONSAreNotCacheable",
      "TestProtocolRequirements#testCannotUseVariantCacheEntryIfNotAllSelectingRequestHeadersMatch",
      "TestProtocolRequirements#testOrderOfMultipleParametersInContentEncodingHeaderIsPreserved",
      "TestProtocolRequirements#testDoesNotAddLastModifiedHeaderOnCacheHit",
      "TestProtocolRequirements#test206ResponseIncludesVariantHeadersIfValueMightDiffer",
      "TestProtocolRequirements#testSharedCacheMustNotNormallyCacheAuthorizedResponses",
      "TestProtocolRequirements#testKeepsMostRecentDateHeaderForFreshResponse",
      "TestProtocolRequirements#testDoesNotModifyEtagHeaderFromOrigin",
      "TestProtocolRequirements#testResponseToA1_0RequestShouldUse1_1",
      "TestProtocolRequirements#testOrderOfMultipleAcceptLanguageHeadersIsPreservedOnRequests",
      "TestProtocolRequirements#test304ResponseDoesNotContainABody",
      "TestProtocolRequirements#testSharedCacheMayCacheAuthorizedResponsesWithSMaxAgeHeader",
      "TestProtocolRequirements#testDoesNotAddContentRangeHeaderToOriginResponseWithNoTransformIfNotPresent",
      "TestProtocolRequirements#testCacheDoesNotAssumeContentLocationHeaderIndicatesAnotherCacheableResource",
      "TestProtocolRequirements#test206ContainsETagIfA200ResponseWouldHaveIncludedIt",
      "TestProtocolRequirements#testResponseIncludesCacheEntryEndToEndHeadersForResponseAfter304Validation",
      "TestProtocolRequirements#testMustNotUseMultipartByteRangeContentTypeOnCacheGenerated416Responses",
      "TestCacheableRequestPolicy#testIsGetServableFromCache",
      "TestCacheableRequestPolicy#testIsHeadServableFromCache",
      "TestCacheableRequestPolicy#testIsGetWithCacheControlServableFromCache",
      "TestCacheableRequestPolicy#testIsHeadWithCacheControlServableFromCache",
      "TestCacheableRequestPolicy#testIsGetWithPragmaServableFromCache",
      "TestCacheableRequestPolicy#testIsArbitraryMethodServableFromCache",
      "TestCacheableRequestPolicy#testIsHeadWithPragmaServableFromCache",
      "TestContentCodings#testResponseWithNoContent",
      "TestContentCodings#gzipResponsesWorkWithBasicResponseHandler",
      "TestContentCodings#testDeflateSupportForServerReturningRfc1950Stream",
      "TestContentCodings#testHttpEntityWriteToForGzip",
      "TestContentCodings#deflateResponsesWorkWithBasicResponseHandler",
      "TestContentCodings#testDeflateSupportForServerReturningRfc1951Stream",
      "TestContentCodings#testThreadSafetyOfContentCodings",
      "TestContentCodings#testGzipSupport",
      "TestContentCodings#testHttpEntityWriteToForDeflate",
      "TestClientAuthentication#testAuthenticationTargetAsProxy",
      "TestClientAuthentication#testBasicAuthenticationFailureOnNonRepeatablePutDontExpectContinue",
      "TestClientAuthentication#testBasicAuthenticationSuccessOnNonRepeatablePutExpectContinue",
      "TestClientAuthentication#testAuthenticationFallback",
      "TestClientAuthentication#testAuthenticationUserinfoInRedirectSuccess",
      "TestClientAuthentication#testAuthenticationCredentialsCachingReauthenticationOnDifferentRealm",
      "TestClientAuthentication#testReauthentication",
      "TestClientAuthentication#testBasicAuthenticationNoCreds",
      "TestClientAuthentication#testBasicAuthenticationCredentialsCaching",
      "TestClientAuthentication#testBasicAuthenticationSuccess",
      "TestClientAuthentication#testPreemptiveAuthenticationFailure",
      "TestClientAuthentication#testAuthenticationUserinfoInRequestSuccess",
      "TestClientAuthentication#testBasicAuthenticationFailure",
      "TestClientAuthentication#testBasicAuthenticationFailureOnNonRepeatablePost",
      "TestClientAuthentication#testAuthenticationUserinfoInRequestFailure",
      "TestClientAuthentication#testPreemptiveAuthentication",
      "TestClientAuthentication#testConnectionCloseAfterAuthenticationSuccess",
      "TestClientAuthentication#testBasicAuthenticationSuccessOnRepeatablePost",
      "TestFluent#testGetRequestByName",
      "TestFluent#testGetRequestFailure",
      "TestFluent#testContentAsStringWithCharset",
      "TestFluent#testGetRequestByNameWithURI",
      "TestFluent#testPostRequest",
      "TestFluent#testGetRequest",
      "TestFluent#testConnectionRelease",
      "TestBasicAuthCache#testBasicStoreRestore",
      "TestBasicAuthCache#testNullAuthScheme",
      "TestBasicAuthCache#testStoreNonserializable",
      "TestBasicAuthCache#testNullKey",
      "TestHttpCacheJiraNumber1147#testIssue1147",
      "TestCachedResponseSuitabilityChecker#testNotSuitableIfContentLengthHeaderIsWrong",
      "TestCachedResponseSuitabilityChecker#testNotSuitableIfStaleButTooStaleForRequestMaxStale",
      "TestCachedResponseSuitabilityChecker#testNotSuitableIfRequestHasNoCache",
      "TestCachedResponseSuitabilityChecker#testNotSuitableIfAgeExceedsRequestMaxAge",
      "TestCachedResponseSuitabilityChecker#testSuitableIfRequestMethodisHEAD",
      "TestCachedResponseSuitabilityChecker#testSuitableIfFreshAndFreshnessLifetimeGreaterThanRequestMinFresh",
      "TestCachedResponseSuitabilityChecker#testNotSuitableIfFreshnessLifetimeLessThanRequestMinFresh",
      "TestCachedResponseSuitabilityChecker#testMalformedCacheControlMinFreshRequestHeaderCausesUnsuitableEntry",
      "TestCachedResponseSuitabilityChecker#testNotSuitableIfCacheEntryIsNotFresh",
      "TestCachedResponseSuitabilityChecker#testSuitableForGETIfHeadResponseCachingEnabledAndEntryDoesNotSpecifyARequestMethodButContains204Response",
      "TestCachedResponseSuitabilityChecker#testMalformedCacheControlMaxAgeRequestHeaderCausesUnsuitableEntry",
      "TestCachedResponseSuitabilityChecker#testSuitableIfCacheEntryIsHeuristicallyFreshEnoughByDefault",
      "TestCachedResponseSuitabilityChecker#testSuitableEvenIfStaleButPermittedByRequestMaxStale",
      "TestCachedResponseSuitabilityChecker#testNotSuitableIfRequestMethodIsGETAndEntryResourceIsNull",
      "TestCachedResponseSuitabilityChecker#testNotSuitableForGETIfEntryDoesNotSpecifyARequestMethodOrEntity",
      "TestCachedResponseSuitabilityChecker#testSuitableIfFreshAndAgeIsUnderRequestMaxAge",
      "TestCachedResponseSuitabilityChecker#testSuitableForGETIfEntryDoesNotSpecifyARequestMethodButContainsEntity",
      "TestCachedResponseSuitabilityChecker#testSuitableIfCacheEntryIsHeuristicallyFreshEnough",
      "TestCachedResponseSuitabilityChecker#testSuitableForHEADIfHeadResponseCachingEnabledAndEntryDoesNotSpecifyARequestMethod",
      "TestCachedResponseSuitabilityChecker#testSuitableIfCacheEntryIsFresh",
      "TestBasicHttpClientConnectionManager#testCloseExpired",
      "TestBasicHttpClientConnectionManager#testProxyConnectAndUpgrade",
      "TestBasicHttpClientConnectionManager#testReleaseInvalidArg",
      "TestBasicHttpClientConnectionManager#testAlreadyLeased",
      "TestBasicHttpClientConnectionManager#testCloseIdle",
      "TestBasicHttpClientConnectionManager#testReleaseAnotherConnection",
      "TestBasicHttpClientConnectionManager#testShutdown",
      "TestBasicHttpClientConnectionManager#testTargetConnect",
      "TestBasicHttpClientConnectionManager#testLeaseReleaseReusable",
      "TestBasicHttpClientConnectionManager#testLeaseDifferentRoute",
      "TestBasicHttpClientConnectionManager#testLeaseReleaseReusableWithState",
      "TestBasicHttpClientConnectionManager#testLeaseReleaseNonReusable",
      "TestBasicHttpClientConnectionManager#testLeaseExpired",
      "TestBasicConnectionManager#testConnectionStillInUse",
      "TestBasicConnectionManager#testBasics",
      "TestConnectionManagement#testCloseExpiredIdleConnections",
      "TestConnectionManagement#testCloseExpiredTTLConnections",
      "TestConnectionManagement#testReleaseConnectionWithTimeLimits",
      "TestConnectionManagement#testReleaseConnection",
      "TestConnectionReuse#testReuseOfAbortedConnections",
      "TestConnectionReuse#testKeepAliveHeaderRespected",
      "TestConnectionReuse#testReuseOfPersistentConnections",
      "TestConnectionReuse#testReuseOfClosedConnections",
      "TestRequestAuthCache#testRequestParameterCheck",
      "TestRequestAuthCache#testAuthCacheEmpty",
      "TestRequestAuthCache#testAuthCacheNotSet",
      "TestRequestAuthCache#testPreemptiveTargetAndProxyAuth",
      "TestRequestAuthCache#testContextParameterCheck",
      "TestRequestAuthCache#testCredentialsProviderNotSet",
      "TestProtocolAllowedBehavior#testNonSharedCacheReturnsStaleResponseWhenRevalidationFailsForProxyRevalidate",
      "TestProtocolAllowedBehavior#testNonSharedCacheMayCacheResponsesWithCacheControlPrivate",
      "TestFutureRequestExecutionService#shouldCancel",
      "TestFutureRequestExecutionService#shouldTimeout",
      "TestFutureRequestExecutionService#shouldExecuteMultipleCalls",
      "TestFutureRequestExecutionService#shouldExecuteSingleCall",
      "TestFutureRequestExecutionService#shouldExecuteMultipleCallsAndCallback",
      "TestClientRequestExecution#testNonCompliantURI",
      "TestClientRequestExecution#testAutoGeneratedHeaders",
      "TestClientRequestExecution#testRelativeRequestURIWithFragment",
      "TestClientRequestExecution#testNonRepeatableEntity",
      "TestClientRequestExecution#testAbsoluteRequestURIWithFragment",
      "TestResponseCachingPolicy#test303WithExplicitCachingHeadersUnderDefaultBehavior",
      "TestResponseCachingPolicy#testPlain303ResponseCodeIsNotCacheableEvenIf303CachingEnabled",
      "TestResponseCachingPolicy#testPlain303ResponseCodeIsNotCacheableUnderDefaultBehavior",
      "TestResponseCachingPolicy#testIsArbitraryMethodCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#testIsHeadCacheable",
      "TestResponseCachingPolicy#testResponsesToGETWithQueryParamsAndExplicitCachingAreCacheable",
      "TestResponseCachingPolicy#testIsArbitraryMethodCacheable",
      "TestResponseCachingPolicy#test410ResponseCodeIsCacheable",
      "TestResponseCachingPolicy#test206ResponseCodeIsNotCacheable",
      "TestResponseCachingPolicy#testNon206WithSMaxAgeIsCacheable",
      "TestResponseCachingPolicy#testNon206WithPrivateCacheControlIsNotCacheableBySharedCache",
      "TestResponseCachingPolicy#testIsGetWithAnyCacheControlCacheable",
      "TestResponseCachingPolicy#headsWithQueryParametersFrom1_0OriginsViaExplicitProxiesCanNotBeCacheableEvenWithExpires",
      "TestResponseCachingPolicy#getsWithQueryParametersFrom1_0OriginsViaProxiesAreCacheableWithExpires",
      "TestResponseCachingPolicy#testResponsesWithMultipleExpiresHeadersAreNotCacheable",
      "TestResponseCachingPolicy#testIsHeadWithNoCacheEmbeddedInListCacheable",
      "TestResponseCachingPolicy#headsWithQueryParametersDirectlyFrom1_0OriginsAreCacheableWithExpires",
      "TestResponseCachingPolicy#testIsHeadWithAnyCacheControlCacheable",
      "TestResponseCachingPolicy#testVaryStarIsNotCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#testIsHeadWithVaryHeaderCacheable",
      "TestResponseCachingPolicy#testAuthorizedResponsesWithCacheControlPublicAreCacheable",
      "TestResponseCachingPolicy#testPlain302ResponseCodeIsNotCacheable",
      "TestResponseCachingPolicy#testResponsesToHEADWithQueryParamsAndExplicitCachingAreCacheable",
      "TestResponseCachingPolicy#notCacheableIfExpiresPrecedesDateAndNoCacheControl",
      "TestResponseCachingPolicy#headsWithQueryParametersFrom1_0OriginsViaProxiesAreNotCacheable",
      "TestResponseCachingPolicy#test302WithExplicitCachingHeaders",
      "TestResponseCachingPolicy#test303WithExplicitCachingHeadersWhenPermittedByConfig",
      "TestResponseCachingPolicy#testResponsesToHEADWithQueryParamsButNoExplicitCachingAreNotCacheableEvenWhen1_0QueryCachingDisabled",
      "TestResponseCachingPolicy#test206ResponseCodeIsNotCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#headsWithQueryParametersFrom1_0OriginsViaProxiesCanNotBeCacheableEvenWithExpires",
      "TestResponseCachingPolicy#testResponsesWithMalformedDateHeadersAreNotCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#testIsGetWithNoCacheEmbeddedInListCacheable",
      "TestResponseCachingPolicy#notCacheableIfExpiresEqualsDateAndNoCacheControl",
      "TestResponseCachingPolicy#testResponsesToRequestsWithNoStoreAreNotCacheable",
      "TestResponseCachingPolicy#testResponsesWithoutDateHeadersAreNotCacheable",
      "TestResponseCachingPolicy#testResponsesToHEADWithQueryParamsButNoExplicitCachingAreNotCacheable",
      "TestResponseCachingPolicy#testIsGetWithNoStoreCacheable",
      "TestResponseCachingPolicy#testIsGetWithNoCacheCacheable",
      "TestResponseCachingPolicy#testPlain307ResponseCodeIsNotCacheable",
      "TestResponseCachingPolicy#getsWithQueryParametersDirectlyFrom1_0OriginsAreNotCacheable",
      "TestResponseCachingPolicy#test307WithExplicitCachingHeaders",
      "TestResponseCachingPolicy#testResponsesToRequestsWithAuthorizationHeadersAreCacheableByNonSharedCache",
      "TestResponseCachingPolicy#testNon206WithMustRevalidateIsCacheable",
      "TestResponseCachingPolicy#getsWithQueryParametersDirectlyFrom1_0OriginsAreNotCacheableEvenWithSetting",
      "TestResponseCachingPolicy#testResponsesWithMalformedDateHeadersAreNotCacheable",
      "TestResponseCachingPolicy#testResponsesWithMultipleDateHeadersAreNotCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#testResponsesWithMultipleAgeHeadersAreNotCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#testResponsesWithMultipleExpiresHeadersAreNotCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#headsWithQueryParametersFrom1_0OriginsViaExplicitProxiesAreCacheableWithExpires",
      "TestResponseCachingPolicy#testIsHeadWithout200Cacheable",
      "TestResponseCachingPolicy#testResponsesToRequestsWithAuthorizationHeadersAreNotCacheableBySharedCache",
      "TestResponseCachingPolicy#getsWithQueryParametersDirectlyFrom1_0OriginsAreCacheableWithExpires",
      "TestResponseCachingPolicy#testIsHeadWithNoStoreCacheable",
      "TestResponseCachingPolicy#testResponsesToHEADWithQueryParamsAndExplicitCachingAreCacheableEvenWhen1_0QueryCachingDisabled",
      "TestResponseCachingPolicy#testIsGetWithNoCacheEmbeddedInListAfterFirstHeaderCacheable",
      "TestResponseCachingPolicy#testIsHeadWithNoCacheCacheable",
      "TestResponseCachingPolicy#headsWithQueryParametersFrom1_0OriginsViaProxiesAreCacheableWithExpires",
      "TestResponseCachingPolicy#test203ResponseCodeIsCacheable",
      "TestResponseCachingPolicy#testIsGetWithNoStoreEmbeddedInListAfterFirstHeaderCacheable",
      "TestResponseCachingPolicy#test301ResponseCodeIsCacheable",
      "TestResponseCachingPolicy#testNon206WithExplicitExpiresIsCacheable",
      "TestResponseCachingPolicy#headsWithQueryParametersDirectlyFrom1_0OriginsCanBeNotCacheableEvenWithExpires",
      "TestResponseCachingPolicy#testResponsesWithMultipleDateHeadersAreNotCacheable",
      "TestResponseCachingPolicy#test300ResponseCodeIsCacheable",
      "TestResponseCachingPolicy#testNon206WithMaxAgeIsCacheable",
      "TestResponseCachingPolicy#testResponsesToGETWithQueryParamsAndExplicitCachingAreCacheableEvenWhen1_0QueryCachingDisabled",
      "TestResponseCachingPolicy#getsWithQueryParametersFrom1_0OriginsViaProxiesCanNotBeCacheableEvenWithExpires",
      "TestResponseCachingPolicy#test200ResponseWithPrivateCacheControlIsCacheableByNonSharedCache",
      "TestResponseCachingPolicy#testAuthorizedResponsesWithCacheControlMaxAgeAreNotCacheable",
      "TestResponseCachingPolicy#getsWithQueryParametersFrom1_0OriginsViaExplicitProxiesCanNotBeCacheableEvenWithExpires",
      "TestResponseCachingPolicy#getsWithQueryParametersDirectlyFrom1_0OriginsCanBeNotCacheableEvenWithExpires",
      "TestResponseCachingPolicy#testResponsesWithMultipleAgeHeadersAreNotCacheable",
      "TestResponseCachingPolicy#headsWithQueryParametersFrom1_1OriginsVia1_0ProxiesAreCacheableWithExpires",
      "TestResponseCachingPolicy#testIsGetWithVaryHeaderCacheable",
      "TestResponseCachingPolicy#testResponsesToGETWithQueryParamsButNoExplicitCachingAreNotCacheableEvenWhen1_0QueryCachingDisabled",
      "TestResponseCachingPolicy#getsWithQueryParametersFrom1_1OriginsVia1_0ProxiesAreCacheableWithExpires",
      "TestResponseCachingPolicy#testResponseThatHasTooMuchContentIsNotCacheable",
      "TestResponseCachingPolicy#testAuthorizedResponsesWithSMaxAgeAreCacheable",
      "TestResponseCachingPolicy#getsWithQueryParametersFrom1_0OriginsViaProxiesAreNotCacheable",
      "TestResponseCachingPolicy#testIsHeadWithNoStoreEmbeddedInListCacheable",
      "TestResponseCachingPolicy#testResponsesThatAreSmallEnoughAreCacheable",
      "TestResponseCachingPolicy#testNon206WithPublicCacheControlIsCacheable",
      "TestResponseCachingPolicy#testResponseThatHasTooMuchContentIsNotCacheableUsingSharedPublicCache",
      "TestResponseCachingPolicy#testIsGetWithNoStoreEmbeddedInListCacheable",
      "TestResponseCachingPolicy#getsWithQueryParametersFrom1_0OriginsViaExplicitProxiesAreCacheableWithExpires",
      "TestResponseCachingPolicy#testIsHeadWithNoCacheEmbeddedInListAfterFirstHeaderCacheable",
      "TestResponseCachingPolicy#testVaryStarIsNotCacheable",
      "TestResponseCachingPolicy#testIsGetCacheable",
      "TestResponseCachingPolicy#testIsHeadWithNoStoreEmbeddedInListAfterFirstHeaderCacheable",
      "TestResponseCachingPolicy#testAuthorizedResponsesWithMustRevalidateAreCacheable",
      "TestResponseCachingPolicy#testIsGetWithout200Cacheable",
      "TestResponseCachingPolicy#testNon206WithProxyRevalidateIsCacheable",
      "TestResponseCachingPolicy#testResponsesToGETWithQueryParamsButNoExplicitCachingAreNotCacheable",
      "TestResponseCachingPolicy#otherStatusCodesAreCacheableWithExplicitCachingHeaders",
      "TestResponseCachingPolicy#headsWithQueryParametersDirectlyFrom1_0OriginsAreNotCacheable",
      "TestResponseCachingPolicy#headsWithQueryParametersDirectlyFrom1_0OriginsAreNotCacheableEvenWithSetting",
      "TestProtocolDeviations#testPassesOnOrigin407WithoutAProxyAuthenticateHeader",
      "TestProtocolDeviations#testPassesOnOrigin401ResponseWithoutWWWAuthenticateHeader",
      "TestProtocolDeviations#testPassesOnOrigin405WithoutAllowHeader",
      "TestProtocolDeviations#testPartialContentIsNotReturnedToAClientThatDidNotAskForIt",
      "TestDefaultCacheInvalidator#flushesEntrySpecifiedByContentLocationIfEntryHasNoDate",
      "TestDefaultCacheInvalidator#flushesEntryIfFresherAndSpecifiedByContentLocation",
      "TestDefaultCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfEtagsMatch",
      "TestDefaultCacheInvalidator#testInvalidatesUrisInLocationHeadersOnPUTs",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateGETCacheEntryIfSubsequentGETRequestsAreMadeToTheSameURI",
      "TestDefaultCacheInvalidator#flushesEntryIfFresherAndSpecifiedByRelativeContentLocation",
      "TestDefaultCacheInvalidator#testVariantURIsAreFlushedAlso",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateUrisInContentLocationHeadersOnPUTsToDifferentHosts",
      "TestDefaultCacheInvalidator#doesNotFlushEntryForUnsuccessfulResponse",
      "TestDefaultCacheInvalidator#testInvalidatesUrisInContentLocationHeadersOnPUTs",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateHEADCacheEntry",
      "TestDefaultCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfResponseHasNoEtag",
      "TestDefaultCacheInvalidator#flushesEntryIfFresherAndSpecifiedByLocation",
      "TestDefaultCacheInvalidator#testInvalidatesHEADCacheEntryIfSubsequentGETRequestsAreMadeToTheSameURI",
      "TestDefaultCacheInvalidator#doesNotFlushEntryIfContentLocationFromDifferentHost",
      "TestDefaultCacheInvalidator#testInvalidatesRelativeUrisInContentLocationHeadersOnPUTs",
      "TestDefaultCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfEntryHasNoEtag",
      "TestDefaultCacheInvalidator#flushesEntryIfFresherAndSpecifiedByNonCanonicalContentLocation",
      "TestDefaultCacheInvalidator#flushesEntrySpecifiedByContentLocationIfEntryHasMalformedDate",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateHEADCacheEntryIfSubsequentHEADRequestsAreMadeToTheSameURI",
      "TestDefaultCacheInvalidator#doesNotFlushForResponsesWithoutContentLocation",
      "TestDefaultCacheInvalidator#flushesEntrySpecifiedByContentLocationIfResponseHasMalformedDate",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateHEADRequest",
      "TestDefaultCacheInvalidator#doesNotFlushEntryIfNotInCache",
      "TestDefaultCacheInvalidator#doesNotFlushEntrySpecifiedByContentLocationIfOlder",
      "TestDefaultCacheInvalidator#testInvalidatesVariantHEADCacheEntriesIfSubsequentGETRequestsAreMadeToTheSameURI",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateGETRequest",
      "TestDefaultCacheInvalidator#testInvalidatesRequestsThatArentGETorHEAD",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateRequestsWithClientCacheControlHeaders",
      "TestDefaultCacheInvalidator#flushesEntrySpecifiedByContentLocationIfResponseHasNoDate",
      "TestDefaultCacheInvalidator#testDoesNotInvalidateRequestsWithClientPragmaHeaders",
      "TestMalformedServerResponse#testNoContentResponseWithGarbage",
      "TestIdleConnectionEviction#testIdleConnectionEviction",
      "TestCookieVirtualHost#testCookieMatchingWithVirtualHosts",
      "TestRetryExec#testAbortedRequest",
      "TestRetryExec#testFundamentals",
      "TestRetryExec#testNonRepeatableRequest",
      "TestProtocolExec#testExecRequestRetryOnAuthChallenge",
      "TestProtocolExec#testPostProcessRuntimeException",
      "TestProtocolExec#testFundamentals",
      "TestProtocolExec#testPostProcessIOException",
      "TestProtocolExec#testExecEntityEnclosingRequestRetryOnAuthChallenge",
      "TestProtocolExec#testUserInfoInRequestURI",
      "TestProtocolExec#testExecEntityEnclosingRequest",
      "TestProtocolExec#testPostProcessHttpException",
      "TestDefaultHostnameVerifier#testSubjectAlt",
      "TestDefaultHostnameVerifier#testHTTPCLIENT_1097",
      "TestDefaultHostnameVerifier#testHTTPCLIENT_1255",
      "TestDefaultHostnameVerifier#testHTTPCLIENT_1316",
      "TestDefaultHostnameVerifier#testHTTPCLIENT_1997",
      "TestDefaultHostnameVerifier#testDomainRootMatching",
      "TestDefaultHostnameVerifier#testExtractCN",
      "TestDefaultHostnameVerifier#testIdentityMatching",
      "TestDefaultHostnameVerifier#testVerify",
      "TestInternalHttpClient#testExecuteRequestConfig",
      "TestInternalHttpClient#testExecute",
      "TestInternalHttpClient#testExecuteDefaultContext",
      "TestInternalHttpClient#testClientClose",
      "TestInternalHttpClient#testExecuteHttpException",
      "TestInternalHttpClient#testClientCloseIOException",
      "TestInternalHttpClient#testExecuteLocalContext",
      "TestServiceUnavailableRetryExec#testFundamentals",
      "TestServiceUnavailableRetryExec#testStrategyRuntimeException",
      "TestServiceUnavailableRetryExec#testNonRepeatableEntityResponseReturnedImmediately",
      "TestHttpAuthenticator#testAuthSuccessConnectionBased",
      "TestHttpAuthenticator#testAuthChallengeStateMultipleOption",
      "TestHttpAuthenticator#testAuthFailureState",
      "TestHttpAuthenticator#testAuthenticationNotRequestedUnchallenged",
      "TestHttpAuthenticator#testAuthenticationHandshaking",
      "TestHttpAuthenticator#testAuthenticationNoSupportedChallenges",
      "TestHttpAuthenticator#testAuthenticationFailure",
      "TestHttpAuthenticator#testAuthenticationCredentialsForBasic",
      "TestHttpAuthenticator#testUpdateAuthExchange",
      "TestHttpAuthenticator#testAuthentication",
      "TestHttpAuthenticator#testAuthenticationException",
      "TestHttpAuthenticator#testAuthenticationNotRequestedSuccess1",
      "TestHttpAuthenticator#testAuthenticationNotRequestedSuccess2",
      "TestHttpAuthenticator#testAuthenticationFailed",
      "TestHttpAuthenticator#testAuthSuccess",
      "TestHttpAuthenticator#testAuthenticationFailedPreviously",
      "TestHttpAuthenticator#testAuthChallengeStateOneOptions",
      "TestHttpAuthenticator#testAuthenticationNoMatchingChallenge",
      "TestHttpAuthenticator#testAuthenticationNoChallenges",
      "TestHttpAuthenticator#testAuthChallengeStateNoOption",
      "TestHttpAuthenticator#testAuthenticationRequestedAfterSuccess",
      "TestHttpAuthenticator#testAuthenticationNoCredentials",
      "TestRedirectExec#testRedirectProtocolException",
      "TestRedirectExec#testRelativeRedirect",
      "TestRedirectExec#testFundamentals",
      "TestRedirectExec#testAllowCircularRedirects",
      "TestRedirectExec#testMaxRedirect",
      "TestRedirectExec#testGetLocationUriDisallowCircularRedirects",
      "TestRedirectExec#testRedirectRuntimeException",
      "TestRedirectExec#testCrossSiteRedirect",
      "TestBasicHttpCache#testDoNotFlushCacheEntriesOnOptions",
      "TestBasicHttpCache#testDoNotFlushCacheEntriesOnTrace",
      "TestBasicHttpCache#testGetVariantCacheEntriesReturnsAllVariants",
      "TestBasicHttpCache#testDoNotFlushContentLocationEntryIfSafeRequest",
      "TestBasicHttpCache#testCanFlushCacheEntriesAtUri",
      "TestBasicHttpCache#testStoreInCachePutsNonVariantEntryInPlace",
      "TestBasicHttpCache#testGetCacheEntryReturnsNullIfNoVariantInCache",
      "TestBasicHttpCache#testGetCacheEntryReturnsNullOnCacheMiss",
      "TestBasicHttpCache#testFlushContentLocationEntryIfUnSafeRequest",
      "TestBasicHttpCache#testDoNotFlushCacheEntriesOnGet",
      "TestBasicHttpCache#testDoNotFlushCacheEntriesOnHead",
      "TestBasicHttpCache#testGetCacheEntryFetchesFromCacheOnCacheHitIfNoVariants",
      "TestBasicHttpCache#testGetCacheEntryReturnsVariantIfPresentInCache",
      "TestBasicHttpCache#testGetVariantCacheEntriesReturnsEmptySetOnNoVariants",
      "TestRequestAddCookies#testRequestParameterCheck",
      "TestRequestAddCookies#testAuthDefaultHttpPortWhenProxy",
      "TestRequestAddCookies#testCookiesForConnectRequest",
      "TestRequestAddCookies#testAuthScopeInvalidRequestURI",
      "TestRequestAddCookies#testAuthScopeRemotePortWhenDirect",
      "TestRequestAddCookies#testExcludeExpiredCookies",
      "TestRequestAddCookies#testAddCookiesUsingExplicitCookieSpec",
      "TestRequestAddCookies#testContextParameterCheck",
      "TestRequestAddCookies#testNoCookieSpecRegistry",
      "TestRequestAddCookies#testNoHttpConnection",
      "TestRequestAddCookies#testNoCookieStore",
      "TestRequestAddCookies#testAuthDefaultHttpsPortWhenProxy",
      "TestRequestAddCookies#testNoMatchingCookies",
      "TestRequestAddCookies#testCookieOrder",
      "TestRequestAddCookies#testAddCookies",
      "TestAuthenticationStrategy#testCustomAuthPreference",
      "TestAuthenticationStrategy#testSelectInvalidInput",
      "TestAuthenticationStrategy#testSelectNoSchemeRegistry",
      "TestAuthenticationStrategy#testUnsupportedScheme",
      "TestCachingExec#testRevalidationCallsHandleBackEndResponseWhenNot200Or304",
      "TestCachingExec#testUnsuitableValidatableCacheEntryCausesRevalidation",
      "TestCachingExec#testRequestThatCannotBeServedFromCacheCausesBackendRequest",
      "TestCachingExec#testUnsuitableUnvalidatableCacheEntryCausesBackendRequest",
      "TestCachingExec#testCallBackendMakesBackEndRequestAndHandlesResponse",
      "TestCachingExec#testRevalidationUpdatesCacheEntryAndPutsItToCacheWhen304ReturningCachedResponse",
      "TestCachingExec#testCacheMissCausesBackendRequest",
      "TestCachingExec#testRevalidationRewritesAbsoluteUri",
      "TestCachingExec#testDoesNotFlushCachesOnCacheHit",
      "TestCachingExec#testEndlessResponsesArePassedThrough",
      "TestCachingExec#testReturns304ForIfNoneMatchPassesIfRequestServedFromOrigin",
      "TestCachingExec#testSetsRouteInContextOnCacheHit",
      "TestCachingExec#testVariantsMissServerReturns304CacheReturns304",
      "TestCachingExec#testReturns304ForIfModifiedSinceHeaderIfRequestServedFromCache",
      "TestCachingExec#testReturns304ForIfNoneMatchHeaderIfRequestServedFromCache",
      "TestCachingExec#testIfOnlyIfCachedAndNoCacheEntryBackendNotCalled",
      "TestCachingExec#testSocketTimeoutExceptionIsNotSilentlyCatched",
      "TestCachingExec#testTooLargeResponsesAreNotCached",
      "TestCachingExec#testIfOnlyIfCachedAndEntryNotSuitableBackendNotCalled",
      "TestCachingExec#testSetsModuleGeneratedResponseContextForCacheOptionsResponse",
      "TestCachingExec#testReturns200ForIfNoneMatchHeaderFails",
      "TestCachingExec#testSetsViaHeaderOnResponseIfRequestServedFromCache",
      "TestCachingExec#testSetsCacheMissContextIfRequestNotServableFromCache",
      "TestCachingExec#testReturns200ForOptionsFollowedByGetIfAuthorizationHeaderAndSharedCache",
      "TestCachingExec#testDoesNotSetConnectionInContextOnCacheHit",
      "TestCachingExec#testSetsResponseInContextOnCacheHit",
      "TestCachingExec#testReturns304ForIfNoneMatchHeaderAndIfModifiedSinceIfRequestServedFromCache",
      "TestCachingExec#testReturns200ForIfNoneMatchFailsIfRequestServedFromOrigin",
      "TestCachingExec#testNewerCacheableResponsesReplaceExistingCacheEntry",
      "TestCachingExec#testReturns200ForIfModifiedSinceDateIsInvalid",
      "TestCachingExec#testSetViaHeaderIfValidationFailsButNotRequired",
      "TestCachingExec#testSetsModuleResponseContextIfValidationFailsButNotRequired",
      "TestCachingExec#testDoesNotSend304ForNonConditionalRequest",
      "TestCachingExec#testIfOnlyIfCachedAndEntryExistsAndIsSuitableReturnsEntry",
      "TestCachingExec#testNoEntityForIfNoneMatchRequestNotYetInCache",
      "TestCachingExec#testSetsCacheHitContextIfRequestServedFromCache",
      "TestCachingExec#testCanCacheAResponseWithoutABody",
      "TestCachingExec#testSetsRequestInContextOnCacheHit",
      "TestCachingExec#testResponseIsGeneratedWhenCacheEntryIsUsable",
      "TestCachingExec#testSetsModuleResponseContextIfValidationRequiredButFailed",
      "TestCachingExec#testUsesVirtualHostForCacheKey",
      "TestCachingExec#testReturns304ForIfModifiedSinceHeaderIf304ResponseInCache",
      "TestCachingExec#testSetsViaHeaderOnResponseIfRequestNotServableFromCache",
      "TestCachingExec#testVariantMissServerIfReturns304CacheReturns200",
      "TestCachingExec#testSetsRequestSentInContextOnCacheHit",
      "TestCachingExec#testIsSharedCache",
      "TestCachingExec#testSetsModuleGeneratedResponseContextForFatallyNoncompliantRequest",
      "TestCachingExec#testReturns200ForIfModifiedSinceDateIsLess",
      "TestCachingExec#testOlderCacheableResponsesDoNotGoIntoCache",
      "TestCachingExec#testSmallEnoughResponsesAreCached",
      "TestCachingExec#testSuitableCacheEntryDoesNotCauseBackendRequest",
      "TestCachingExec#testNotModifiedResponseUpdatesCacheEntryWhenNoEntity",
      "TestCachingExec#testSetsViaHeaderOnResponseForCacheMiss",
      "TestCachingExec#testSetsTargetHostInContextOnCacheHit",
      "TestCachingExec#testNonCacheableResponseIsNotCachedAndIsReturnedAsIs",
      "TestCachingExec#testSetsViaHeaderIfRequestWasSuccessfullyValidated",
      "TestCachingExec#testReturns200ForIfNoneMatchHeaderFailsIfModifiedSinceIgnored",
      "TestCachingExec#testCacheableResponsesGoIntoCache",
      "TestCachingExec#testNotModifiedResponseWithVaryUpdatesCacheEntryWhenNoEntity",
      "TestCachingExec#testSetsValidatedContextIfRequestWasSuccessfullyValidated",
      "TestCachingExec#testReturns200ForIfModifiedSinceFailsIfRequestServedFromOrigin",
      "TestCachingExec#testRecordsClientProtocolInViaHeaderIfRequestNotServableFromCache",
      "TestCachingExec#testReturns304ForIfModifiedSincePassesIfRequestServedFromOrigin",
      "TestStatefulConnManagement#testRouteSpecificPoolRecylcing",
      "TestStatefulConnManagement#testStatefulConnections",
      "TestHttp1AsyncStatefulConnManagement#testRouteSpecificPoolRecylcing",
      "TestHttp1AsyncStatefulConnManagement#testStatefulConnections",
      "TestRequestClientConnControl#testProxyConnectionKeepAliveForRequestsOverProxy",
      "TestRequestClientConnControl#testRequestParameterCheck",
      "TestRequestClientConnControl#testConnectionKeepAliveForDirectRequests",
      "TestRequestClientConnControl#testConnectionKeepAliveForTunneledRequests",
      "TestRequestClientConnControl#testPreserveCustomConnectionHeader",
      "TestRequestClientConnControl#testConnectionKeepAliveForConnectRequest",
      "TestSPNegoScheme#testDontTryToAuthenticateEndlessly",
      "TestSPNegoScheme#testNoTokenGeneratedError",
      "TestCacheRevalidatorBase#testRevalidateCacheEntryProperlyCollapsesRequest",
      "TestCacheRevalidatorBase#testRevalidateCacheEntrySchedulesExecutionAndPopulatesIdentifier",
      "TestCacheRevalidatorBase#testStaleResponse",
      "TestCacheRevalidatorBase#testRevalidateCacheEntryDoesNotPopulateIdentifierOnRejectedExecutionException",
      "TestCacheRevalidatorBase#testShutdown",
      "TestCacheRevalidatorBase#testMarkCompleteRemovesIdentifier",
      "TestClientAuthenticationFakeNTLM#testNTLMAuthenticationFailure",
      "TestClientAuthenticationFakeNTLM#testNTLMType2MessageOnlyAuthenticationFailure",
      "TestClientAuthenticationFakeNTLM#testNTLMv2Type2Message",
      "TestClientAuthenticationFakeNTLM#testNTLMType2NonUnicodeMessageOnlyAuthenticationFailure",
      "TestClientAuthenticationFakeNTLM#testNTLMv1Type2Message",
      "TestMinimalClientRequestExecution#testNonCompliantURI",
      "TestResponseProcessCookies#testResponseParameterCheck",
      "TestResponseProcessCookies#testNoCookieOrigin",
      "TestResponseProcessCookies#testParseCookies",
      "TestResponseProcessCookies#testContextParameterCheck",
      "TestResponseProcessCookies#testNoCookieSpec",
      "TestResponseProcessCookies#testNoCookieStore",
      "TestRedirects#testRepeatRequestRedirect",
      "TestRedirects#testDefaultHeadersRedirect",
      "TestRedirects#testBasicRedirect302NoLocation",
      "TestRedirects#testMaxRedirectCheck",
      "TestRedirects#testRelativeRedirect",
      "TestRedirects#testPostRedirectSeeOther",
      "TestRedirects#testRejectBogusRedirectLocation",
      "TestRedirects#testRedirectWithCookie",
      "TestRedirects#testRejectInvalidRedirectLocation",
      "TestRedirects#testRelativeRedirect2",
      "TestRedirects#testRepeatRequest",
      "TestRedirects#testDifferentRequestSameRedirect",
      "TestRedirects#testBasicRedirect300",
      "TestRedirects#testBasicRedirect301",
      "TestRedirects#testBasicRedirect302",
      "TestRedirects#testBasicRedirect303",
      "TestRedirects#testBasicRedirect304",
      "TestRedirects#testBasicRedirect305",
      "TestRedirects#testBasicRedirect307",
      "TestRedirects#testCircularRedirect",
      "TestPoolingHttpClientConnectionManager#testReleaseRouteIncomplete",
      "TestPoolingHttpClientConnectionManager#testLeaseFutureCancelled",
      "TestPoolingHttpClientConnectionManager#testProxyConnectAndUpgrade",
      "TestPoolingHttpClientConnectionManager#testLeaseRelease",
      "TestPoolingHttpClientConnectionManager#testTargetConnect",
      "TestPoolingHttpClientConnectionManager#testLeaseFutureTimeout",
      "TestPoolingHttpClientConnectionManager#testReleaseNonReusable",
      "TestPoolingHttpClientConnectionManager#testReleaseReusable",
      "TestWindowsNegotiateScheme#testNoInfiniteLoopOnSPNOutsideDomain",
      "TestProtocolRecommendations#testDoesNotModifyLocationOnResponses",
      "TestProtocolRecommendations#shouldStripContentLengthFromOrigin304ResponseToStrongValidation",
      "TestProtocolRecommendations#testDoesNotAddNewWarningHeaderIfResponseArrivesStale",
      "TestProtocolRecommendations#testForwardsExistingWarningHeadersOnResponseThatArrivesStale",
      "TestProtocolRecommendations#testUsesBothLastModifiedAndETagForConditionalRequestsIfAvailable",
      "TestProtocolRecommendations#testRevalidatesCachedResponseWithExpirationInThePast",
      "TestProtocolRecommendations#returns504ForStaleEntryWithOnlyIfCached",
      "TestProtocolRecommendations#shouldStripContentEncodingFromOrigin304ResponseToStrongValidation",
      "TestProtocolRecommendations#testDoesNotModifyExtensionHeaderOnResponses",
      "TestProtocolRecommendations#responseToGetWithQueryFrom1_0OriginAndNoExpiresIsNotCached",
      "TestProtocolRecommendations#testDoesNotModifyAcceptRangesOnResponses",
      "TestProtocolRecommendations#cacheGenerated304ForStrongValidatorShouldNotContainContentMD5",
      "TestProtocolRecommendations#testDoesNotModifyIfNoneMatchOnRequests",
      "TestProtocolRecommendations#testDoesNotModifyContentTypeOnRequests",
      "TestProtocolRecommendations#testDoesNotReturnStaleResponseIfClientExplicitlyRequestsFirstHandOneWithCacheControl",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainContentLanguage",
      "TestProtocolRecommendations#testDoesNotModifyRefererOnRequests",
      "TestProtocolRecommendations#testResponseToExistingVariantsUpdatesEntry",
      "TestProtocolRecommendations#testDoesNotReturnStaleResponseIfClientExplicitlyRequestsFirstHandOneWithPragma",
      "TestProtocolRecommendations#testDoesNotModifyContentRangeOnResponses",
      "TestProtocolRecommendations#issues304EvenWithWeakETag",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainContentType",
      "TestProtocolRecommendations#testDoesNotModifyExtensionHeaderOnRequests",
      "TestProtocolRecommendations#cacheGenerated304ForStrongEtagValidatorShouldNotContainContentEncoding",
      "TestProtocolRecommendations#responseToGetWithQueryFrom1_0OriginVia1_1ProxyAndNoExpiresIsNotCached",
      "TestProtocolRecommendations#shouldStripContentRangeFromOrigin304ResponseToStringValidation",
      "TestProtocolRecommendations#testDoesNotModifyIfModifiedSinceOnRequests",
      "TestProtocolRecommendations#testDoesNotReturnStaleResponseIfClientExplicitlyRequestsFreshWithMaxAge",
      "TestProtocolRecommendations#testDoesNotModifyContentLengthOnRequests",
      "TestProtocolRecommendations#testDoesNotReturnStaleResponseIfClientExplicitlyRequestsFreshWithMaxStale",
      "TestProtocolRecommendations#testUsesLastModifiedDateForCacheConditionalRequests",
      "TestProtocolRecommendations#testDoesNotModifyIfRangeOnRequests",
      "TestProtocolRecommendations#cacheGenerated304ForStrongEtagValidatorShouldNotContainContentType",
      "TestProtocolRecommendations#testDoesNotModifyContentLengthOnResponses",
      "TestProtocolRecommendations#shouldStripLastModifiedFromOrigin304ResponseToStrongValidation",
      "TestProtocolRecommendations#cacheGenerated304ForStrongEtagValidatorShouldNotContainAllow",
      "TestProtocolRecommendations#shouldInvalidateAllVariantsForUnknownMethod",
      "TestProtocolRecommendations#cacheGenerated304ForStrongEtagValidatorShouldNotContainContentLanguage",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainContentLength",
      "TestProtocolRecommendations#testDoesNotModifyUserAgentOnRequests",
      "TestProtocolRecommendations#cacheHitOkWithOnlyIfCached",
      "TestProtocolRecommendations#expiresPriorToDateWithNoCacheControlIsNotCacheable",
      "TestProtocolRecommendations#cacheMissResultsIn504WithOnlyIfCached",
      "TestProtocolRecommendations#cacheGenerated304ForStrongEtagValidatorShouldNotContainContentRange",
      "TestProtocolRecommendations#variantNegotiationsDoNotIncludeEtagsForPartialResponses",
      "TestProtocolRecommendations#testDoesNotModifyExpiresOnResponses",
      "TestProtocolRecommendations#shouldStripAllowFromOrigin304ResponseToStrongValidation",
      "TestProtocolRecommendations#testMayReturnStaleResponseIfClientExplicitlySpecifiesAcceptableMaxStale",
      "TestProtocolRecommendations#testDoesNotModifyServerOnResponses",
      "TestProtocolRecommendations#testDoesNotModifyContentTypeOnResponses",
      "TestProtocolRecommendations#cacheGenerated304ForStrongValidatorShouldNotContainContentLength",
      "TestProtocolRecommendations#shouldInvalidateNonvariantCacheEntryForUnknownMethod",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainContentMD5",
      "TestProtocolRecommendations#testDoesNotModifyDateOnRequests",
      "TestProtocolRecommendations#testDoesNotModifyAuthorizationOnRequests",
      "TestProtocolRecommendations#testReturnsCachedResponsesAppropriatelyWhenNoOriginCommunication",
      "TestProtocolRecommendations#returnsStaleCacheEntryWithOnlyIfCachedAndMaxStale",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainContentRange",
      "TestProtocolRecommendations#testDoesNotModifyRetryAfterOnResponses",
      "TestProtocolRecommendations#cachedEntryShouldNotBeUsedIfMoreRecentMentionInContentLocation",
      "TestProtocolRecommendations#testDoesNotModifyFromOnRequests",
      "TestProtocolRecommendations#testDoesNotModifyContentRangeOnRequests",
      "TestProtocolRecommendations#shouldStripContentTypeFromOrigin304ResponseToStrongValidation",
      "TestProtocolRecommendations#expiresEqualToDateWithNoCacheControlIsNotCacheable",
      "TestProtocolRecommendations#testDoesNotModifyDateOnResponses",
      "TestProtocolRecommendations#testRetriesValidationThatResultsInAnOlderDated304Response",
      "TestProtocolRecommendations#testDoesNotModifyIfUnmodifiedSinceOnRequests",
      "TestProtocolRecommendations#testIdentityCodingIsNotUsedInContentEncodingHeader",
      "TestProtocolRecommendations#cacheGenerated304ForStrongEtagValidatorShouldNotContainLastModified",
      "TestProtocolRecommendations#testDoesNotModifyVaryOnResponses",
      "TestProtocolRecommendations#otherFreshnessRequestDirectivesNotAllowedWithNoCache",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainAllow",
      "TestProtocolRecommendations#testResponseToExistingVariantsIsCachedForFutureResponses",
      "TestProtocolRecommendations#testSendsAllVariantEtagsInConditionalRequest",
      "TestProtocolRecommendations#shouldStripContentMD5FromOrigin304ResponseToStrongValidation",
      "TestProtocolRecommendations#testDoesNotModifyContentMD5OnRequests",
      "TestProtocolRecommendations#testDoesNotModifyLastModifiedOnResponses",
      "TestProtocolRecommendations#testDoesNotModifyIfMatchOnRequests",
      "TestProtocolRecommendations#shouldStripContentLanguageFromOrigin304ResponseToStrongValidation",
      "TestProtocolRecommendations#testDoesNotReturnStaleResponseIfClientExplicitlySpecifiesLargerMaxAge",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainContentEncoding",
      "TestProtocolRecommendations#cacheGenerated304ForStrongDateValidatorShouldNotContainLastModified",
      "TestProtocolRecommendations#cacheShouldUpdateWithNewCacheableResponse",
      "TestProtocolRecommendations#testDoesNotReturnStaleResponseIfClientExplicitlyRequestsFreshWithMinFresh",
      "TestProtocolRecommendations#testDoesNotModifyRangeOnRequests",
      "TestProtocolRecommendations#testDoesNotModifyContentMD5OnResponses",
      "TestProtocolRecommendations#testDoesNotModifyETagOnResponses"
    ],
    "jdonframework": [
      "SampleAppTest#testGetService",
      "SampleAppTest#testXml",
      "SampleAppTest#testEvent",
      "SampleAppTest#testDomainEvent",
      "SampleAppTest#testDomainEventSimple",
      "SampleAppTest#testOnEvent",
      "SampleAppTest#testComponentsEvent",
      "SampleAppTest#testCQRS",
      "SampleAppTest#testBankAccount",
      "SampleAppTest#testCommand",
      "ContainerDirectorTest#testStartup"
    ],
    "sofa-tracer": [
      "LogTest#testLog4j2"
    ],
    "doctorkafka": [
      "TestEvent#testSingleSubscriptionEvent",
      "TestEvent#testMultipleSubscriptionEvents",
      "TestEvent#testChainedEvents",
      "KafkaBrokerTest#kafkaBrokerComparatorTest",
      "ClusterInfoServletTest#clusterInfoJSONResponse"
    ],
    "TLS-Attacker": [
      "CertificateTypeExtensionPreparatorTest#testPreparator",
      "ActivateEncryptionActionTest#testExecute",
      "ActivateEncryptionActionTest#testReset",
      "TlsConfigIOTest#testReadWriteRead",
      "TlsConfigIOTest#testEmptyConfig",
      "TlsConfigIOTest#testIncompleteConfig",
      "TlsConfigIOTest#testReadCustomServerConnection",
      "TlsConfigIOTest#testReadCustomClientConnection",
      "PskDhClientKeyExchangeMessageTest#testToString",
      "StreamTransportHandlerTest#testCloseConnection",
      "StreamTransportHandlerTest#testInitialize",
      "StreamTransportHandlerTest#testCloseClientconnection",
      "StreamTransportHandlerTest#testGetOutputStream",
      "StreamTransportHandlerTest#fullTest",
      "StreamTransportHandlerTest#testGetInputStream",
      "UserMappingExtensionSerializerTest#testSerializeExtensionContent",
      "DHClientKeyExchangeHandlerTest#testGetPreparator",
      "DHClientKeyExchangeHandlerTest#testGetSerializer",
      "DHClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "DHClientKeyExchangeHandlerTest#testGetParser",
      "SessionResumptionDelegateTest#testApplyDelegate",
      "SessionResumptionDelegateTest#testSetSessionID",
      "SessionResumptionDelegateTest#testGetInvalidSessionId",
      "SessionResumptionDelegateTest#testNothingSetNothingChanges",
      "SessionResumptionDelegateTest#testGetSessionID",
      "ProtocolVersionDelegateTest#testApplyDelegate",
      "ProtocolVersionDelegateTest#testGetInvalidProtocolVersion",
      "ProtocolVersionDelegateTest#testGetProtocolVersion",
      "ProtocolVersionDelegateTest#testSetProtocolVersion",
      "ProtocolVersionDelegateTest#testNothingSetNothingChanges",
      "GeneralDelegateTest#testApplyDelegate",
      "GeneralDelegateTest#testNothingSetNothingChanges",
      "GeneralDelegateTest#testIsHelp",
      "GeneralDelegateTest#testSetHelp",
      "GeneralDelegateTest#testIsDebug",
      "GeneralDelegateTest#testIsQuiet",
      "GeneralDelegateTest#testSetDebug",
      "GeneralDelegateTest#testSetQuiet",
      "ClientCertificateTypeExtensionPreparatorTest#testPreparator",
      "StarttlsDelegateTest#testGetStarttlsType",
      "StarttlsDelegateTest#testApplyDelegate",
      "StarttlsDelegateTest#testSetStarttlsType",
      "ServerNamePairPreparatorTest#testPrepare",
      "DHEServerKeyExchangeHandlerTest#testAdjustTLSContextWithoutComputations",
      "DHEServerKeyExchangeHandlerTest#testGetPreparator",
      "DHEServerKeyExchangeHandlerTest#testGetSerializer",
      "DHEServerKeyExchangeHandlerTest#testAdjustTLSContext",
      "DHEServerKeyExchangeHandlerTest#testGetParser",
      "SignedCertificateTimestampExtensionHandlerTest#testGetPreparator",
      "SignedCertificateTimestampExtensionHandlerTest#testGetSerializer",
      "SignedCertificateTimestampExtensionHandlerTest#testAdjustTLSContext",
      "SignedCertificateTimestampExtensionHandlerTest#testGetParser",
      "PaddingExtensionPreparatorTest#testPreparator",
      "PaddingExtensionPreparatorTest#testNoContextPrepare",
      "ChangeCipherSuiteActionTest#testExecute",
      "ChangeCipherSuiteActionTest#testSetNewValue",
      "ChangeCipherSuiteActionTest#testGetNewValue",
      "ChangeCipherSuiteActionTest#testNoOld",
      "ChangeCipherSuiteActionTest#testReset",
      "ChangeCipherSuiteActionTest#testGetOldValue",
      "PWDClearExtensionPreparatorTest#testPreparator",
      "RenegotiationInfoExtensionPreparatorTest#testPreparator",
      "RenegotiationInfoExtensionPreparatorTest#testNoContextPrepare",
      "CertificateStatusRequestV2ExtensionHandlerTest#testGetPreparator",
      "CertificateStatusRequestV2ExtensionHandlerTest#testGetSerializer",
      "CertificateStatusRequestV2ExtensionHandlerTest#testAdjustTLSContext",
      "CertificateStatusRequestV2ExtensionHandlerTest#testGetParser",
      "RecordPreparatorTest#testPrepare",
      "ClientAuthenticationDelegateTest#testApplyDelegate",
      "ClientAuthenticationDelegateTest#testIsClientAuthentication",
      "ClientAuthenticationDelegateTest#testNothingSetNothingChanges",
      "ClientAuthenticationDelegateTest#testSetClientAuthentication",
      "ApplicationMessagePreparatorTest#testPrepare",
      "ApplicationMessagePreparatorTest#testNoContextPrepare",
      "ClientCertificateUrlExtensionSerializerTest#testSerializeExtensionContent",
      "CipherSuiteTest#testIsUsingMac",
      "CipherSuiteTest#testPrepare1",
      "CipherSuiteTest#testPrepare2",
      "CipherSuiteTest#implementedListContainsNoDuplicates",
      "CipherSuiteTest#testUnimplemented",
      "ServerNameIndicationExtensionPreparatorTest#testPrepareExtensionContentWithOnePair",
      "ServerNameIndicationExtensionPreparatorTest#testPrepareExtensionContentWithTwoPairs",
      "PskServerKeyExchangeHandlerTest#testGetPreparator",
      "PskServerKeyExchangeHandlerTest#testGetSerializer",
      "PskServerKeyExchangeHandlerTest#testGetParser",
      "ClientCertificateUrlExtensionPreparatorTest#testPreparator",
      "HeartbeatMessagePreparatorTest#testPrepare",
      "HeartbeatMessagePreparatorTest#testNoContextPrepare",
      "ParserTest#testEnoughBytesLeft",
      "ParserTest#testParseByteField",
      "ParserTest#testParseIntFieldNegative",
      "ParserTest#testParseBigIntField",
      "ParserTest#testBytesLeft",
      "ParserTest#testParseString",
      "ParserTest#testPeek",
      "ParserTest#testParseSingleByteFieldZero",
      "ParserTest#testAlreadyParsedMiddle",
      "ParserTest#testAlreadyParsed",
      "ParserTest#testParseSingleByteField",
      "ParserTest#testParseByteFieldNegative",
      "ParserTest#testParseSingleByteFieldNegative",
      "ParserTest#testParseIntField",
      "ParserTest#testPeekFailure",
      "ParserTest#testConstructorException",
      "ParserTest#testParseIntFieldZero",
      "PskDheServerKeyExchangeMessageTest#testToString",
      "SerializationFullTest#test",
      "PaddingExtensionHandlerTest#testGetPreparator",
      "PaddingExtensionHandlerTest#testGetSerializer",
      "PaddingExtensionHandlerTest#testAdjustTLSContext",
      "PaddingExtensionHandlerTest#testGetParser",
      "DefaultFilterTest#filterUninitializedTraceFails",
      "PskClientKeyExchangePreparatorTest#testPrepare",
      "PWDProtectExtensionPreparatorTest#testPreparator",
      "KeyShareExtensionHandlerTest#testGetPreparator",
      "KeyShareExtensionHandlerTest#testGetSerializer",
      "KeyShareExtensionHandlerTest#testAdjustTLSContext",
      "KeyShareExtensionHandlerTest#testGetParser",
      "CachedInfoExtensionParserTest#initializationError",
      "CertificateVerifyMessageTest#testToString",
      "AlertHandlerTest#testGetPreparator",
      "AlertHandlerTest#testGetSerializer",
      "AlertHandlerTest#testAdjustTLSContext",
      "AlertHandlerTest#testGetParser",
      "ClientHelloPreparatorTest#testPrepareWithCookie",
      "ClientHelloPreparatorTest#testPrepareNoCookie",
      "ClientHelloPreparatorTest#testNoContextPrepare",
      "ClientHelloPreparatorTest#testDtlsPrepareWithCookie",
      "ClientHelloPreparatorTest#testPrepareResumption",
      "XmlSerialisationTest#testProtocolMessages",
      "XmlSerialisationTest#testExtensionMessages",
      "ClientCertificateTypeExtensionHandlerTest#testGetPreparator",
      "ClientCertificateTypeExtensionHandlerTest#testGetSerializer",
      "ClientCertificateTypeExtensionHandlerTest#testAdjustTLSContext",
      "ClientCertificateTypeExtensionHandlerTest#testGetParser",
      "MaxFragmentLengthDelegateTest#testGetInvalidMaxFragmentLength",
      "MaxFragmentLengthDelegateTest#testApplyDelegate",
      "MaxFragmentLengthDelegateTest#testSetMaxFragmentLength",
      "MaxFragmentLengthDelegateTest#testNothingSetNothingChanges",
      "MaxFragmentLengthDelegateTest#testGetMaxFragmentLength",
      "SrtpExtensionPreparatorTest#testPreparator",
      "EcPointFormatExtensionHandlerTest#testGetPreparator",
      "EcPointFormatExtensionHandlerTest#testGetSerializer",
      "EcPointFormatExtensionHandlerTest#testAdjustTLSContext",
      "EcPointFormatExtensionHandlerTest#testGetParser",
      "AlertMessageTest#testToString",
      "TrustedCaIndicationExtensionPreparatorTest#testPreparator",
      "CertificateStatusRequestV2ExtensionPreparatorTest#testPreparator",
      "TrustedCaIndicationExtensionHandlerTest#testGetPreparator",
      "TrustedCaIndicationExtensionHandlerTest#testGetSerializer",
      "TrustedCaIndicationExtensionHandlerTest#testAdjustTLSContext",
      "TrustedCaIndicationExtensionHandlerTest#testGetParser",
      "ClientTcpTransportHandlerTest#testCloseConnection",
      "ClientTcpTransportHandlerTest#testInitialize",
      "ClientTcpTransportHandlerTest#fullTest",
      "PskServerKeyExchangeMessageTest#testToString",
      "OutboundConnectionTest#marshalingEmptyActionYieldsMinimalOutput",
      "OutboundConnectionTest#mixInDefaultsFromEmptyReference",
      "OutboundConnectionTest#marshalingAndUnmarshalingEmptyObjectYieldsEqualObject",
      "OutboundConnectionTest#mixInDefaultsFromReference",
      "OutboundConnectionTest#testSerializeNonDefaultFields",
      "OutboundConnectionTest#stripDefaultsReversesMixInEmptyDefaults",
      "OutboundConnectionTest#stripDefaultsReversesMixInDefaults",
      "PWDProtectExtensionHandlerTest#testGetPreparator",
      "PWDProtectExtensionHandlerTest#testGetSerializer",
      "PWDProtectExtensionHandlerTest#testAdjustTLSContext",
      "PWDProtectExtensionHandlerTest#testGetParser",
      "TokenCalculatorTest#testCalculateSSLEKM",
      "TokenCalculatorTest#testCalculateEKM",
      "ServerAuthzExtensionHandlerTest#testGetPreparator",
      "ServerAuthzExtensionHandlerTest#testGetSerializer",
      "ServerAuthzExtensionHandlerTest#testAdjustTLSContext",
      "ServerAuthzExtensionHandlerTest#testGetParser",
      "ECDHClientKeyExchangePreparatorTest#testPrepare",
      "ECDHClientKeyExchangePreparatorTest#testNoContextPrepare",
      "HeartbeatMessageTest#testToString",
      "KeyShareExtensionPreparatorTest#testPreparePWD",
      "KeyShareExtensionPreparatorTest#testPrepare",
      "KeyShareExtensionPreparatorTest#testNoContextPrepare",
      "SessionTicketTlsExtensionHandlerTest#testGetPreparator",
      "SessionTicketTlsExtensionHandlerTest#testGetSerializer",
      "SessionTicketTlsExtensionHandlerTest#testAdjustTLSContext",
      "SessionTicketTlsExtensionHandlerTest#testGetParser",
      "UnknownSerializerTest#testSerializeProtocolMessageContent",
      "SupplementalDataMessageTest#testToString",
      "StaticTicketCryptoTest#testGenerateHMAC_SHA256",
      "StaticTicketCryptoTest#testEncDecAES_128_CBC",
      "StaticTicketCryptoTest#testDecryptAES_128_CBC",
      "StaticTicketCryptoTest#testGenVrfyHMAC_SHA256",
      "StaticTicketCryptoTest#testVerifyHMAC_SHA256",
      "StaticTicketCryptoTest#testEncryptAES_128_CBC",
      "ChangeMasterSecretActionTest#testExecute",
      "ChangeMasterSecretActionTest#testSetNewValue",
      "ChangeMasterSecretActionTest#testGetNewValue",
      "ChangeMasterSecretActionTest#testReset",
      "ChangeMasterSecretActionTest#testGetOldValue",
      "CopyClientRandomActionTest#testExecute",
      "CopyClientRandomActionTest#testGetAlias",
      "CopyClientRandomActionTest#testEquals",
      "CopyClientRandomActionTest#testGetAllAliases",
      "ChangeClientRandomActionTest#testExecute",
      "ChangeClientRandomActionTest#testSetNewValue",
      "ChangeClientRandomActionTest#testGetNewValue",
      "ChangeClientRandomActionTest#testReset",
      "ChangeClientRandomActionTest#testGetOldValue",
      "DynamicWorkflowDelegateTest#testApplyDelegate",
      "DynamicWorkflowDelegateTest#testIsDynamicWorkflow",
      "DynamicWorkflowDelegateTest#testSetDynamicWorkflow",
      "DynamicWorkflowDelegateTest#testNothingSetNothingChanges",
      "TrustedCaIndicationExtensionSerializerTest#initializationError",
      "ReceiveAsciiActionTest#testExecute",
      "ReceiveAsciiActionTest#testReset",
      "ReceiveAsciiActionTest#testExecuteWorkflowExecutionException",
      "ReceiveAsciiActionTest#testExecutdAsPlanned",
      "BlobRecordTest#testGetRecordPreparator",
      "BlobRecordTest#testGetRecordParser",
      "BlobRecordTest#testGetRecordSerializer",
      "BlobRecordTest#testAdjustContext",
      "SerializerTest#testAppendInt",
      "SerializerTest#testSerializeBigInteger",
      "SerializerTest#testSerialize",
      "SerializerTest#testAppendByte",
      "SerializerTest#testSerializeBytes",
      "SerializerTest#testAppendBytes",
      "TokenbindingMessagePreparatorTest#testPrepareProtocolMessageContents",
      "PWDClientKeyExchangePreparatorTest#testPrepareHandshakeMessageContents",
      "AlpnExtensionPreparatorTest#testPreparator",
      "ServerCertificateTypeExtensionHandlerTest#testGetPreparator",
      "ServerCertificateTypeExtensionHandlerTest#testGetSerializer",
      "ServerCertificateTypeExtensionHandlerTest#testAdjustTLSContext",
      "ServerCertificateTypeExtensionHandlerTest#testGetParser",
      "RequestItemV2SerializerTest#testSerializer",
      "EncryptedExtensionsHandlerTest#testAdjustTLSContextWithSNI",
      "EncryptedExtensionsHandlerTest#testAdjustTLSContextWithoutExtensions",
      "EncryptedExtensionsHandlerTest#testGetPreparator",
      "EncryptedExtensionsHandlerTest#testGetSerializer",
      "EncryptedExtensionsHandlerTest#testGetParser",
      "HelloRetryRequestMessageTest#testToString",
      "ChaCha20Poly1305CipherTest#testEncrypt",
      "ChaCha20Poly1305CipherTest#testDecrypt",
      "TokenBindingMessageSerializerTest#testSerializeProtocolMessageContent",
      "RenegotiationInfoExtensionHandlerTest#testGetPreparator",
      "RenegotiationInfoExtensionHandlerTest#testGetSerializer",
      "RenegotiationInfoExtensionHandlerTest#testAdjustTLSContext",
      "RenegotiationInfoExtensionHandlerTest#testGetParser",
      "HelloVerifyRequestHandlerTest#testGetPreparator",
      "HelloVerifyRequestHandlerTest#testGetSerializer",
      "HelloVerifyRequestHandlerTest#testAdjustTLSContext",
      "HelloVerifyRequestHandlerTest#testGetParser",
      "EncryptThenMacExtensionHandlerTest#testGetPreparator",
      "EncryptThenMacExtensionHandlerTest#testGetSerializer",
      "EncryptThenMacExtensionHandlerTest#testAdjustTLSContext",
      "EncryptThenMacExtensionHandlerTest#testGetParser",
      "UnknownExtensionHandlerTest#testGetPreparator",
      "UnknownExtensionHandlerTest#testGetSerializer",
      "UnknownExtensionHandlerTest#testAdjustTLSContext",
      "UnknownExtensionHandlerTest#testGetParser",
      "ResponderIdSerializerTest#testSerializer",
      "TruncatedHmacExtensionHandlerTest#testGetPreparator",
      "TruncatedHmacExtensionHandlerTest#testGetSerializer",
      "TruncatedHmacExtensionHandlerTest#testAdjustTLSContext",
      "TruncatedHmacExtensionHandlerTest#testGetParser",
      "RemBufferedChExtensionsActionTest#removingMultipleExtensionsIsOk",
      "RemBufferedChExtensionsActionTest#removingNonProposedExtensionsIsOk",
      "RemBufferedChExtensionsActionTest#removingNothingIsOk",
      "RemBufferedChExtensionsActionTest#removingSingleExtensionIsOk",
      "RecordStreamCipherTest#testConstructors",
      "PWDServerKeyExchangeParserTest#testParse",
      "FinishedHandlerTest#testAdjustTlsContextAfterSerializeTls13ServerOutbound",
      "FinishedHandlerTest#testAdjustTLSContextTls13ClientOutbound",
      "FinishedHandlerTest#testAdjustTLSContextTls13ServerOutbound",
      "FinishedHandlerTest#testGetPreparator",
      "FinishedHandlerTest#testAdjustTlsContextAfterSerializeTls13ServerInbound",
      "FinishedHandlerTest#testAdjustTlsContextAfterSerializedTls13ClientInbound",
      "FinishedHandlerTest#testAdjustTLSContextTls13ClientInbound",
      "FinishedHandlerTest#testGetSerializer",
      "FinishedHandlerTest#testAdjustTLSContext",
      "FinishedHandlerTest#testAdjustTlsContextAfterSerializedTls12",
      "FinishedHandlerTest#testAdjustTLSContextTls13ServerInbound",
      "FinishedHandlerTest#testGetParser",
      "FinishedHandlerTest#testAdjustTlsContextAfterSerializedTls13ClientOutbound",
      "FinishedHandlerTest#testAdjustTLSContextTls13ServerInboundWithEarlyData",
      "FinishedHandlerTest#testAdjustTLSContextTls13ServerInboundWithoutEarlyData",
      "TimeoutDelegateTest#testApplyDelegate",
      "TimeoutDelegateTest#testGetTimeout",
      "TimeoutDelegateTest#testSetTimeout",
      "TimeoutDelegateTest#testNothingSetNothingChanges",
      "HRRKeyShareExtensionPreparatorTest#testPrepare",
      "HRRKeyShareExtensionPreparatorTest#testNoContextPrepare",
      "CertificateMessagePreparatorTest#testPrepare",
      "CertificateMessagePreparatorTest#testNoContextPrepare",
      "DefaultWorkflowExecutorTest#testExecuteImplicitWorkflowWithDefaultContexts",
      "UnknownExtensionParserTest#initializationError",
      "CertificateStatusRequestExtensionPreparatorTest#testPreparator",
      "ClientAuthzExtensionHandlerTest#testGetPreparator",
      "ClientAuthzExtensionHandlerTest#testGetSerializer",
      "ClientAuthzExtensionHandlerTest#testAdjustTLSContext",
      "ClientAuthzExtensionHandlerTest#testGetParser",
      "ClientHelloHandlerTest#testAdjustTLSContextWithCookie",
      "ClientHelloHandlerTest#testGetPreparator",
      "ClientHelloHandlerTest#testGetSerializer",
      "ClientHelloHandlerTest#testAdjustTLSContext",
      "ClientHelloHandlerTest#testGetParser",
      "TokenBindingExtensionHandlerTest#testGetPreparator",
      "TokenBindingExtensionHandlerTest#testGetSerializer",
      "TokenBindingExtensionHandlerTest#testAdjustTLSContext",
      "TokenBindingExtensionHandlerTest#testGetParser",
      "KeySharePairPreparatorTest#testPrepare",
      "KeySharePairPreparatorTest#testNoContextPrepare",
      "ConfigTest#assertConfigInResourcesIsEqual",
      "MitmDelegateTest#testParseValidParametersWithAlias",
      "MitmDelegateTest#testApplyDelegate",
      "MitmDelegateTest#testParseValidParameters",
      "MitmDelegateTest#testApplyDelegateWithEmptyConfig",
      "MitmDelegateTest#testApplyDelegateInvalidPorts",
      "SignatureAndHashAlgorithmTest#testPrintAlgos",
      "ChangePreMasterSecretActionTest#testExecute",
      "ChangePreMasterSecretActionTest#testSetNewValue",
      "ChangePreMasterSecretActionTest#testGetNewValue",
      "ChangePreMasterSecretActionTest#testReset",
      "ChangePreMasterSecretActionTest#testGetOldValue",
      "NewSessionTicketPreparatorTest#testPrepare",
      "NewSessionTicketPreparatorTest#testNoContextPrepare",
      "RecordBlockCipherTest#testGetPaddingLength",
      "RecordBlockCipherTest#testGetMacLength",
      "RecordBlockCipherTest#testConstructors",
      "RecordBlockCipherTest#testEncryptTls10",
      "RecordBlockCipherTest#testEncryptTls12",
      "RecordBlockCipherTest#testCalculatePadding",
      "RecordBlockCipherTest#test",
      "RecordBlockCipherTest#testDecrypt10",
      "RecordBlockCipherTest#testDecrypt12",
      "RecordBlockCipherTest#testCalculateMac",
      "PSKKeyExchangeModesExtensionSerializerTest#testSerialize",
      "PSKKeyExchangeModesExtensionSerializerTest#testSerializeExtensionContent",
      "SendMessageHelperTest#testSendEmptyRecords",
      "SendMessageHelperTest#testSendMessages",
      "TokenBindingHeaderPreparatorTest#testPrepare",
      "ServerTcpTransportHandlerTest#testCloseClientConnection",
      "ServerTcpTransportHandlerTest#testCloseConnection",
      "ServerTcpTransportHandlerTest#testInitialize",
      "ServerTcpTransportHandlerTest#fullTest",
      "CertificateDelegateTest#testApplyDelegateInvalidJKS",
      "CertificateDelegateTest#testSetPassword",
      "CertificateDelegateTest#testGetPassword",
      "CertificateDelegateTest#testGetAlias",
      "CertificateDelegateTest#testApplyDelegate",
      "CertificateDelegateTest#testApplyDelegateInvalidPassword",
      "CertificateDelegateTest#testApplyDelegateInvalidAlias",
      "CertificateDelegateTest#testNothingSetNothingChanges",
      "CertificateDelegateTest#testApplyDelegateNoKeyStore",
      "CertificateDelegateTest#testSetKeystore",
      "CertificateDelegateTest#testGetKeystore",
      "CertificateDelegateTest#testSetAlias",
      "RSAClientKeyExchangeHandlerTest#testGetPreparator",
      "RSAClientKeyExchangeHandlerTest#testGetSerializer",
      "RSAClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "RSAClientKeyExchangeHandlerTest#testGetParser",
      "ECDHClientKeyExchangeHandlerTest#testGetPreparator",
      "ECDHClientKeyExchangeHandlerTest#testGetSerializer",
      "ECDHClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "ECDHClientKeyExchangeHandlerTest#testGetParser",
      "ChangeCipherSpecHandlerTest#testGetPreparator",
      "ChangeCipherSpecHandlerTest#testGetSerializer",
      "ChangeCipherSpecHandlerTest#testAdjustTLSContext",
      "ChangeCipherSpecHandlerTest#testGetParser",
      "SendDynamicClientKeyExchangeActionTest#testToCompactString",
      "SendDynamicClientKeyExchangeActionTest#testExecute",
      "SendDynamicClientKeyExchangeActionTest#testReset",
      "SendDynamicClientKeyExchangeActionTest#testGetSendRecords",
      "SendDynamicClientKeyExchangeActionTest#testToString",
      "SendDynamicClientKeyExchangeActionTest#testSetRecords",
      "SendDynamicClientKeyExchangeActionTest#testEquals",
      "SendDynamicClientKeyExchangeActionTest#testGetSendMessages",
      "ExtendedMasterSecretExtensionHandlerTest#testGetPreparator",
      "ExtendedMasterSecretExtensionHandlerTest#testGetSerializer",
      "ExtendedMasterSecretExtensionHandlerTest#testAdjustTLSContext",
      "ExtendedMasterSecretExtensionHandlerTest#testGetParser",
      "UnknownHandshakeMessageTest#testToString",
      "SrtpExtensionHandlerTest#testGetPreparator",
      "SrtpExtensionHandlerTest#testGetSerializer",
      "SrtpExtensionHandlerTest#testAdjustTLSContext",
      "SrtpExtensionHandlerTest#testGetParser",
      "SRPExtensionPreparatorTest#testPreparator",
      "DHEServerKeyExchangePreparatorTest#testPrepare",
      "DHEServerKeyExchangePreparatorTest#testNoContextPrepare",
      "UserMappingExtensionParserTest#testParseExtensionMessageContent",
      "RSAClientKeyExchangePreparatorTest#testPrepareSSL3",
      "RSAClientKeyExchangePreparatorTest#testPrepare",
      "RSAClientKeyExchangePreparatorTest#testNoContextPrepare",
      "ECDHEServerKeyExchangeMessageTest#testToString",
      "ClientCertificateUrlExtensionParserTest#testParseExtensionMessageContent",
      "PWDComputationsTest#computePE",
      "CertificateVerifyHandlerTest#testGetPreparator",
      "CertificateVerifyHandlerTest#testGetSerializer",
      "CertificateVerifyHandlerTest#testAdjustTLSContext",
      "CertificateVerifyHandlerTest#testGetParser",
      "TruncatedHmacExtensionParserTest#testParseExtensionMessageContent",
      "RecordEncryptorTest#testEncryptTLS13",
      "RecordEncryptorTest#testEncryptTLS12StreamEncrypthThenMac",
      "RecordEncryptorTest#testEncryptTLS12Stream",
      "RecordEncryptorTest#testEncryptTLS12AEADEncrypthThenMac",
      "RecordEncryptorTest#testEncryptTLS12Camellia",
      "RecordEncryptorTest#testEncryptTLS10GOST",
      "RecordEncryptorTest#testEncryptTLS12AEAD",
      "RecordEncryptorTest#testEncryptTLS10Block",
      "RecordEncryptorTest#testEncryptTLS12Block",
      "SendAsciiActionTest#testExecute",
      "SendAsciiActionTest#testReset",
      "SendAsciiActionTest#testGetAsciiString",
      "SendAsciiActionTest#testExecuteWorkflowExecutionException",
      "SendAsciiActionTest#testExecutedAsPlanned",
      "SupportedVersionsExtensionPreparatorTest#testPrepare",
      "SupportedVersionsExtensionPreparatorTest#testNoContextPrepare",
      "NewSessionTicketMessageTest#testToString",
      "CachedObjectSerializerTest#testSerializeBytes",
      "WorkflowConfigurationFactoryTest#testCreateFullWorkflow",
      "WorkflowConfigurationFactoryTest#testCreateHelloWorkflow",
      "WorkflowConfigurationFactoryTest#testAddStartTlsAction",
      "WorkflowConfigurationFactoryTest#testNoExceptions",
      "WorkflowConfigurationFactoryTest#testCreateHandshakeWorkflow",
      "CertificateStatusRequestV2ExtensionParserTest#testParser",
      "CertificateMessageHandlerTest#testGetPreparator",
      "CertificateMessageHandlerTest#testGetSerializer",
      "CertificateMessageHandlerTest#testAdjustTLSContext",
      "CertificateMessageHandlerTest#testGetParser",
      "CertificateMessageHandlerTest#testAdjustTLSContextWithUnparsableCertificate",
      "ClientAuthzExtensionPreparatorTest#testPreparator",
      "PWDServerKeyExchangeMessageTest#testToString",
      "FieldElementF2mTest#testAdd",
      "FieldElementF2mTest#testSubtract",
      "FieldElementF2mTest#testMult",
      "FieldElementF2mTest#testMultInv",
      "FieldElementF2mTest#testAddInv",
      "FieldElementF2mTest#testDivide",
      "FieldElementF2mTest#testEquals",
      "CertificateTypeExtensionHandlerTest#testGetPreparator",
      "CertificateTypeExtensionHandlerTest#testGetSerializer",
      "CertificateTypeExtensionHandlerTest#testAdjustTLSContext",
      "CertificateTypeExtensionHandlerTest#testGetParser",
      "ResponderIdParserTest#testParser",
      "UserMappingExtensionPreparatorTest#testPreparator",
      "ClientHelloMessageTest#testToString",
      "ServerHelloPreparatorTest#testPrepare",
      "ServerHelloPreparatorTest#testNoContextPrepare",
      "ServerDelegateTest#testApplyDelegate",
      "ServerDelegateTest#applyingEmptyDelegateThrowsException",
      "ServerDelegateTest#testGetPort",
      "ServerDelegateTest#testApplyDelegateWithEmptyConfig",
      "ServerDelegateTest#testSetPort",
      "HelloVerifyRequestPreparatorTest#testPrepare",
      "HelloVerifyRequestPreparatorTest#testNoContextPrepare",
      "HttpsRequestHandlerTest#testGetPreparator",
      "HttpsRequestHandlerTest#testGetSerializer",
      "HttpsRequestHandlerTest#testAdjustTLSContext",
      "HttpsRequestHandlerTest#testGetParser",
      "ServerNameIndicationExtensionHandlerTest#testGetPreparator",
      "ServerNameIndicationExtensionHandlerTest#testGetSerializer",
      "ServerNameIndicationExtensionHandlerTest#testAdjustTLSContext",
      "ServerNameIndicationExtensionHandlerTest#testUndefinedAdjustTLSContext",
      "ServerNameIndicationExtensionHandlerTest#testGetParser",
      "SrpServerKeyExchangeHandlerTest#testAdjustTLSContextWithoutComputations",
      "SrpServerKeyExchangeHandlerTest#testGetPreparator",
      "SrpServerKeyExchangeHandlerTest#testGetSerializer",
      "SrpServerKeyExchangeHandlerTest#testAdjustTLSContext",
      "SrpServerKeyExchangeHandlerTest#testGetParser",
      "PointFormatterTest#cyclicTest",
      "MaxFragmentLengthExtensionHandlerTest#testUndefinedAdjustment",
      "MaxFragmentLengthExtensionHandlerTest#testGetPreparator",
      "MaxFragmentLengthExtensionHandlerTest#testGetSerializer",
      "MaxFragmentLengthExtensionHandlerTest#testAdjustTLSContext",
      "MaxFragmentLengthExtensionHandlerTest#testGetParser",
      "EllipticCurveDelegateTest#testApplyDelegate",
      "EllipticCurveDelegateTest#testSetPointFormats",
      "EllipticCurveDelegateTest#testSetNamedCurves",
      "EllipticCurveDelegateTest#testInvalidPointFormats",
      "EllipticCurveDelegateTest#testInvalidCurves",
      "EllipticCurveDelegateTest#testNothingSetNothingChanges",
      "EllipticCurveDelegateTest#testGetNamedCurves",
      "EllipticCurveDelegateTest#testGetPointFormats",
      "ClientTcpNoDelayTransportHandlerTest#testInitialize",
      "DeactivateEncryptionActionTest#testExecute",
      "DeactivateEncryptionActionTest#testReset",
      "EncryptThenMacExtensionPreparatorTest#testPreparator",
      "UserMappingExtensionHandlerTest#testGetPreparator",
      "UserMappingExtensionHandlerTest#testGetSerializer",
      "UserMappingExtensionHandlerTest#testAdjustTLSContext",
      "UserMappingExtensionHandlerTest#testGetParser",
      "ServerNamePairSerializierTest#testSerializeBytes",
      "PasswordSaltExtensionPreparatorTest#testPreparator",
      "RecordLayerTest#testWrapData",
      "ChangeCipherSpecMessageTest#testToString",
      "AlgorithmResolverTest#testGetHKDFAlgorithm",
      "AlgorithmResolverTest#testUnresolvableMACUnknown",
      "AlgorithmResolverTest#getAllMacAlgorithms",
      "AlgorithmResolverTest#testUnresolvableCipherTypeFallback",
      "AlgorithmResolverTest#testGetDigestUnsupportedProtocolVersionSSL2",
      "AlgorithmResolverTest#testGetDigestUnsupportedProtocolVersionSSL3",
      "AlgorithmResolverTest#testGetPRFAlgorithm",
      "AlgorithmResolverTest#testGetAllCipherTypes",
      "AlgorithmResolverTest#testGetPRFUnsupportedProtocolVersionSSL2",
      "AlgorithmResolverTest#testGetPRFUnsupportedProtocolVersionSSL3",
      "AlgorithmResolverTest#testAllCipherSuitesGetKeyExchange",
      "AlgorithmResolverTest#testUnresolvableKeyExchangeUnknown",
      "AlgorithmResolverTest#testGetKeyExchangeAlgorithm",
      "AlgorithmResolverTest#testUnresolvableKeyExchangeReno",
      "AlgorithmResolverTest#testGetMacAlgorithm",
      "AlgorithmResolverTest#testGetAllCipher",
      "AlgorithmResolverTest#testUnresolvableCipherUnknown",
      "AlgorithmResolverTest#testUnresolvableCipherTypeReno",
      "AlgorithmResolverTest#testGetCipher",
      "AlgorithmResolverTest#testUnresolvableMACReno",
      "AlgorithmResolverTest#testGetCipherType",
      "AlgorithmResolverTest#testUnresolvableCipherReno",
      "AlgorithmResolverTest#testUnresolvableMACFallback",
      "AlgorithmResolverTest#testGetDigestAlgorithm",
      "AlgorithmResolverTest#testUnresolvableCipherTypeUnknown",
      "AlgorithmResolverTest#testUnresolvableKeyExchangeFallback",
      "AlgorithmResolverTest#testUnresolvableCipherFallback",
      "EncryptedExtensionsMessageTest#testToString",
      "ClientCertificateUrlExtensionHandlerTest#testGetPreparator",
      "ClientCertificateUrlExtensionHandlerTest#testGetSerializer",
      "ClientCertificateUrlExtensionHandlerTest#testAdjustTLSContext",
      "ClientCertificateUrlExtensionHandlerTest#testGetParser",
      "DHEServerKeyExchangeMessageTest#testToString",
      "TrustedCaIndicationExtensionParserTest#initializationError",
      "RecordNullCipherTest#testEncrypt",
      "RecordNullCipherTest#testGetPaddingLength",
      "RecordNullCipherTest#testGetMacLength",
      "RecordNullCipherTest#testCalculatePadding",
      "RecordNullCipherTest#testDecrypt",
      "RecordNullCipherTest#testCalculateMac",
      "ChangeServerRandomActionTest#testExecute",
      "ChangeServerRandomActionTest#testSetNewValue",
      "ChangeServerRandomActionTest#testGetNewValue",
      "ChangeServerRandomActionTest#testReset",
      "ChangeServerRandomActionTest#testGetOldValue",
      "EllipticCurveTest#test",
      "ECDHEServerKeyExchangeHandlerTest#testAdjustTLSContextWithoutComputations",
      "ECDHEServerKeyExchangeHandlerTest#testGetPreparator",
      "ECDHEServerKeyExchangeHandlerTest#testGetSerializer",
      "ECDHEServerKeyExchangeHandlerTest#testAdjustTLSContext",
      "ECDHEServerKeyExchangeHandlerTest#testGetParser",
      "RemBufferedChCiphersActionTest#removingMultipleExtensionsIsOk",
      "RemBufferedChCiphersActionTest#removingNonProposedExtensionsIsOk",
      "RemBufferedChCiphersActionTest#removingNothingIsOk",
      "RemBufferedChCiphersActionTest#removingSingleExtensionIsOk",
      "ChangeCompressionActionTest#testExecute",
      "ChangeCompressionActionTest#testSetNewValue",
      "ChangeCompressionActionTest#testGetNewValue",
      "ChangeCompressionActionTest#testReset",
      "ChangeCompressionActionTest#testGetOldValue",
      "ClientCommandConfigTest#testInvalidCommandLineParsing",
      "ClientCommandConfigTest#testCommandLineParsing",
      "MacWrapperTest#testSha1",
      "MacWrapperTest#testGOST3411",
      "MacWrapperTest#testGOST28147IMIT",
      "CertificateVerifyPreparatorTest#testPrepareSSL3RSA",
      "CertificateVerifyPreparatorTest#testNoContextPrepare",
      "CustomECPrivateKeyTest#initializationError",
      "CertificateRequestMessageTest#testToString",
      "CachedInfoExtensionPreparatorTest#testPreparator",
      "KeySetGeneratorTest#testGenerateKeySet",
      "TokenBindingExtensionPreparatorTest#testPreparator",
      "TokenBindingExtensionPreparatorTest#testNoContextPrepare",
      "CopyBufferedRecordsActionTest#testCopyField",
      "CopyBufferedRecordsActionTest#testReset",
      "CopyBufferedRecordsActionTest#testExecutedAsPlanned",
      "ClientKeyExchangeHandlerTest#testMasterSecretCalculationSSL3",
      "PWDClientKeyExchangeHandlerTest#testGetPreparator",
      "PWDClientKeyExchangeHandlerTest#testGetSerializer",
      "PWDClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "PWDClientKeyExchangeHandlerTest#testGetParser",
      "PWDClientKeyExchangeMessageTest#testToString",
      "ServerHelloDonePreparatorTest#testPrepare",
      "ServerHelloDonePreparatorTest#testNoContextPrepare",
      "PWDClearExtensionHandlerTest#testGetPreparator",
      "PWDClearExtensionHandlerTest#testGetSerializer",
      "PWDClearExtensionHandlerTest#testAdjustTLSContext",
      "PWDClearExtensionHandlerTest#testGetParser",
      "SignedCertificateTimestampExtensionPreparatorTest#testPreparator",
      "SignedCertificateTimestampExtensionPreparatorTest#testNoContextPrepare",
      "ServerHelloDoneHandlerTest#testGetPreparator",
      "ServerHelloDoneHandlerTest#testGetSerializer",
      "ServerHelloDoneHandlerTest#testAdjustTLSContext",
      "ServerHelloDoneHandlerTest#testGetParser",
      "SignatureCalculatorTest#anonymousSignatureTest",
      "HelloRequestPreparatorTest#testPrepare",
      "HelloRequestPreparatorTest#testNoContextPrepare",
      "SendActionTest#testExecute",
      "SendActionTest#testReset",
      "UnlimitedStrengthTest#testAES256",
      "UnknownPreparatorTest#testPrepare",
      "UnknownPreparatorTest#testNoContextPrepare",
      "ExtendedMasterSecretExtensionPreparatorTest#testPreparator",
      "ExtendedMasterSecretExtensionPreparatorTest#testNoContextPrepare",
      "CertificateRequestPreparatorTest#testPrepare",
      "CertificateRequestPreparatorTest#testNoContextPrepare",
      "MessageActionFactoryTest#testCreateActionMultiple",
      "MessageActionFactoryTest#testCreateActionOne",
      "MessageActionFactoryTest#testCreateAsciiAction",
      "PWDClientKeyExchangeParserTest#testParse",
      "PskEcDhClientKeyExchangeHandlerTest#testGetPreparator",
      "PskEcDhClientKeyExchangeHandlerTest#testGetSerializer",
      "PskEcDhClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "PskEcDhClientKeyExchangeHandlerTest#testGetParser",
      "TruncatedHmacExtensionPreparatorTest#testPreparator",
      "PskClientKeyExchangeMessageTest#testToString",
      "ServerTCPNonBlockingTransportHandlerTest#testCloseClientConnection",
      "ServerTCPNonBlockingTransportHandlerTest#testCloseConnection",
      "ServerTCPNonBlockingTransportHandlerTest#testInitialize",
      "ServerTCPNonBlockingTransportHandlerTest#testRecheck",
      "ServerTCPNonBlockingTransportHandlerTest#fullTest",
      "KeyShareCalculatorTest#crashTest",
      "DefaultChooserTest#testGetPWDClientUsername",
      "DefaultChooserTest#testGetClientSupportedCompressions",
      "DefaultChooserTest#testGetClientHandshakeTrafficSecret",
      "DefaultChooserTest#testGetSelectedCompressionMethod",
      "DefaultChooserTest#testGetServerSupportedPointFormats",
      "DefaultChooserTest#testGetClientSessionId",
      "DefaultChooserTest#testGetClientEcPublicKey",
      "DefaultChooserTest#testGetPRFAlgorithm",
      "DefaultChooserTest#testGetTransportHandler",
      "DefaultChooserTest#testGetClientSupportedCiphersuites",
      "DefaultChooserTest#testGetServerRandom",
      "DefaultChooserTest#testGetSessionTicketTLS",
      "DefaultChooserTest#testGetTokenBindingVersion",
      "DefaultChooserTest#testGetRsaModulus",
      "DefaultChooserTest#testGetClientRSAPublicKey",
      "DefaultChooserTest#testGetSelectedCurve",
      "DefaultChooserTest#testGetCertificateRequestContext",
      "DefaultChooserTest#testGetDistinguishedNames",
      "DefaultChooserTest#testGetServerSessionId",
      "DefaultChooserTest#testGetClientCertificateTypes",
      "DefaultChooserTest#testGetClientSupportedSignatureAndHashAlgorithms",
      "DefaultChooserTest#testGetClientEcPrivateKey",
      "DefaultChooserTest#testGetSelectedSigHashAlgorithm",
      "DefaultChooserTest#testGetServerRSAPublicKey",
      "DefaultChooserTest#testGetClientRandom",
      "DefaultChooserTest#testGetDhModulus",
      "DefaultChooserTest#testGetDtlsCookie",
      "DefaultChooserTest#testIsUseExtendedMasterSecret",
      "DefaultChooserTest#testGetMasterSecret",
      "DefaultChooserTest#testGetServerEcPrivateKey",
      "DefaultChooserTest#testGetHighestClientProtocolVersion",
      "DefaultChooserTest#testGetClientSupportedNamedCurves",
      "DefaultChooserTest#testGetHeartbeatMode",
      "DefaultChooserTest#testGetClientSNIEntryList",
      "DefaultChooserTest#testGetDhServerPrivateKey",
      "DefaultChooserTest#testGetDhClientPrivateKey",
      "DefaultChooserTest#testGetSelectedProtocolVersion",
      "DefaultChooserTest#testGetLastRecordVersion",
      "DefaultChooserTest#testGetServerSupportedSignatureAndHashAlgorithms",
      "DefaultChooserTest#testGetPreMasterSecret",
      "DefaultChooserTest#testGetServerEcPublicKey",
      "DefaultChooserTest#testGetDhClientPublicKey",
      "DefaultChooserTest#testGetSignedCertificateTimestamp",
      "DefaultChooserTest#testGetTokenBindingKeyParameters",
      "DefaultChooserTest#testGetTalkingConnectionEnd",
      "DefaultChooserTest#testGetMaxFragmentLength",
      "DefaultChooserTest#testGetClientSupportedPointFormats",
      "DefaultChooserTest#testGetSelectedCipherSuite",
      "DefaultChooserTest#testGetPWDPassword",
      "DefaultChooserTest#testGetEcCurveType",
      "DefaultChooserTest#testGetDhServerPublicKey",
      "DefaultChooserTest#testGetServerPWDSalt",
      "DefaultChooserTest#testGetServerHandshakeTrafficSecret",
      "DefaultChooserTest#testGetDhGenerator",
      "HttpsRequestPreparatorTest#testPrepareProtocolMessageContents",
      "WorkflowTraceTest#testSetTlsActions",
      "WorkflowTraceTest#testConfiguredLooksLikeActual",
      "WorkflowTraceTest#testGetLastAction",
      "WorkflowTraceTest#testReset",
      "WorkflowTraceTest#testStrip",
      "WorkflowTraceTest#testAdd_TLSAction",
      "WorkflowTraceTest#testSetDescription",
      "WorkflowTraceTest#testGetTLSActions",
      "WorkflowTraceTest#testGetLastMessageAction",
      "WorkflowTraceTest#testGetName",
      "WorkflowTraceTest#testMakeGeneric",
      "WorkflowTraceTest#testGetDescription",
      "WorkflowTraceTest#testGetSendActions",
      "WorkflowTraceTest#testGetMessageActions",
      "WorkflowTraceTest#testSetName",
      "WorkflowTraceTest#testRemove",
      "WorkflowTraceTest#testAdd_int_TLSAction",
      "WorkflowTraceTest#testGetReceiveActions",
      "WorkflowOutputDelegateTest#testGetWorkflowOutput",
      "WorkflowOutputDelegateTest#testApplyDelegate",
      "WorkflowOutputDelegateTest#testNothingSetNothingChanges",
      "WorkflowOutputDelegateTest#testSetWorkflowOutput",
      "RequestItemV2ParserTest#testParser",
      "HeartbeatMessageHandlerTest#testGetPreparator",
      "HeartbeatMessageHandlerTest#testGetSerializer",
      "HeartbeatMessageHandlerTest#testAdjustTLSContext",
      "HeartbeatMessageHandlerTest#testGetParser",
      "ClientUdpTransportHandlerTest#testFetchData",
      "ClientUdpTransportHandlerTest#testFetchTimeout",
      "ClientUdpTransportHandlerTest#testSendData",
      "CompressionDelegateTest#testApplyDelegate",
      "CompressionDelegateTest#testSetCompressionMethods",
      "CompressionDelegateTest#testGetCompressionMethods",
      "CompressionDelegateTest#testGetInvalidCompression",
      "CompressionDelegateTest#testNothingSetNothingChanges",
      "EncryptThenMacExtensionParserTest#testParseExtensionMessageContent",
      "TlsConfigTest#testReadFromResource",
      "PskEcDheServerKeyExchangeMessageTest#testToString",
      "ForwardMessagesActionTest#marshalingAndUnmarshalingYieldsEqualObject",
      "ForwardMessagesActionTest#executingWithEmptyAliasThrowsException",
      "ForwardMessagesActionTest#marshalingEmptyActionYieldsMinimalOutput",
      "ForwardMessagesActionTest#forwardingApplicationMessageAdoptsData",
      "ForwardMessagesActionTest#executingSetsExecutionFlagsCorrectly",
      "ForwardMessagesActionTest#executingTwiceThrowsException",
      "ForwardMessagesActionTest#executingWithNullAliasThrowsException",
      "DHClientKeyExchangePreparatorTest#testPrepare",
      "DHClientKeyExchangePreparatorTest#testPrepareAfterParse",
      "DHClientKeyExchangePreparatorTest#testPrepareAfterParseReverseMode",
      "DHClientKeyExchangePreparatorTest#testNoContextPrepare",
      "CertificateStatusRequestExtensionHandlerTest#testGetPreparator",
      "CertificateStatusRequestExtensionHandlerTest#testGetSerializer",
      "CertificateStatusRequestExtensionHandlerTest#testAdjustTLSContext",
      "CertificateStatusRequestExtensionHandlerTest#testGetParser",
      "PskRsaClientKeyExchangeHandlerTest#testGetPreparator",
      "PskRsaClientKeyExchangeHandlerTest#testGetSerializer",
      "PskRsaClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "PskRsaClientKeyExchangeHandlerTest#testGetParser",
      "HttpsRequestParserTest#testParseMessageContentFailed",
      "HttpsRequestParserTest#testParseMessageContentSuccess",
      "PskEcDhClientKeyExchangeMessageTest#testToString",
      "PskDheServerKeyExchangeHandlerTest#testAdjustTLSContextWithoutComputations",
      "PskDheServerKeyExchangeHandlerTest#testGetPreparator",
      "PskDheServerKeyExchangeHandlerTest#testGetSerializer",
      "PskDheServerKeyExchangeHandlerTest#testAdjustTLSContext",
      "PskDheServerKeyExchangeHandlerTest#testGetParser",
      "PskRsaClientKeyExchangeMessageTest#testToString",
      "HelloRequestHandlerTest#testGetPreparator",
      "HelloRequestHandlerTest#testGetSerializer",
      "HelloRequestHandlerTest#testAdjustTLSContext",
      "HelloRequestHandlerTest#testGetParser",
      "RecordDecryptorTest#testDecryptTLS12StreamEncrypthThenMac",
      "RecordDecryptorTest#testDecryptTLS12BlockEncrypthThenMac",
      "RecordDecryptorTest#testDecryptTLS10Stream",
      "RecordDecryptorTest#testDecryptTLS12Camellia",
      "RecordDecryptorTest#testDecryptTLS12AEADEncrypthThenMac",
      "RecordDecryptorTest#testDecryptTLS10Block",
      "RecordDecryptorTest#testDecryptTLS12Block",
      "RecordDecryptorTest#testDecrypt",
      "RecordDecryptorTest#testDecryptTLS12Stream",
      "RecordDecryptorTest#testDecryptTLS12AEAD",
      "KeySharePairSerializerTest#testSerializeBytes",
      "CertificateRequestHandlerTest#testAdjustTLSContextUnadjustable",
      "CertificateRequestHandlerTest#testGetPreparator",
      "CertificateRequestHandlerTest#testGetSerializer",
      "CertificateRequestHandlerTest#testAdjustTLSContext",
      "CertificateRequestHandlerTest#testGetParser",
      "SSL2ClientHelloMessageTest#testToString",
      "EncryptThenMacExtensionSerializerTest#testSerializeExtensionContent",
      "CopyBuffersActionTest#testExecute",
      "CopyBuffersActionTest#testGetSrcContextAlias",
      "CopyBuffersActionTest#reset",
      "CopyBuffersActionTest#testAliasesSetProperlyErrorDst",
      "CopyBuffersActionTest#testAliasesSetProperlyErrorSrc",
      "CopyBuffersActionTest#testGetDstContextAlias",
      "CopyBuffersActionTest#testGetAllAliases",
      "CiphersuiteDelegateTest#testGetCipherSuites",
      "CiphersuiteDelegateTest#testApplyDelegate",
      "CiphersuiteDelegateTest#testSetCipherSuites",
      "CiphersuiteDelegateTest#testNothingSetNothingChanges",
      "CiphersuiteDelegateTest#testGetInvalidCiphersuite",
      "ChangeCipherSpecPreparatorTest#testPrepare",
      "WaitingActionTest#testExecute",
      "WaitingActionTest#testReset",
      "PskClientKeyExchangeHandlerTest#testGetPreparator",
      "PskClientKeyExchangeHandlerTest#testGetSerializer",
      "PskClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "PskClientKeyExchangeHandlerTest#testGetParser",
      "ChangeProtocolVersionActionTest#testExecute",
      "ChangeProtocolVersionActionTest#testSetNewValue",
      "ChangeProtocolVersionActionTest#testGetNewValue",
      "ChangeProtocolVersionActionTest#testReset",
      "ChangeProtocolVersionActionTest#testGetOldValue",
      "PWDClientKeyExchangeSerializerTest#serializeHandshakeMessageContent",
      "PWDServerKeyExchangePreparatorTest#testPrepareHandshakeMessageContents",
      "SrpServerKeyExchangeMessageTest#testToString",
      "ApplicationMessageHandlerTest#testGetPreparator",
      "ApplicationMessageHandlerTest#testGetSerializer",
      "ApplicationMessageHandlerTest#testAdjustTLSContext",
      "ApplicationMessageHandlerTest#testGetParser",
      "UnknownParserTest#testParse",
      "ServerAuthzExtensionPreparatorTest#testPreparator",
      "ReceiveMessageHelperTest#testReceiveDTLSMessagesDisorderly",
      "ReceiveMessageHelperTest#testReceiveDTLSMessagesSeparatelyDisorderly",
      "ReceiveMessageHelperTest#testReceiveDTLSFragment",
      "ReceiveMessageHelperTest#testReceiveDTLSMessagesManyRepeatsIgnoreDisorderly",
      "ReceiveMessageHelperTest#testReceiveDTLSMessagesManyRepeats",
      "ReceiveMessageHelperTest#testReceiveDTLSMessages",
      "PojoPackageTest#validate",
      "CopyServerRandomActionTest#testExecute",
      "CopyServerRandomActionTest#testGetAlias",
      "CopyServerRandomActionTest#testEquals",
      "CopyServerRandomActionTest#testGetAllAliases",
      "HttpsResponseParserTest#testParseMessageContentFailed",
      "HttpsResponseParserTest#testParseMessageContentSuccess",
      "TransportHandlerDelegateTest#testApplyDelegate",
      "TransportHandlerDelegateTest#testSetTransportHandlerType",
      "TransportHandlerDelegateTest#testNothingSetNothingChanges",
      "TransportHandlerDelegateTest#testGetInvalidTransportHandlerType",
      "TransportHandlerDelegateTest#testGetTransportHandlerType",
      "SupportedVersionsExtensionHandlerTest#testGetPreparator",
      "SupportedVersionsExtensionHandlerTest#testGetSerializer",
      "SupportedVersionsExtensionHandlerTest#testAdjustTLSContext",
      "SupportedVersionsExtensionHandlerTest#testGetParser",
      "SupportedVersionsExtensionHandlerTest#testAdjustTLSContextBadVersions",
      "CertificateMessageTest#testToString",
      "AlertPreparatorTest#testPrepareFromDefaultConfig",
      "AlertPreparatorTest#testPrepare",
      "AlertPreparatorTest#testNoContextPrepare",
      "ServerHelloHandlerTest#testAdjustTLSContextTls13PWD",
      "ServerHelloHandlerTest#testAdjustTLSContextTls13",
      "ServerHelloHandlerTest#testGetPreparator",
      "ServerHelloHandlerTest#testGetSerializer",
      "ServerHelloHandlerTest#testAdjustTLSContext",
      "ServerHelloHandlerTest#testGetParser",
      "CachedInfoExtensionHandlerTest#testGetPreparator",
      "CachedInfoExtensionHandlerTest#testGetSerializer",
      "CachedInfoExtensionHandlerTest#testAdjustTLSContext",
      "CachedInfoExtensionHandlerTest#testGetParser",
      "GOST28147CipherTest#testEncryptAndDecrypt",
      "HelloRetryRequestHandlerTest#testGetPreparator",
      "HelloRetryRequestHandlerTest#testGetSerializer",
      "HelloRetryRequestHandlerTest#testAdjustTLSContext",
      "HelloRetryRequestHandlerTest#testGetParser",
      "SignatureAndHashAlgorithmDelegateTest#testApplyDelegate",
      "SignatureAndHashAlgorithmDelegateTest#testSetSignatureAndHashAlgorithms",
      "SignatureAndHashAlgorithmDelegateTest#testGetSignatureAndHashAlgorithms",
      "SignatureAndHashAlgorithmDelegateTest#testNothingSetNothingChanges",
      "SignatureAndHashAlgorithmDelegateTest#testGetInvalidSignatureHashAlgorithms",
      "StateTest#getContextRequiresAliasForMultipleDefinedContexts",
      "StateTest#emptyInitUsesWorklfowTraceTypeFromConfig",
      "StateTest#settingDifferentConnectionsWithSameAliasFails",
      "StateTest#initWithoutWorkflowTraceFailsProperly",
      "StateTest#initFromConfigAndWorkflowTrace",
      "StateTest#replacingTlsContextWithBadAliasFails",
      "StateTest#dynamicallyChangingValidTlsContextSucceeds",
      "StateTest#replacingTlsContextWihtBadConnectionFails",
      "StateTest#changingValidTlsContextInMultiContextStateSucceeds",
      "StateTest#initFromGoodConfig",
      "StateTest#settingSingleContextWorkflowWithUnsupportedModeFails",
      "RecordTest#testGetRecordPreparator",
      "RecordTest#testGetRecordParser",
      "RecordTest#testGetRecordSerializer",
      "UnknownHandlerTest#testGetPreparator",
      "UnknownHandlerTest#testGetSerializer",
      "UnknownHandlerTest#testAdjustTLSContext",
      "UnknownHandlerTest#testGetParser",
      "WorkflowInputDelegateTest#testApplyDelegate",
      "WorkflowInputDelegateTest#testGetWorkflowInput",
      "WorkflowInputDelegateTest#testNothingSetNothingChanges",
      "WorkflowInputDelegateTest#testSetWorkflowInput",
      "PskEcDheServerKeyExchangeHandlerTest#testAdjustTLSContextWithoutComputations",
      "PskEcDheServerKeyExchangeHandlerTest#testGetPreparator",
      "PskEcDheServerKeyExchangeHandlerTest#testGetSerializer",
      "PskEcDheServerKeyExchangeHandlerTest#testAdjustTLSContext",
      "PskEcDheServerKeyExchangeHandlerTest#testGetParser",
      "FragmentManagerTest#testClearFragmentedMessage",
      "FragmentManagerTest#testIsMessageCompleteFalseDifferentEpochs",
      "FragmentManagerTest#testGetFragmentedMessageMultipleMessages",
      "FragmentManagerTest#testIsMessageCompleteFalse",
      "FragmentManagerTest#testGetFragmentedMessageDisordelyOverlapping",
      "FragmentManagerTest#testIsMessageCompleteTrue",
      "FragmentManagerTest#testIsMessageCompleteFalseEmpty",
      "TruncatedHmacExtensionSerializerTest#testSerializeExtensionContent",
      "CyclicParserSerializerTest#testParserSerializerPairs",
      "PWDServerKeyExchangeHandlerTest#testGetPreparator",
      "PWDServerKeyExchangeHandlerTest#testGetSerializer",
      "PWDServerKeyExchangeHandlerTest#testAdjustTLSContext",
      "PWDServerKeyExchangeHandlerTest#testGetParser",
      "EllipticCurvesExtensionHandlerTest#testAdjustTLSContextUnknownCurve",
      "EllipticCurvesExtensionHandlerTest#testGetPreparator",
      "EllipticCurvesExtensionHandlerTest#testGetSerializer",
      "EllipticCurvesExtensionHandlerTest#testAdjustTLSContext",
      "EllipticCurvesExtensionHandlerTest#testGetParser",
      "TlsAttackerSocketTest#testSend_String",
      "TlsAttackerSocketTest#testReceiveRawBytes",
      "TlsAttackerSocketTest#testReceiveString",
      "TlsAttackerSocketTest#testSend_byteArr",
      "TlsAttackerSocketTest#testReceiveBytes",
      "TlsAttackerSocketTest#testSendRawBytes",
      "CertificateStatusRequestV2ExtensionSerializerTest#testSerializer",
      "CachedInfoExtensionSerializerTest#initializationError",
      "AlpnExtensionHandlerTest#testGetPreparator",
      "AlpnExtensionHandlerTest#testGetSerializer",
      "AlpnExtensionHandlerTest#testAdjustTLSContext",
      "AlpnExtensionHandlerTest#testGetParser",
      "UnknownHandshakePreparatorTest#testPrepare",
      "UnknownHandshakePreparatorTest#testNoContextPrepare",
      "FinishedMessageTest#testToString",
      "TokenBindingMessageParserTest#testParseMessageContent",
      "PasswordSaltExtensionHandlerTest#testGetPreparator",
      "PasswordSaltExtensionHandlerTest#testGetSerializer",
      "PasswordSaltExtensionHandlerTest#testAdjustTLSContext",
      "PasswordSaltExtensionHandlerTest#testGetParser",
      "WorkflowTraceSerializerTest#testWrite",
      "WorkflowTraceSerializerTest#serializeWithMultipleCustomConnectionTest",
      "WorkflowTraceSerializerTest#testWriteRead",
      "WorkflowTraceSerializerTest#serializeWithSingleConnectionTest",
      "WorkflowTraceSerializerTest#serializeWithSingleCustomConnectionTest",
      "SSL2ServerHelloMessageTest#testToString",
      "SrpExtensionHandlerTest#testGetPreparator",
      "SrpExtensionHandlerTest#testGetSerializer",
      "SrpExtensionHandlerTest#testAdjustTLSContext",
      "SrpExtensionHandlerTest#testGetParser",
      "TimingProxyClientTcpTransportHandlerTest#testCloseConnection",
      "HelloVerifyRequestMessageTest#testToString",
      "ClientDelegateTest#testApplyDelegate",
      "ClientDelegateTest#bulkTest",
      "ClientDelegateTest#testGetHost",
      "ClientDelegateTest#testApplyDelegateWithEmptyConfig",
      "ClientDelegateTest#testApplyDelegateNullHost",
      "ClientDelegateTest#testSetHost",
      "ServerCommandConfigTest#testInvalidCommandLineParsing",
      "ReceiveActionTest#testExecute",
      "ReceiveActionTest#testReset",
      "ReceiveActionTest#testJAXB",
      "TimingClientTcpTransportHandlerTest#testCloseConnection",
      "TimingClientTcpTransportHandlerTest#testInitialize",
      "TimingClientTcpTransportHandlerTest#fullTest",
      "ECDHEServerKeyExchangePreparatorTest#testNoContextPrepare",
      "ECDHEServerKeyExchangePreparatorTest#testPrepareHandshakeMessageContents",
      "ApplicationMessageTest#testToString",
      "CachedObjectPreparatorTest#testPreparator",
      "SessionTicketTLSExtensionPreparatorTest#testPreparator",
      "SessionTicketTLSExtensionPreparatorTest#testNoContextPrepare",
      "SignatureAndHashAlgorithmsExtensionHandlerTest#testGetPreparator",
      "SignatureAndHashAlgorithmsExtensionHandlerTest#testGetSerializer",
      "SignatureAndHashAlgorithmsExtensionHandlerTest#testAdjustTLSContext",
      "SignatureAndHashAlgorithmsExtensionHandlerTest#testGetParser",
      "PskDhClientKeyExchangeHandlerTest#testGetPreparator",
      "PskDhClientKeyExchangeHandlerTest#testGetSerializer",
      "PskDhClientKeyExchangeHandlerTest#testAdjustTLSContext",
      "PskDhClientKeyExchangeHandlerTest#testGetParser",
      "HandlerFactoryTest#getHandshakeHandler",
      "HandlerFactoryTest#getClientKeyExchangeHandler",
      "HandlerFactoryTest#getExtensionHandler",
      "HandlerFactoryTest#getHandler",
      "HandlerFactoryTest#getServerKeyExchangeHandler",
      "FragmentCollectorTest#testbuildCombinedFragmentIncomplete",
      "FragmentCollectorTest#testIsFittingFalse",
      "FragmentCollectorTest#testIsFittingTrueEmpty",
      "FragmentCollectorTest#testbuildCombinedFragment",
      "FragmentCollectorTest#testAddTrue",
      "FragmentCollectorTest#testbuildCombinedFragmentDisorderlyOverlap",
      "FragmentCollectorTest#testIsEmptyTrue",
      "FragmentCollectorTest#testAddFalse",
      "FragmentCollectorTest#testIsMessageCompleteDisordelyTrue",
      "FragmentCollectorTest#testIsMessageCompleteFalse",
      "FragmentCollectorTest#testIsMessageCompleteTrue",
      "FragmentCollectorTest#testIsMessageCompleteTrueDisordelyOverlap",
      "FragmentCollectorTest#testIsMessageCompleteFalseDisordelyOverlap",
      "FragmentCollectorTest#testbuildCombinedFragmentAddUnfitting",
      "FragmentCollectorTest#testIsFittingTrue",
      "FragmentCollectorTest#testIsEmptyFalse",
      "ResetConnectionActionTest#testExecute",
      "ResetConnectionActionTest#testReset",
      "HeartbeatExtensionHandlerTest#testAdjustUnspecifiedMode",
      "HeartbeatExtensionHandlerTest#testGetPreparator",
      "HeartbeatExtensionHandlerTest#testGetSerializer",
      "HeartbeatExtensionHandlerTest#testAdjustTLSContext",
      "HeartbeatExtensionHandlerTest#testGetParser",
      "UnknownMessageTest#testToString",
      "ModifiableVariableAnalyzerTest#testGetAllModifiableVariableFields",
      "RecordAEADCipherTest#testEncrypt",
      "RecordAEADCipherTest#testInit",
      "RecordAEADCipherTest#testDecrypt",
      "PrintLastHandledApplicationDataActionTest#executingWithAsciiEncodingSavesAscii",
      "PrintLastHandledApplicationDataActionTest#testReset",
      "PrintLastHandledApplicationDataActionTest#executingWithDefaultsSavesHex",
      "ServerCertificateTypeExtensionPreparatorTest#testPreparator",
      "ServerHelloParserTest#initializationError",
      "UnknownHandshakeHandlerTest#testGetPreparator",
      "UnknownHandshakeHandlerTest#testGetSerializer",
      "UnknownHandshakeHandlerTest#testAdjustTLSContext",
      "UnknownHandshakeHandlerTest#testGetParser",
      "PseudoRandomFunctionTest#testComputeForTls11",
      "PseudoRandomFunctionTest#testComputeForTls12",
      "HeartbeatDelegateTest#testApplyDelegate",
      "HeartbeatDelegateTest#testSetHeartbeatMode",
      "HeartbeatDelegateTest#testGetHeartbeatMode",
      "HeartbeatDelegateTest#testGetInvalidHeartbeatMode",
      "HeartbeatDelegateTest#testNothingSetNothingChanges",
      "PWDServerKeyExchangeSerializerTest#serializeHandshakeMessageContent",
      "FinishedPreparatorTest#testPrepareTLS13",
      "FinishedPreparatorTest#testPrepare",
      "FinishedPreparatorTest#testNoContextPrepare",
      "FinishedPreparatorTest#testPrepareAndCompareWithRealDataNullEncryptedSSLv3",
      "FinishedPreparatorTest#testPrepareAndCompareWithRealDataNullEncrypted",
      "WorkflowTypeDelegateTest#testSetWorkflowTraceType",
      "WorkflowTypeDelegateTest#testApplyDelegate",
      "WorkflowTypeDelegateTest#testGetWorkflowTraceType",
      "WorkflowTypeDelegateTest#testNothingSetNothingChanges",
      "InboundConnectionTest#marshalingEmptyActionYieldsMinimalOutput",
      "InboundConnectionTest#mixInDefaultsFromEmptyReference",
      "InboundConnectionTest#marshalingAndUnmarshalingEmptyObjectYieldsEqualObject",
      "InboundConnectionTest#mixInDefaultsFromReference",
      "InboundConnectionTest#testSerializeNonDefaultFields",
      "InboundConnectionTest#stripDefaultsReversesMixInEmptyDefaults",
      "InboundConnectionTest#stripDefaultsReversesMixInDefaults",
      "ServerHelloMessageTest#testToString"
    ],
    "sentry-java": [
      "SentryAppenderEventBuildingTest#testSourceUsedAsStacktrace",
      "SentryAppenderEventBuildingTest#testMarkerAddedToTag",
      "SentryAppenderEventBuildingTest#testSimpleMessageLogging",
      "SentryAppenderEventBuildingTest#testExceptionLogging",
      "SentryAppenderEventBuildingTest#testNdcAddedToExtra",
      "SentryAppenderEventBuildingTest#testLogParametrisedMessage",
      "SentryAppenderEventBuildingTest#testMdcAddedToExtra",
      "SentryAppenderEventBuildingTest#testExtraTagObtainedFromMdc",
      "SentryAppenderFailuresTest#testAppendFailIfCurrentThreadSpawnedBySentry",
      "SentryAppenderFailuresTest#testSentryFailureDoesNotPropagate"
    ],
    "lavagna": [
      "ProjectServiceFindRelatedTest#initializationError",
      "CSRFFilterTest#testGET",
      "CSRFFilterTest#testPOSTWebSocketWithAnotherContextPath",
      "CSRFFilterTest#testPOSTWebSocket",
      "CSRFFilterTest#testPOSTWithWrongToken",
      "CSRFFilterTest#testPOSTWithToken",
      "CSRFFilterTest#testPOSTWithoutToken",
      "CSRFFilterTest#testPOSTHeaderWithToken",
      "StatisticsServiceTest#initializationError",
      "CalendarServiceTest#initializationError",
      "WebUserControllerTest#initializationError",
      "CardRepositoryTest#initializationError",
      "CalendarControllerTest#testUserCalDavCalendar",
      "ExcelExportServiceTest#initializationError",
      "UserServiceTest#initializationError",
      "LdapTest#wrongPassword",
      "LdapTest#nothingFound",
      "LdapTest#failOnFirstOpen",
      "LdapTest#authenticate",
      "ListValueMetadataRepositoryTest#initializationError",
      "SearchServiceTest#initializationError",
      "ImportServiceTest#initializationError",
      "AnonymousUserFilterTest#testAnonymousUserNotEnabled",
      "AnonymousUserFilterTest#testAnonymousUserEnabled",
      "LabelServiceTest#initializationError",
      "EventRepositoryTest#initializationError",
      "ProjectServiceTest#initializationError",
      "BoardColumnRepositoryTest#initializationError",
      "HandlersTest#handleGithubFlowAuth",
      "HandlersTest#handleGoogleFlowAuth",
      "HandlersTest#handleBitbucketFlowAuth",
      "HandlersTest#handleGitlabFlowAuth",
      "HandlersTest#handleTwitterFlowAuth",
      "CardLabelRepositoryTest#initializationError",
      "CardEventRepositoryTest#initializationError",
      "NotificationServiceTest#initializationError",
      "CardDataRepositoryTest#initializationError",
      "SecurityFilterTest#testSetupNotComplete",
      "SecurityFilterTest#test",
      "UserRepositoryTest#initializationError",
      "UserSessionTest#testSessionInvalidate",
      "UserSessionTest#getUserIdFailure",
      "UserSessionTest#isUserAuthenticated",
      "UserSessionTest#isUserAnonymous",
      "CardServiceTest#initializationError",
      "ConfigurationRepositoryTest#initializationError",
      "PermissionServiceTest#initializationError",
      "ExportImportServiceTest#initializationError",
      "WebEndpointInfoTest#initializationError",
      "RememberMeFilterTest#testRememberMeTokenExists",
      "RememberMeFilterTest#testRememberMeTokenNotExists",
      "RememberMeFilterTest#testUnconfiguredSetup",
      "BoardRepositoryTest#initializationError",
      "CardDataServiceTest#initializationError",
      "BulkOperationServiceTest#initializationError",
      "EventEmitterTest#initializationError",
      "MailTicketServiceTest#initializationError"
    ]
  },
  "org.springframework:spring-context": {
    "rest-assured": [
      "AcceptTest#adds_accept_by_media_type",
      "AcceptTest#adds_accept_by_string_value",
      "AcceptTest#adds_accept_by_content_type",
      "WebTestClientNonStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "WebTestClientResponseStatusTest#can_use_spring_http_status_for_status_matching",
      "WebTestClientResponseStatusTest#can_use_integer_value_for_status_code_matching",
      "WebTestClientResponseStatusTest#can_use_hamcrest_matcher_for_status_code_matching",
      "WebTestClientPathParamTest#unnamed_path_param_works",
      "ResponseLoggingTest#logging_if_response_validation_fails_doesnt_log_anything_if_validation_succeeds",
      "ResponseLoggingTest#logging_if_response_validation_fails_works",
      "RequestLoggingTest#doesnt_log_if_request_validation_succeeds_when_request_logging_if_validation_fails_is_enabled",
      "RequestLoggingTest#logging_query_param_works",
      "RequestLoggingTest#logging_form_param_works",
      "RequestLoggingTest#logging_param_works",
      "RequestLoggingTest#logging_if_request_validation_fails_works",
      "RequestLoggingTest#base_path_is_prepended_to_path_when_logging",
      "RequestLoggingTest#can_supply_string_as_body_for_post",
      "WebTestClientStaticRequestAndResponseSpecTest#response_validation_fails_if_any_property_in_the_response_is_not_valid",
      "WebTestClientStaticRequestAndResponseSpecTest#response_validation_kicks_in_even_when_no_then_clause_is_specified",
      "WebTestClientStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "QueryParamTest#param_with_int",
      "RestDocsTest#document_generation_is_executed",
      "RestDocsTest#path_parameters_are_automatically_supported",
      "WebTestClientResponseTimeTest#can_extract_response_time_in_web_test_client_extension",
      "WebTestClientResponseTimeTest#can_use_response_time_validation_in_web_test_client_extension",
      "ParserTest#using_static_parser_its_possible_to_parse_unknown_content_types",
      "ParserTest#using_non_static_parser_its_possible_to_parse_unknown_content_types",
      "GreetingControllerRestAssuredTest#uses_predefined_web_test_client_instance",
      "GreetingControllerRestAssuredTest#param_with_int",
      "GreetingControllerRestAssuredTest#uses_predefined_standalone",
      "GreetingControllerRestAssuredTest#uses_static_web_test_client",
      "ExtractTest#can_extract_rest_assured_web_test_client_response",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_using_static_response_and_request_specs_declared_before_enable_logging",
      "LoggingIfValidationFailsTest#logging_of_both_request_with_uri_function_and_response_validation_works_when_test_fails",
      "LoggingIfValidationFailsTest#logging_is_applied_when_using_non_static_response_specifications",
      "LoggingIfValidationFailsTest#doesnt_log_if_request_or_response_when_validation_succeeds_when_request_and_response_logging_if_validation_fails_is_enabled",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_configured_with_log_detail",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails",
      "WebTestClientResponseAwareMatcherTest#can_use_predefined_matcher_for_response_aware_matching",
      "GetTest#simple_get_works",
      "GetTest#unnamed_path_params_works",
      "WebTestClientRequestMethodTest#request_method_accepts_string_verb",
      "WebTestClientRequestMethodTest#static_request_method_accepts_enum_verb_and_path_params",
      "WebTestClientRequestMethodTest#request_method_accepts_enum_verb_and_unnamed_path_params",
      "WebTestClientRequestMethodTest#static_request_method_accepts_string_verb",
      "WebTestClientRequestMethodTest#throws_iae_when_http_verb_is_not_supported_by_web_test_client",
      "WebTestClientRequestMethodTest#request_method_accepts_string_verb_and_unnamed_path_params",
      "WebTestClientRequestMethodTest#request_method_accepts_enum_verb",
      "BasePathTest#base_path_can_end_with_slash_and_path_doesnt_have_to_begin_with_slash",
      "BasePathTest#base_path_doesnt_have_to_end_with_slash_even_though_path_doesnt_begin_with_slash2",
      "BasePathTest#default_base_path_is_slash",
      "BasePathTest#base_path_is_prepended_to_path",
      "BasePathTest#double_slashes_are_prevented",
      "WebTestClientSpecificationMergingTest#logging_is_not_overwritten_when_not_defined_in_specification",
      "WebTestClientSpecificationMergingTest#logging_is_overwritten_when_defined_in_specification",
      "WebTestClientSpecificationMergingTest#web_test_client_factory_is_not_overwritten_when_not_defined_in_specification",
      "WebTestClientSpecificationMergingTest#web_test_client_instance_is_overwritten_when_defined_in_specification",
      "WebTestClientParamConfigTest#replaces_query_params_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_form_params_by_default",
      "WebTestClientParamConfigTest#replaces_request_params_when_configured_to_do_so",
      "WebTestClientParamConfigTest#replaces_form_params_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_query_params_by_default",
      "WebTestClientParamConfigTest#replaces_all_parameters_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_all_parameters_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_request_params_by_default"
    ],
    "shiro": [
      "ShiroWebSpringAutoConfigurationTest#testMinimalConfiguration",
      "ShiroSpringAutoConfigurationTest#initializationError"
    ],
    "servicecomb-java-chassis": [
      "ZipkinSpanAspectTest#reportedSpanContainsAnnotatedMethodInfo",
      "ZipkinSpanAspectTest#reportCustomSpanInfomation",
      "TestConsumerProviderManager#allowedNoProvider",
      "TestLastPropertyPlaceholderConfigurer#test",
      "TestProducerProviderManager#allowedNoProvider"
    ],
    "client_java": [
      "PrometheusEndpointTest#testMetricsExportedThroughPrometheusEndpoint",
      "PrometheusMvcEndpointTest#testNameParamIsNotNull",
      "PrometheusMvcEndpointTest#testNameParamIsNull",
      "PrometheusMvcEndpointTest#testAcceptPlainText",
      "SpringBootMetricsCollectorTest#collect"
    ],
    "citrus": [
      "GroupTests#initializationError",
      "PageAuthorizationConfigTests#initializationError",
      "JspEngineTests#contextRoot_getResourceOfRoot",
      "JspEngineTests#contextRoot_getResourceOfWebXml",
      "JspEngineTests#contextRoot_failed",
      "JspEngineTests#render_writeToStream",
      "JspEngineTests#render_writeToWriter",
      "JspEngineTests#render_getText",
      "JspEngineTests#exists",
      "PropertyPlaceholderTests#location",
      "PropertyPlaceholderTests#invalidValue",
      "PropertyPlaceholderTests#propertiesRef",
      "PropertyPlaceholderTests#defaultValue",
      "PropertyPlaceholderTests#systemPropertyValue",
      "PropertyPlaceholderTests#propertiesRef_specificProperties",
      "PropertyPlaceholderTests#unresolvable_ignored",
      "PropertyPlaceholderTests#unresolvable_throwException",
      "SpringextWebContextLoaderTests#initializationError",
      "TurbineURIBrokerTests#config_withMappings",
      "TurbineURIBrokerTests#config_withoutMappings",
      "TurbineContentURIBrokerTests#config",
      "SpringextContextLoaderTests#initializationError"
    ],
    "rocketmq-spring": [
      "RocketMQAutoConfigurationTest#testRocketMQListenerWithCustomObjectMapper"
    ],
    "ff4j": [
      "FlippingServiceTest#testAOPClass",
      "GreetingServiceTest#testAOP",
      "GreetingServiceTest#testAOPWithThreadLocal",
      "GreetingServiceTest#testAOPWithParameter",
      "FeatureAdvisorTest#testAlterClazzInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorTest#testAlterBeanInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorTest#testAnnotatedFlippingwithalterBean",
      "FeatureAdvisorTest#testNamespace",
      "FeatureAdvisorTest#testAnnotatedFlippingifqualifiedimplementationisnotthefirstclassqualifiednameinnaturalordering",
      "TestNotConnected#testCmdConnect",
      "FF4JMBeanTest#should_enable_feature",
      "FF4JMBeanTest#defaultInitialisation",
      "FF4JMBeanTest#should_disable_feature",
      "FF4JMBeanTest#should_get_feature_auth_roles",
      "FF4JMBeanTest#should_retrieve_features_status",
      "FF4JMBeanTest#should_retrieve_changed_features_status",
      "FeatureAdvisorCGLIBTest#testAlterClazzInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorCGLIBTest#testAlterBeanInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorCGLIBTest#testAnnotatedFlippingwithalterBean",
      "FeatureAdvisorCGLIBTest#testWholeClassFlipping",
      "FeatureAdvisorCGLIBTest#testNamespace",
      "FeatureAdvisorCGLIBTest#testAnnotatedFlippingifqualifiedimplementationisnotthefirstclassqualifiednameinnaturalordering",
      "FlippingRepositoryTest#testAOPClass",
      "TestConnected#testCmdConnect",
      "AopWithoutAnnotationTest#testAOPAlterClassSpring",
      "AopWithoutAnnotationTest#testAOP",
      "AopWithoutAnnotationTest#testAOPAlterClass",
      "PlaceHolderTest#testPlaceholderWithinXMLFile",
      "PlaceHolderTest#testPlaceHolderWithAnnotation",
      "FF4JBeanPostProcessorTest#testFF4JTagOK",
      "FF4JBeanPostProcessorTest#testFF4JTagAuthorisationManager",
      "FF4JBeanPostProcessorTest#testFF4JTagEmpty",
      "WholeClassFlippingTest#testAOPClass",
      "SampleServiceFeatureTest#testAOP",
      "SpringJdbcXMLDataSourceStoreTest#testStoreHasBeenInitialized",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleToFeatureRoleDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyAddFixedValues",
      "SpringJdbcXMLDataSourceStoreTest#testReadAllGroup",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyRemoveFixedValues",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupFeatureDoeNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFlipLessAutorisation",
      "SpringJdbcXMLDataSourceStoreTest#testDeteleFeatureDoesnotExist",
      "SpringJdbcXMLDataSourceStoreTest#testEnableEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroup",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupFeatureEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleEmptyFeature",
      "SpringJdbcXMLDataSourceStoreTest#testDonotUpdateNullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFeatureMoreAutorisation",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleToFeatureFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateRemoveFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateRemoveProperty",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleNullRole",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleNullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testClear",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateAddProperty",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupFeatureNull",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupFeatureEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateNull",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFlipMoreAutorisationNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testExistGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testEnableFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testReadAllFeatures",
      "SpringJdbcXMLDataSourceStoreTest#testExistNull",
      "SpringJdbcXMLDataSourceStoreTest#testDisableFeature",
      "SpringJdbcXMLDataSourceStoreTest#testExistEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testExistGroup",
      "SpringJdbcXMLDataSourceStoreTest#testReadEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDonotDeleteEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testFeatureDoesNotExit",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleNullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testReadNull",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDisableEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroup",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroupDoesnotExist",
      "SpringJdbcXMLDataSourceStoreTest#testAddFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateAddFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleEmptyRole",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteRoleFeatureDoesNotExit",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteRoleToFeature",
      "SpringJdbcXMLDataSourceStoreTest#testCreateNull",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDonotDeleteNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveLastFeatureOfGroupDeleteGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDisableNull",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyValue",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteNull",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupFeatureDoeNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDisableFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testReadNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFeatureCoreData",
      "SpringJdbcXMLDataSourceStoreTest#testEnableNull",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupFeatureNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupIfNotInGroup",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleNullRole",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testReadFullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroup",
      "SpringJdbcXMLDataSourceStoreTest#testAddFeatureAlreadyExis",
      "SpringJdbcXMLDataSourceStoreTest#testEnableFeature",
      "SpringJdbcXMLDataSourceStoreTest#testExistGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleEmptyRole",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleEmptyFeature",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroupEmpty"
    ],
    "postgresql-embedded": [
      "TestPostgresWithinSpringContext#testPostgresWithinSpring"
    ]
  },
  "ch.qos.logback:logback-core": {
    "swagger-core": [
      "ApiListingJSONTest#initializeTest"
    ],
    "FluentLenium": [
      "NoSuchElementMessageTest#testListBySelectorWithFilterSelector",
      "NoSuchElementMessageTest#testListWithFilterSelector",
      "NoSuchElementMessageTest#testListSelector",
      "NoSuchElementMessageTest#testElementSelector",
      "NoSuchElementMessageTest#testElWithFilterSelector",
      "NoSuchElementMessageTest#testElBySelectorWithFilterSelector",
      "InjectionFindTest#testNotFindChildUsingList",
      "InjectionFindTest#testFindChildUsingList",
      "InjectionFindTest#testFindChild",
      "InjectionFindTest#testNotFindChild",
      "PageInPageTest#pagesShouldBeInjected",
      "WebDriversRegistryImplTest#testCustomClassNameNewWebDriver",
      "WebDriversRegistryImplTest#testCustomClassName",
      "HiddenTextTest#checkGetTextWorks",
      "HiddenTextTest#checkGetTextContentWorks",
      "BaseUrlDynamicTest#baseUrlShouldBeUsedForRelativeUrlInGoToP2P1",
      "BaseUrlDynamicTest#baseUrlShouldBeUsedForRelativeUrlInGoToP1",
      "BaseUrlDynamicTest#baseUrlShouldBeUsedForRelativeUrlInGoTo",
      "EventsTest#testNavigate",
      "EventsTest#testClickOn",
      "EventsTest#testChangeValueOf",
      "EventsTest#testAdapterHashcodeEquals",
      "EventsTest#testFindBy",
      "JavascriptTest#shouldExecuteScriptReturnList",
      "JavascriptTest#shouldExecuteScriptReturnLong",
      "JavascriptTest#shouldExecuteScriptReturnDouble",
      "JavascriptTest#shouldExecuteScriptReturnString",
      "JavascriptTest#shouldFailFastForNonExistingArguments",
      "JavascriptTest#shouldExecuteAsyncScriptReturnString",
      "JavascriptTest#checkTextParam",
      "JavascriptTest#shouldExecuteScriptReturnBoolean",
      "FindByOfComponentTest#testFluentWebElement",
      "FindByOfComponentTest#testWebElementWrapper",
      "FindByOfComponentTest#testFluentWebElementList",
      "FindByOfComponentTest#testFindByComponentList",
      "AttributeModificationTest#checkAttributesModification",
      "AttributeModificationTest#checkAttributeModificationOnList",
      "RectangleConditionsTest#withPositionAndDimension",
      "RectangleConditionsTest#withPosition",
      "RectangleConditionsTest#withDimension",
      "RectangleConditionsTest#withX",
      "RectangleConditionsTest#withY",
      "RectangleConditionsTest#withWidth",
      "RectangleConditionsTest#notHasRectangleWithX",
      "RectangleConditionsTest#notWithX",
      "RectangleConditionsTest#withHeight",
      "AnnotationsEventsTest#findBy",
      "AnnotationsEventsTest#getText",
      "AnnotationsEventsTest#clickOn",
      "AnnotationsEventsTest#refresh",
      "AnnotationsEventsTest#navigate",
      "PageInPageWithCreatePageTest#pagesShouldBeInjected",
      "AnnotationsPriorityEventsTest#clickOn",
      "ElementAsTest#testAsFullConstructorComponent",
      "ElementAsTest#testAsDefaultConstructorComponent",
      "ElementAsTest#findByComponentNotFluentWebElement",
      "ElementAsTest#findByComponent",
      "ElementAsTest#testAsNotAComponent",
      "ElementAsTest#testAsComponent",
      "RectangleListConditionsTest#fromEachElementConditions",
      "RectangleListConditionsTest#fromAtLeastOneElementConditions",
      "IsAtTest#testIsAt",
      "IsAtTest#testIsAtMultipleParametersPositive",
      "IsAtTest#testIsAtParametersQuantifiersPositive",
      "IsAtTest#testIsAtParametersQuantifiersNegative",
      "IsAtTest#testIsNotAt",
      "IsAtTest#testIsAtParametersPositive",
      "IsAtTest#testIsAtParametersNegative",
      "ComponentsTest#shouldBeAbleToAccessDriver",
      "ComponentsTest#testComponents",
      "ComponentsTest#shouldInstantiatePage",
      "ParamTest#checkPageSource",
      "ParamTest#checkTitleParam",
      "ParamTest#checkUrlParam",
      "WaitHookFilteringTest#test",
      "IsolatedTestTest#testIsolated",
      "DefaultHookChainBuilderTest#testInvalidConstructorHook",
      "DefaultHookChainBuilderTest#testBuildHook",
      "DefaultHookChainBuilderTest#testFailingConstructorHook",
      "WaitHookAnnotationTest#testWaitingNotFound",
      "WaitHookAnnotationTest#testWaitingEl",
      "WaitHookAnnotationTest#testWaitingFind",
      "WaitHookAnnotationTest#testWaitingInjectNotFound",
      "WaitHookAnnotationTest#testWaitingInject",
      "EventsInvalidDriverTest#checkInvalidDriver",
      "HappyPathsNegatedAwaitTest#elNotPresentAtAll",
      "HappyPathsNegatedAwaitTest#elNotClickableAtAll",
      "HappyPathsNegatedAwaitTest#findByNotEnabledAtAll",
      "HappyPathsNegatedAwaitTest#findByNotDisplayedAtAll",
      "HappyPathsNegatedAwaitTest#findByNotSelectedAtAll",
      "HappyPathsNegatedAwaitTest#elNotEnabledAtAll",
      "HappyPathsNegatedAwaitTest#elNotSelectedAtAll",
      "HappyPathsNegatedAwaitTest#findByNotPresentAtAll",
      "HappyPathsNegatedAwaitTest#findByNotClickableAtAll",
      "HappyPathsNegatedAwaitTest#elNotDisplayedAtAll",
      "StateOnElementTest#checkIsNonDisplay",
      "StateOnElementTest#checkIsEnabled",
      "StateOnElementTest#checkIsDisplayed",
      "StateOnElementTest#checkIsDisabled",
      "StateOnElementTest#checkIsNotSelected",
      "StateOnElementTest#checkDisabledIsNotEnabled",
      "StateOnElementTest#checkIsSelected",
      "WebElementConditionsTest#containsText",
      "WebElementConditionsTest#hasAttribute",
      "WebElementConditionsTest#isClickable",
      "WebElementConditionsTest#className",
      "WebElementConditionsTest#hasId",
      "WebElementConditionsTest#isSelected",
      "WebElementConditionsTest#hasName",
      "WebElementConditionsTest#hasText",
      "WebElementConditionsTest#isDisplayed",
      "WebElementConditionsTest#isVerified",
      "WebElementConditionsTest#isStale",
      "WebElementConditionsTest#isEnabled",
      "WaitHookWithTest#testWaitingNotFound",
      "WaitHookWithTest#testWaitingEl",
      "WaitHookWithTest#testWaitingFind",
      "FluentLeniumWaitTest#checkAwaitIsNotPresent",
      "FluentLeniumWaitTest#checkAwaitIsDisplayed",
      "FluentLeniumWaitTest#checkAwaitIsSelected",
      "FluentLeniumWaitTest#whenElementIsDisplayedThenAreNotDisplayedThrowsException",
      "FluentLeniumWaitTest#whenElementIsNotSelectedThenAreSelectedThrowsException",
      "FluentLeniumWaitTest#whenElementIsNotDisplayedThenAreDisplayedThrowsException",
      "FluentLeniumWaitTest#checkAwaitContainsTextAlternative",
      "FluentLeniumWaitTest#checkAwaitContainsIdWithIdContains",
      "FluentLeniumWaitTest#checkAwaitNotEquals",
      "FluentLeniumWaitTest#whenElementIsNotPresentThenAreEnabledThrowsException",
      "FluentLeniumWaitTest#checkAwaitContainsTextWithTextMatcher",
      "FluentLeniumWaitTest#checkWithValue",
      "FluentLeniumWaitTest#whenElementIsNotPresentThenAreDisplayedThrowsException",
      "FluentLeniumWaitTest#checkAwaitStartWithRegex",
      "FluentLeniumWaitTest#whenElementIsNotEnabledThenAreEnabledThrowsException",
      "FluentLeniumWaitTest#checkAwaitNotEndsWith",
      "FluentLeniumWaitTest#whenElementIsNotDisplayedThenIsNotDisplayedReturnTrue",
      "FluentLeniumWaitTest#checkAwaitPageToLoad",
      "FluentLeniumWaitTest#checkAwaitNotStartWithRegex",
      "FluentLeniumWaitTest#whenElementIsDisplayedThenIsNotDisplayedThrowsException",
      "FluentLeniumWaitTest#explicitWaitMillis",
      "FluentLeniumWaitTest#whenElementIsEnabledThenIsEnabledReturnTrue",
      "FluentLeniumWaitTest#checkAwaitContainsTextWithText",
      "FluentLeniumWaitTest#whenElementIsNotPresentThenAreNotDisplayedReturnTrue",
      "FluentLeniumWaitTest#checkSupplierFail",
      "FluentLeniumWaitTest#whenElementIsNotDisplayedThenAreNotDisplayedReturnTrue",
      "FluentLeniumWaitTest#checkAwaitContainsName",
      "FluentLeniumWaitTest#checkAwaitContainsText",
      "FluentLeniumWaitTest#checkUseCustomMessage",
      "FluentLeniumWaitTest#checkFunction",
      "FluentLeniumWaitTest#checkAwaitNotStartWith",
      "FluentLeniumWaitTest#checkPredicateFail",
      "FluentLeniumWaitTest#checkPolling",
      "FluentLeniumWaitTest#checkAwaitContainsNameWithClass",
      "FluentLeniumWaitTest#checkAwaitContainsNameWithClassAndContainsWord",
      "FluentLeniumWaitTest#checkAwaitEquals",
      "FluentLeniumWaitTest#checkAwaitIsNotClickable",
      "FluentLeniumWaitTest#checkMultipleFilter",
      "FluentLeniumWaitTest#checkHasAttributeWithOthersFilters",
      "FluentLeniumWaitTest#checkAwaitContainsTextWithTextContentMatcher",
      "FluentLeniumWaitTest#seleniumWaitIsAvailable",
      "FluentLeniumWaitTest#checkAwaitNotEndsWithRegex",
      "FluentLeniumWaitTest#checkAwaitStartWithString",
      "FluentLeniumWaitTest#checkAwaitIsClickable",
      "FluentLeniumWaitTest#checkAwaitHasTextWithText",
      "FluentLeniumWaitTest#whenElementIsNotDisplayedThenIsDisplayedThrowsException",
      "FluentLeniumWaitTest#explicitWait",
      "FluentLeniumWaitTest#checkAwaitNameStartsWith",
      "FluentLeniumWaitTest#checkAwaitPageIsAt",
      "FluentLeniumWaitTest#checkIsAt",
      "FluentLeniumWaitTest#checkAwaitContainsNameWithName",
      "FluentLeniumWaitTest#checkAwaitEndsWithRegex",
      "FluentLeniumWaitTest#checkAwaitPageToLoadWithNoJSEnabled",
      "FluentLeniumWaitTest#whenElementIsNotEnabledThenIsEnabledThrowsException",
      "FluentLeniumWaitTest#checkHasAttribute",
      "FluentLeniumWaitTest#checkPredicate",
      "FluentLeniumWaitTest#whenElementIsNotSelectedThenIsNotSelectedReturnTrue",
      "FluentLeniumWaitTest#checkAwaitContainsNameWithClassRegex",
      "FluentLeniumWaitTest#whenElementIsSelectedThenIsSelectedReturnTrue",
      "FluentLeniumWaitTest#checkLoaded",
      "FluentLeniumWaitTest#checkAwaitNotContains",
      "FluentLeniumWaitTest#checkAwaitLessThanOrEquals",
      "FluentLeniumWaitTest#checkIsAtWithNullPage",
      "FluentLeniumWaitTest#checkAwaitIsPresent",
      "FluentLeniumWaitTest#checkAwaitIsNotSelected",
      "FluentLeniumWaitTest#checkSupplier",
      "FluentLeniumWaitTest#checkAwaitGreaterThanOrEquals",
      "FluentLeniumWaitTest#whenAElementIsNotPresentThenIsNotPresentReturnTrue",
      "FluentLeniumWaitTest#whenElementIsEnabledThenAreEnabledReturnTrue",
      "FluentLeniumWaitTest#checkAwaitContainsIdWithId",
      "FluentLeniumWaitTest#whenElementIsNotSelectedThenIsSelectedThrowsException",
      "FluentLeniumWaitTest#checkFunctionFail",
      "FluentLeniumWaitTest#checkAwaitLessThan",
      "FluentLeniumWaitTest#whenElementIsPresentThenIsDisplayedReturnTrue",
      "FluentLeniumWaitTest#checkAwaitGreaterThan",
      "FluentLeniumWaitTest#whenAElementIsPresentThenIsNotPresentThrowAnException",
      "FluentLeniumWaitTest#checkAwaitIsNotDisplayed",
      "FluentLeniumWaitTest#whenElementIsPresentThenAreDisplayedReturnTrue",
      "FluentLeniumWaitTest#checkAwaitContainsId",
      "FluentLeniumWaitTest#checkAwaitDisabledIsClickableThrowTimeoutException",
      "FluentLeniumWaitTest#checkAwaitHasSize",
      "FluentLeniumWaitTest#checkAwaitHasText",
      "FluentLeniumWaitTest#checkAwaitNotContainsRegex",
      "ClicksWaitHookTest#checkMouseOverAction",
      "ClicksWaitHookTest#checkDoubleClickAction",
      "ActionOnListWithBddTest#checkFillActionOnElement",
      "ActionOnListWithBddTest#checkClickAction",
      "ActionOnListWithBddTest#checkFillAction",
      "ActionOnListWithBddTest#checkClearAction",
      "EventsTest#findBy",
      "EventsTest#clickOn",
      "EventsTest#refresh",
      "EventsTest#navigate",
      "GoToInNewTabTest#checkGoToInNewTab",
      "FluentabilityTest#checkIsEnabled",
      "SeleniumVersionCheckLoggingTest#shouldNotWarnWhenVersionIsCorrect",
      "SeleniumVersionCheckLoggingTest#shouldNotLogWarningWhenParameterSetInParentPom",
      "SeleniumVersionCheckLoggingTest#shouldNotifyWhenSeleniumVersionNotDeclared",
      "SeleniumVersionCheckLoggingTest#shouldWarnAboutWrongSeleniumVersion",
      "ContainerAnnotationsEventsRegistrySuperClassSetupTest#shouldRegisterAnnotationBasedListenersFromSuperClass",
      "FluentInjectorContainerTest#testInjectConstructorInitialise",
      "FluentInjectorContainerTest#testInjectInitialise",
      "FluentInjectorContainerTest#testInjectRecursiveContainers",
      "FluentInjectorContainerTest#testInjectChildContainer",
      "CountTest#count",
      "FluentLeniumFunctionalWaitTest#whenElementIsDisplayedThenAreNotDisplayedThrowsException",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotDisplayedThenAreDisplayedThrowsException",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsIdWithIdContains",
      "FluentLeniumFunctionalWaitTest#checkAwaitNotEquals",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsTextWithTextMatcher",
      "FluentLeniumFunctionalWaitTest#checkWithValue",
      "FluentLeniumFunctionalWaitTest#checkAwaitStartWithRegex",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotEnabledThenAreEnabledThrowsException",
      "FluentLeniumFunctionalWaitTest#checkAwaitNotEndsWith",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotDisplayedThenIsNotDisplayedReturnTrue",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotPresentThenIsNotDisplayedReturnTrue",
      "FluentLeniumFunctionalWaitTest#checkAwaitNotStartWithRegex",
      "FluentLeniumFunctionalWaitTest#whenElementIsDisplayedThenIsNotDisplayedThrowsException",
      "FluentLeniumFunctionalWaitTest#whenElementIsEnabledThenIsEnabledReturnTrue",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsTextWithText",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotPresentThenAreNotDisplayedReturnTrue",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotDisplayedThenAreNotDisplayedReturnTrue",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsName",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsText",
      "FluentLeniumFunctionalWaitTest#checkUseCustomMessage",
      "FluentLeniumFunctionalWaitTest#checkAwaitNotStartWith",
      "FluentLeniumFunctionalWaitTest#checkPolling",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsNameWithClass",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsNameWithClassAndContainsWord",
      "FluentLeniumFunctionalWaitTest#checkAwaitEquals",
      "FluentLeniumFunctionalWaitTest#checkMultipleFilter",
      "FluentLeniumFunctionalWaitTest#checkHasAttributeWithOthersFilters",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsTextWithTextContentMatcher",
      "FluentLeniumFunctionalWaitTest#checkAwaitNotEndsWithRegex",
      "FluentLeniumFunctionalWaitTest#checkAwaitStartWithString",
      "FluentLeniumFunctionalWaitTest#checkAwaitIsClickable",
      "FluentLeniumFunctionalWaitTest#checkAwaitHasTextWithText",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotDisplayedThenIsDisplayedThrowsException",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsNameWithName",
      "FluentLeniumFunctionalWaitTest#checkAwaitEndsWithRegex",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotEnabledThenIsEnabledThrowsException",
      "FluentLeniumFunctionalWaitTest#checkHasAttribute",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsNameWithClassRegex",
      "FluentLeniumFunctionalWaitTest#checkAwaitNotContains",
      "FluentLeniumFunctionalWaitTest#checkAwaitLessThanOrEquals",
      "FluentLeniumFunctionalWaitTest#checkAwaitIsPresent",
      "FluentLeniumFunctionalWaitTest#checkAwaitGreaterThanOrEquals",
      "FluentLeniumFunctionalWaitTest#whenAElementIsNotPresentThenIsNotPresentReturnTrue",
      "FluentLeniumFunctionalWaitTest#whenElementIsEnabledThenAreEnabledReturnTrue",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsIdWithId",
      "FluentLeniumFunctionalWaitTest#whenElementIsNotDisplayedThenIsPresentReturnTrue",
      "FluentLeniumFunctionalWaitTest#checkAwaitStartsWithName",
      "FluentLeniumFunctionalWaitTest#checkAwaitLessThan",
      "FluentLeniumFunctionalWaitTest#whenElementIsPresentThenIsDisplayedReturnTrue",
      "FluentLeniumFunctionalWaitTest#checkAwaitGreaterThan",
      "FluentLeniumFunctionalWaitTest#whenAElementIsPresentThenIsNotPresentThrowAnException",
      "FluentLeniumFunctionalWaitTest#whenElementIsPresentThenAreDisplayedReturnTrue",
      "FluentLeniumFunctionalWaitTest#checkAwaitContainsId",
      "FluentLeniumFunctionalWaitTest#checkAwaitDisabledIsClickableThrowTimeoutException",
      "FluentLeniumFunctionalWaitTest#checkAwaitHasSize",
      "FluentLeniumFunctionalWaitTest#checkAwaitHasText",
      "FluentLeniumFunctionalWaitTest#checkAwaitNotContainsRegex",
      "SuperclassPageTest#checkManuallyCreatedSupportInjection",
      "SuperclassPageTest#checkFollowLink",
      "SuperclassPageTest#checkPageIsAtWithFindByAnnotation",
      "SuperclassPageTest#checkFieldsInitialized",
      "SuperclassPageTest#checkPageIsAtWithFindBysAnnotationShouldFail",
      "SuperclassPageTest#checkIsAtFailed",
      "SuperclassPageTest#checkPageIsAtWithFindAllAnnotation",
      "SuperclassPageTest#checkPageIsAtWithFindByAnnotationShouldFail",
      "SuperclassPageTest#checkFollowLink2",
      "SuperclassPageTest#checkFollowLinkFoundWithFindBy",
      "SuperclassPageTest#checkGoTo",
      "SuperclassPageTest#checkIsAt",
      "SuperclassPageTest#checkFollowLinkWithBddStyle",
      "SuperclassPageTest#checkPageIsAtWithFindBysAnnotation",
      "SuperclassPageTest#checkPageIsAtWithFindAllAnnotationShouldFail",
      "SuperclassPageTest#checkGoToPagesDeclaredInThisClassAndSuperclass",
      "SuperclassPageTest#checkGoToPagesOverridingPageDeclaredInSuperclass",
      "HtmlUnitPerformanceTimingMetricsTest#shouldDelegateCallToHtmlUnitImplementation",
      "HtmlUnitPerformanceTimingMetricsTest#shouldReturnNegativeValueIfEventHasNotBeenRegistered",
      "HtmlUnitPerformanceTimingMetricsTest#shouldReturnMetricsValueInTimeUnit",
      "HtmlUnitPerformanceTimingMetricsTest#timeUnitConversionCreatesNewInstance",
      "HtmlUnitPerformanceTimingMetricsTest#shouldThrowUnsupportedOperationExceptionForRequestStart",
      "HtmlUnitPerformanceTimingMetricsTest#shouldReturnRelativeValues",
      "IframeTest#shouldGetElementIntoAFrameWithNativeInstructions",
      "IframeTest#shouldGetElementIntoAFrameWithFluentSwitchTo",
      "IframeTest#shouldGetElementIntoAFrameWithFluentSwitchToDefault",
      "IframeTest#shouldGetElementIntoAFrameWithFluentSwitchToBis",
      "FluentLeniumWaitIgnoringTest#testIgnoring2Positive",
      "FluentLeniumWaitIgnoringTest#testIgnoring2Negative",
      "FluentLeniumWaitIgnoringTest#testIgnoreAllPositive",
      "FluentLeniumWaitIgnoringTest#testIgnoreAllNegative",
      "FluentLeniumWaitIgnoringTest#testIgnoring1Positive",
      "FluentLeniumWaitIgnoringTest#testIgnoring1Negative",
      "AfterSuccessTest#testFluentTest",
      "FluentTestContainerTest#shouldAlwaysReturnTheSameFluentTestInstance",
      "FluentTestContainerTest#shouldGetFluentCucumberTestInstance",
      "FluentTestContainerTest#childClassShouldProvideSameControlContainer",
      "ActionOnSelectorWithBddTest#checkFillSelectAction",
      "ActionOnSelectorWithBddTest#checkFillSelectActionOnSelectElement",
      "ActionOnSelectorWithBddTest#checkClickAction",
      "ActionOnSelectorWithBddTest#checkFillAction",
      "ActionOnSelectorWithBddTest#checkClearAction",
      "InjectionTest#testCapabilities",
      "ProxyLazynessTest#testMissingElement",
      "ProxyLazynessTest#testMissingElementList",
      "ProxyLazynessTest#testChainElements",
      "ProxyLazynessTest#testChainList",
      "DontRunTestsWhenInitFailTest#testRun",
      "SearchTest#shouldThrowErrorWhen$ListMobileElementNotFound",
      "SearchTest#findPostSelectorFilterWithFilterOnText",
      "SearchTest#findByPosition",
      "SearchTest#canLoopIntoFluentWebElementAfterASearch",
      "SearchTest#findCheckCssIsWellFormedWithPostSelector",
      "SearchTest#shouldThrowErrorWhenListMobileElementNotFound",
      "SearchTest#shouldThrowErrorWhenMobileElementNotFound",
      "SearchTest#findPostSelectorFilterWithElementThatDontMatch",
      "SearchTest#mobileFindByPosition",
      "SearchTest#findCheckCssIsWellFormed",
      "SearchTest#shouldThrowErrorWhenFirstNotFound",
      "SearchTest#shouldThrowErrorWhenPositionNotFound",
      "SearchTest#findCheckCssIsWellFormedWithPostSelectorAndByLocator",
      "SearchTest#findFirstShouldReturnFirst",
      "SearchTest#findPostSelectorFilterWithElementThatMatch",
      "FluentWebElementInTest#whenWebElementInTestThenTheyAreInstantiated",
      "FluentSelectorTest#checkEndAttributeMatcherNotFind",
      "FluentSelectorTest#checkCustomSelectAttributeIfText",
      "FluentSelectorTest#checkClassContainsWordSelector",
      "FluentSelectorTest#checkStartAttributeMatcherNotFind",
      "FluentSelectorTest#checkWithClassCssSelector",
      "FluentSelectorTest#checkMultipleClass2Selector",
      "FluentSelectorTest#checkWithNameMatcherNotContainsCssSelector",
      "FluentSelectorTest#checkEndAttributeMatcher",
      "FluentSelectorTest#checkWithNameMatcherCssPatternSelector",
      "FluentSelectorTest#checkStartAttributeMatcher",
      "FluentSelectorTest#checkCustomSelectAttributeIfTextIsInLowerCase",
      "FluentSelectorTest#checkNotStartAttribute",
      "FluentSelectorTest#checkCustomSelectAttribute",
      "FluentSelectorTest#checkCustomSelectAttributeWithRegex",
      "FluentSelectorTest#checkPredicate",
      "FluentSelectorTest#checkMultipleClassContainsWordsSelector",
      "FluentSelectorTest#checkClassContainsSelector",
      "FluentSelectorTest#checkWithNameCssSelector",
      "FluentSelectorTest#checkWithIdCssSelector",
      "FluentSelectorTest#checkWithNameMatcherCssNotContainPatternSelector",
      "FluentSelectorTest#checkWithClassEqualMatcherCssSelector",
      "FluentSelectorTest#checkWithClassRegexMatcherCssSelector",
      "FluentSelectorTest#checkNotEndStartAttribute",
      "FluentSelectorTest#checkNotEndAttributeMatcher",
      "FluentSelectorTest#checkWithNameEqualMatcherCssSelector",
      "FluentSelectorTest#checkNotStartAttributeMatcher",
      "JsAwaitTest#waitForListChangeFromPageObject",
      "JsAwaitTest#waitForListChangeUsingListVariable",
      "JsAwaitTest#waitForListChangeUsingListVariableExpectingTooMuch",
      "JsAwaitTest#selectedAwaitTest",
      "JsAwaitTest#inputEnabled",
      "JsAwaitTest#newListRowDisplayed",
      "JsAwaitTest#waitForListChangeUsingCssSelectorDirectly",
      "JsAwaitTest#inputClickable",
      "JsAwaitTest#newListRowElementElementReferenceChangeIsAbleToWaitAfterDomParentChange",
      "JsAwaitTest#newListRowPresent",
      "GoToTest#goToWithNullString",
      "GoToTest#checkGoToPage",
      "GoToTest#checkGoToUrl",
      "GoToTest#goToWithNullUrlOnPage",
      "GoToTest#goToWithNullPage",
      "PerformanceTimingMetricsFactoryTest#shouldCreateHtmlUnitMetricsFactory",
      "PageWithAjaxElementTest#whenAjaxFieldsAreFasterThanTimeoutThenWaitForThem",
      "PageWithAjaxElementTest#whenAjaxFieldsAreConsideredAsNormalFieldsThenNoSuchElementExceptionIsThrown",
      "PageWithAjaxElementTest#whenAjaxFieldsAreSlowerThanTimeoutThenNoSuchElementExceptionIsThrown",
      "PageWithAjaxElementTest#whenAjaxFieldsAreConsideredAsAjaxFieldsThenWaitForThem",
      "FluentListParamTest#checkNamesAction",
      "FluentListParamTest#checkAttributeAction",
      "FluentListParamTest#checkAttributesAction",
      "FluentListParamTest#checkSingleAction",
      "FluentListParamTest#checkTextsParam",
      "FluentListParamTest#checkNameAction",
      "FluentListParamTest#checkIdsAction",
      "FluentListParamTest#checkTextParam",
      "FluentListParamTest#checkIdAction",
      "FluentListParamTest#checkValuesAction",
      "PageAdapterTest#checkInstanceVariableIsUnmodified",
      "PageAdapterTest#checkGoToOnInjectedPage",
      "PageAdapterTest#checkPageReferenceIsSame",
      "ReflectiveWebDriverFactoryTest#testNoConstructorClass",
      "ReflectiveWebDriverFactoryTest#testHtmlUnitWebDriverCapabilities",
      "ReflectiveWebDriverFactoryTest#testHtmlUnitWebDriver",
      "ReflectiveWebDriverFactoryTest#testCustomConstructorClass",
      "FluentWaitMessageTest#testNotFound",
      "FluentWaitMessageTest#testMessageContextWithLabel",
      "FluentWaitMessageTest#testDisabledListInjection",
      "FluentWaitMessageTest#testDisabledInjection",
      "FluentWaitMessageTest#testMessageContextList",
      "FluentWaitMessageTest#testMessageContextWithLabelBefore",
      "FluentWaitMessageTest#testDisabledDefaultLabelInjection",
      "FluentWaitMessageTest#testDisabledList",
      "FluentWaitMessageTest#testMessageContext",
      "FluentWaitMessageTest#testDisabledDefaultLabelListInjection",
      "FluentWaitMessageTest#testDisabled",
      "FluentWaitMessageTest#testDisabledCustomLabelListInjection",
      "FluentWaitMessageTest#testNotFoundList",
      "FluentWaitMessageTest#testDisabledCustomLabelInjection",
      "FindByOfListTest#shouldFindByRetrieveList",
      "FindByOfListTest#shouldFindAllFindByRetrieveList",
      "BaseHookTest#testDelegatesLocator",
      "BaseHookTest#testNoOptionHook",
      "BaseHookTest#testGetters",
      "BaseHookTest#shouldReturnUnderlyingElementCoordinates",
      "BaseHookTest#testDelegatesElement",
      "BaseHookTest#testNoOptionHookWithoutDefault",
      "BaseUrlTest#baseUrlShouldNotBeUsedForAbsoluteUrlInPageGo",
      "BaseUrlTest#baseUrlShouldBeUsedForRelativeUrlInPageGo",
      "BaseUrlTest#baseUrlShouldNotBeUsedForAbsoluteUrlInGoTo",
      "BaseUrlTest#baseUrlShouldBeUsedForRelativeUrlInGoTo",
      "SeleniumVersionCheckLoggingTest#shouldNotLogAnythingWhenCorrectVersionIsDeclared",
      "FluentInjectorElementTest#testFluentWebElementExtendsList",
      "FluentInjectorElementTest#testFluentWebElementExtends",
      "FluentInjectorElementTest#testFluentWebElement",
      "FluentInjectorElementTest#testWebElementDriverWrapperList",
      "FluentInjectorElementTest#testListSubClass",
      "FluentInjectorElementTest#testExistingFluentWebElement",
      "FluentInjectorElementTest#testWebElementWrapperList",
      "FluentInjectorElementTest#testWebElementWrapper",
      "FluentInjectorElementTest#testNewInstance",
      "FluentInjectorElementTest#testFluentWebElementList",
      "FluentInjectorElementTest#testWebElementDriverWrapper",
      "FluentTestRunnerAdapterTest#testFailedWhenDriverAvailable",
      "FluentTestRunnerAdapterTest#takesScreenshotWhenTestFails",
      "FluentTestRunnerAdapterTest#testFailedWhenNoDriverAvailable",
      "FluentTestRunnerAdapterTest#noScreenShotOnAssumptionException",
      "FluentTestRunnerAdapterTest#webDriverNotAvailable",
      "FluentTestRunnerAdapterTest#testStartingFinish",
      "FluentTestRunnerAdapterTest#testStartingFinishWithName",
      "FluentInjectorHookTest#testFluentWebElementExtendsContainer",
      "FluentInjectorHookTest#testFluentWebElementAnnotation",
      "FluentInjectorHookTest#testFluentWebElementAnnotationContainer",
      "FluentInjectorHookTest#testFluentList",
      "FluentInjectorHookTest#testFluentWebElement",
      "FluentInjectorHookTest#testFluentWebElementClass",
      "FluentInjectorHookTest#testWebElementWrapperList",
      "FluentInjectorHookTest#testWebElementWrapper",
      "FluentInjectorHookTest#testFluentWebElementOption",
      "FluentAdapterTest#registeringSameDriverMultipleTimeDoesntThrowException",
      "FluentAdapterTest#isDriverAvailableBehavesAsExpected",
      "FluentAdapterTest#registeringSameDriverDoesntThrowException",
      "FluentAdapterTest#shouldNewWebDriverCreateNewInstances",
      "FluentAdapterTest#shouldReturnFalseForIsIgnoredIfThrowableIsThrowable",
      "FluentAdapterTest#shouldReturnFalseForIsIgnoredIfThrowableIsNull",
      "FluentAdapterTest#shouldReturnTrueForIsIgnoredIfThrowableIsMarkedForIgnoring",
      "FluentAdapterTest#delegateToWebDriverWhenInitialized",
      "FluentAdapterTest#registeringAnotherDriverThrowException",
      "DomTest#testDescendants",
      "DomTest#testPrecedingSiblings",
      "DomTest#testAncestors",
      "DomTest#testFollowingSiblings",
      "DomTest#testFollowings",
      "DomTest#testPrecedingElementsInList",
      "DomTest#testParent",
      "FluentDriverTest#shouldReturnNullUrlIfNoCurrentUrlFromDriverIsPresent",
      "FluentDriverTest#shouldReturnCurrentUrlFromDriverUrlIfNoBaseUrlIsPresent",
      "FluentDriverTest#shouldReturnUrl",
      "FluentDriverTest#shouldFailGoToUrlWhenNoUrlIsPresent",
      "FluentDriverTest#shouldGoToPage",
      "FluentDriverTest#shouldSwitchToFrameOfInnermostWrappedElement",
      "FluentDriverTest#shouldFailGoToPageWhenNoPageIsPresent",
      "FluentDriverTest#shouldSwitchToDefaultContentForNullElement",
      "FluentDriverTest#shouldQuitDriverIfItsPresent",
      "FluentDriverTest#shouldOnlyReleaseFluentIfDriverIsNotPresent",
      "FluentDriverTest#shouldFailGoToInNewTabWhenNoUrlIsPresent",
      "FluentDriverTest#shouldReturnCurrentUrlFromDriverIfCurrentUrlDoesntStartWithBaseUrl",
      "FluentDriverTest#shouldSwitchToDefaultContentForIframeElement",
      "FluentDriverTest#shouldThrowExceptionForEventsIfEventsRegistryIsNotSet",
      "FluentWebElementTest#shouldReturnFalseForSelectedIfNoSuchElement",
      "FluentWebElementTest#testNowFalse",
      "FluentWebElementTest#testGetTextContext",
      "FluentWebElementTest#shouldReturnFalseForDisplayedIfNoSuchElement",
      "FluentWebElementTest#testAsInvalidClass",
      "FluentWebElementTest#testConditions",
      "FluentWebElementTest#testGetValue",
      "FluentWebElementTest#testIsEnabled",
      "FluentWebElementTest#testIsClickable",
      "FluentWebElementTest#testGetElement",
      "FluentWebElementTest#testFillSelect",
      "FluentWebElementTest#testGetTagName",
      "FluentWebElementTest#testClear",
      "FluentWebElementTest#testClick",
      "FluentWebElementTest#testGetId",
      "FluentWebElementTest#testMouse",
      "FluentWebElementTest#testAxes",
      "FluentWebElementTest#testFill",
      "FluentWebElementTest#testFind",
      "FluentWebElementTest#testHtml",
      "FluentWebElementTest#testText",
      "FluentWebElementTest#testClearReactInputNonEmpty",
      "FluentWebElementTest#testToString",
      "FluentWebElementTest#testAs",
      "FluentWebElementTest#testEl",
      "FluentWebElementTest#shouldReturnOptionalIfElementIsPresent",
      "FluentWebElementTest#testGetName",
      "FluentWebElementTest#testGetSize",
      "FluentWebElementTest#testGetText",
      "FluentWebElementTest#testIsSelected",
      "FluentWebElementTest#shouldReturnFalseForEnabledIfNoSuchElement",
      "FluentWebElementTest#testClearReactInputEmpty",
      "FluentWebElementTest#testGetCssValue",
      "FluentWebElementTest#testFillSelectInvalidElement",
      "FluentWebElementTest#testIsStable",
      "FluentWebElementTest#testIsDisplayed",
      "FluentWebElementTest#testGetAttribute",
      "FluentWebElementTest#testKeyboard",
      "FluentWebElementTest#testSubmit",
      "FluentWebElementTest#testNowTrue",
      "FluentWebElementTest#testDoubleClick",
      "FluentWebElementTest#testContextClick",
      "ClicksTest#checkMouseOverAction",
      "ClicksTest#checkDoubleClickAction",
      "SearchTest#checkSearchOnElementWorks",
      "SearchTest#checkSearchWorks",
      "SearchTest#checkSearchFirstOnListByLocatorWorks",
      "SearchTest#checkSearchOnElementByLocatorWorks",
      "SearchTest#checkSearchByLocatorWorks",
      "SearchTest#checkSearchOnListByLocatorWorks",
      "SearchTest#checkSearchFirstOnListWorks",
      "SearchTest#checkSearchFirstOnElementWorks",
      "SearchTest#checkSearchOnListWorks",
      "FluentLeniumWaitElementTest#whenSingleElementIsNotEnabledThenIsNotEnabledReturnTrue",
      "FluentLeniumWaitElementTest#whenElementIsDisplayedThenAreNotDisplayedThrowsException",
      "FluentLeniumWaitElementTest#whenElementIsNotDisplayedThenAreDisplayedThrowsException",
      "FluentLeniumWaitElementTest#whenSingleNonexistingElementThenIsEnabledThrowsException",
      "FluentLeniumWaitElementTest#whenElementIsNotEnabledThenAreEnabledThrowsException",
      "FluentLeniumWaitElementTest#whenElementIsNotDisplayedThenIsNotDisplayedReturnTrue",
      "FluentLeniumWaitElementTest#awaitForElementXPosition",
      "FluentLeniumWaitElementTest#whenElementIsNotPresentThenIsNotDisplayedReturnTrue",
      "FluentLeniumWaitElementTest#checkAwaitDisabledIsClickableThrowTimeoutExceptionForSingleElement",
      "FluentLeniumWaitElementTest#whenElementIsDisplayedThenIsNotDisplayedThrowsException",
      "FluentLeniumWaitElementTest#whenElementIsNotEnabledThenIsNotEnabledReturnTrue",
      "FluentLeniumWaitElementTest#whenElementIsEnabledThenIsEnabledReturnTrue",
      "FluentLeniumWaitElementTest#awaitForElementXPositionElementNotFound",
      "FluentLeniumWaitElementTest#whenSingleElementIsNotEnabledThenIsEnabledThrowsException",
      "FluentLeniumWaitElementTest#whenElementIsNotPresentThenAreNotDisplayedReturnTrue",
      "FluentLeniumWaitElementTest#checkAwaitIsClickableForSingleElement",
      "FluentLeniumWaitElementTest#checkSupplierFail",
      "FluentLeniumWaitElementTest#whenElementIsNotDisplayedThenAreNotDisplayedReturnTrue",
      "FluentLeniumWaitElementTest#whenSingleElementIsEnabledThenIsEnabledReturnTrue",
      "FluentLeniumWaitElementTest#checkAwaitContainsName",
      "FluentLeniumWaitElementTest#checkAwaitContainsText",
      "FluentLeniumWaitElementTest#checkUseCustomMessage",
      "FluentLeniumWaitElementTest#checkFunction",
      "FluentLeniumWaitElementTest#checkPredicateFail",
      "FluentLeniumWaitElementTest#checkPolling",
      "FluentLeniumWaitElementTest#checkAwaitIsClickable",
      "FluentLeniumWaitElementTest#whenSingleElementIsEnabledThenIsEnabledReturnTrueWhenArgumentIsLambda",
      "FluentLeniumWaitElementTest#whenElementIsNotDisplayedThenIsDisplayedThrowsException",
      "FluentLeniumWaitElementTest#checkIsAt",
      "FluentLeniumWaitElementTest#whenElementIsNotEnabledThenIsEnabledThrowsException",
      "FluentLeniumWaitElementTest#checkHasAttribute",
      "FluentLeniumWaitElementTest#checkPredicate",
      "FluentLeniumWaitElementTest#checkLoaded",
      "FluentLeniumWaitElementTest#whenSingleNonexistingElementThenIsEnabledThrowsExceptionWhenArgumentIsLambda",
      "FluentLeniumWaitElementTest#checkAwaitIsPresent",
      "FluentLeniumWaitElementTest#checkSupplier",
      "FluentLeniumWaitElementTest#whenElementIsEnabledThenAreEnabledReturnTrue",
      "FluentLeniumWaitElementTest#checkFunctionFail",
      "FluentLeniumWaitElementTest#whenElementIsNotDisplayedThenIsPresentReturnTrue",
      "FluentLeniumWaitElementTest#whenElementIsPresentThenIsDisplayedReturnTrue",
      "FluentLeniumWaitElementTest#whenElementIsPresentThenAreDisplayedReturnTrue",
      "FluentLeniumWaitElementTest#checkAwaitContainsId",
      "FluentLeniumWaitElementTest#checkAwaitDisabledIsClickableThrowTimeoutException",
      "FluentLeniumWaitElementTest#checkAwaitHasSize",
      "FluentLeniumWaitElementTest#checkAwaitHasText",
      "FluentListImplTest#shouldThrowNoSuchElementExceptionForWaitAndClickSecondsWhenListIsEmpty",
      "FluentListImplTest#shouldReturnFalseForPresentIfListSizeNotGreaterThanZeroWhenNoLocatorHandlerIsAvailableForProxy",
      "FluentListImplTest#testNowFalse",
      "FluentListImplTest#shouldReturnTrueForPresentIfListSizeIsGreaterThanZeroWhenNoLocatorHandlerIsAvailableForProxy",
      "FluentListImplTest#testProperties",
      "FluentListImplTest#testOne",
      "FluentListImplTest#testClick",
      "FluentListImplTest#testFirst",
      "FluentListImplTest#testEach",
      "FluentListImplTest#testFind",
      "FluentListImplTest#testLast",
      "FluentListImplTest#testText",
      "FluentListImplTest#shouldThrowNoSuchElementExceptionForWaitAndClickWhenListIsEmpty",
      "FluentListImplTest#testAs",
      "FluentListImplTest#testToElements",
      "FluentListImplTest#shouldReturnEmptyOptionalIfListIsNotPresent",
      "FluentListImplTest#testClearAll",
      "FluentListImplTest#shouldReturnOptionalIfListIsPresent",
      "FluentListImplTest#testSingle",
      "FluentListImplTest#testSubmit",
      "FluentListImplTest#testNowTrue",
      "FluentListImplTest#shouldDoClear",
      "FluentListImplTest#testDoubleClick",
      "FluentListImplTest#shouldClearList",
      "FluentListImplTest#shouldReturnListCountWhenProxyExists",
      "FluentListImplTest#testClearAllReactInputs",
      "FluentListImplTest#testContextClick",
      "FluentListSearchTest#findFirstElement",
      "FluentListSearchTest#shouldThrowAnErrorWhenNoFirstPosition",
      "FluentListSearchTest#findElementByPosition",
      "FluentListSearchTest#shouldThrowAnErrorWhenWrongPosition",
      "FluentListSearchTest#findElementsIsSearched",
      "FluentListSearchTest#whenNoElementMatchingFillThenThrowsExceptions",
      "ScreenshotTest#whenBrowserDoesntAcceptScreenshotThenCustomError",
      "ScreenshotTest#whenBrowserDoesAcceptScreenshotThenNoException",
      "FluentObjectFactoryTest#testRecursiveInjection",
      "FluentObjectFactoryTest#testInheritedChildContainer",
      "FluentObjectFactoryTest#testParentContainerGetInstanceFactory",
      "FluentObjectFactoryTest#testElementInjectionInChildContainer",
      "FluentObjectFactoryTest#testDoubleGetInstanceGiveSameInstance",
      "FluentObjectFactoryTest#testChildContainerGetInstanceFactory",
      "WaitComponentsListTest#shouldReturnActualValueFromTheChangedList",
      "WaitComponentsListTest#shouldReturnActualValueFromResetElementWithIndexFromTheChangedListAfterListReset",
      "WaitComponentsListTest#shouldReturnActualElementWithIndexFromTheChangedListAfterListReset",
      "WaitComponentsListTest#shouldReturnActualElementWithGetFromTheChangedListAfterListReset",
      "WaitComponentsListTest#shouldReturnActualElementWithGetFromTheChangedListWhenUsedPreviously",
      "WaitComponentsListTest#shouldReturnActualValueFromResetElementWithGetFromTheChangedListAfterListReset",
      "FluentDriverScreenshotPersisterTest#shouldCreateScreenshotFromDriverWithNoConfiguration",
      "FluentDriverScreenshotPersisterTest#shouldCreateScreenshotFromDriverWithConfiguration",
      "AfterTest#whenDriverIsNullThenItIsHandle",
      "FluentDriverHtmlDumperTest#shouldTakeHtmlDumpWithConfiguration",
      "FluentDriverHtmlDumperTest#shouldTakeHtmlDumpWithNoConfiguration",
      "AnnotationsComponentEventsTest#findBy",
      "AnnotationsComponentEventsTest#clickOnFirst",
      "AnnotationsComponentEventsTest#clickOn",
      "FillTest#testFillElement",
      "FillTest#testFillList",
      "WaitAndClickTest#waitAndClickListWithDurationPositiveTest",
      "WaitAndClickTest#waitAndClickElementPositiveTest",
      "WaitAndClickTest#waitAndClickElementNegativeTest",
      "WaitAndClickTest#waitAndClickListPositiveTest",
      "WaitAndClickTest#waitAndClickListNegativeTest",
      "CssInjectTest#injectDisplayNoneShouldMakeElementNotPresent",
      "FluentWebElementDelegateClassInTest#whenWebElementInTestThenTheyAreInstantiated",
      "PageTest#checkManuallyCreatedSupportInjection",
      "PageTest#checkFollowLink",
      "PageTest#checkPageIsAtWithFindByAnnotation",
      "PageTest#checkFieldsInitialized",
      "PageTest#checkPageIsAtWithFindBysAnnotationShouldFail",
      "PageTest#checkIsAtFailed",
      "PageTest#checkPageIsAtWithFindAllAnnotation",
      "PageTest#checkPageIsAtWithFindByAnnotationShouldFail",
      "PageTest#checkFollowLink2",
      "PageTest#checkFollowLinkFoundWithFindBy",
      "PageTest#checkGoTo",
      "PageTest#checkIsAt",
      "PageTest#checkFollowLinkWithBddStyle",
      "PageTest#checkPageIsAtWithFindBysAnnotation",
      "PageTest#checkPageIsAtWithFindAllAnnotationShouldFail",
      "ContainerAnnotationsEventsRegistrySetupTest#shouldRegisterAnnotationBasedListenersAndDoNotExecuteThem",
      "ContainerAnnotationsEventsRegistrySetupTest#shouldRegisterAnnotationBasedListenersAndExecuteThem",
      "NegatedAwaitElementTest#awaitNotClickable",
      "NegatedAwaitElementTest#awaitNotEnabled",
      "NegatedAwaitElementTest#awaitNotSelected",
      "NegatedAwaitElementTest#awaitForElementDisappearanceEl",
      "NegatedAwaitElementTest#awaitNotPresent",
      "NegatedAwaitElementTest#awaitNotDisplayed",
      "NegatedAwaitElementTest#awaitForElementDisappearanceFindBy",
      "PageUrlParameterQueryTest#shouldReturnParameterValue",
      "PageUrlParameterQueryTest#shouldReturnNullWhenParameterIsNotPresent",
      "PageUrlParameterQueryTest#shouldReturnNullWhenOptionalParameterValueIsNotPresent",
      "PageUrlParameterQueryTest#shouldReturnOptionalParameterValueWhenPresent",
      "FindByOfComponentContainerTest#testFluentWebElement",
      "FindByOfComponentContainerTest#testWebElementWrapper",
      "FindByOfComponentContainerTest#testFluentWebElementList",
      "FindByOfComponentContainerTest#testFindByComponentList",
      "WindowActionsTest#clickAndOpenNewAndCloseCurrentIT",
      "WindowActionsTest#openNewAndSwitchIT",
      "BaseFluentHookTest#testFluentWebElement",
      "FluentInjectorComponentTest#testHierarchy",
      "FluentInjectorComponentTest#testLazyness",
      "SearchOnlyWithFiltersTest#checkWithNameWorks",
      "SearchOnlyWithFiltersTest#checkFillSelectWorks",
      "SearchOnlyWithFiltersTest#checkFindChildFindWorks",
      "SearchOnlyWithFiltersTest#checkDollarAndIndexWorks",
      "SearchOnlyWithFiltersTest#checkWithTextContentStartsWithWorks",
      "SearchOnlyWithFiltersTest#checkFindFirstChildFindWorks",
      "SearchOnlyWithFiltersTest#checkValueWorks",
      "SearchOnlyWithFiltersTest#checkMultipleWithWorks",
      "SearchOnlyWithFiltersTest#checkFindFirstChildFindFirstWorks",
      "SearchOnlyWithFiltersTest#checkDollarWorks",
      "SearchOnlyWithFiltersTest#checkFindFirstChildFindWithIndexWorks",
      "SearchOnlyWithFiltersTest#checkWithTextStartsWithWorks",
      "SearchOnlyWithFiltersTest#checkFindChildFindWithIndexWorks",
      "SearchOnlyWithFiltersTest#checkWithTextWorks",
      "SearchOnlyWithFiltersTest#checkClickWorks",
      "SearchOnlyWithFiltersTest#checkClearWorks",
      "SearchOnlyWithFiltersTest#checkFillWorks",
      "SearchOnlyWithFiltersTest#checkTextWorks",
      "SearchOnlyWithFiltersTest#checkIndexWorks",
      "SearchOnlyWithFiltersTest#checkFindChildFindFirstWorks",
      "SearchOnlyWithFiltersTest#checkFindFirstWorks",
      "PageInPageWithAnnotationPageTest#pagesShouldBeInjected",
      "FluentTestRunnerAdapterRetriesTest#testFailedWhenBrowserCrashed",
      "FluentTestRunnerAdapterRetriesTest#testGetSharedWebDriverRetry",
      "FillSelectTest#testFillCss",
      "FillSelectTest#testFillElement",
      "FillSelectTest#testFillList",
      "FluentWebElementSubclassInTest#whenWebElementInTestThenTheyAreInstantiated",
      "AnnotationsComponentsPriorityEventsTest#testEventsPriority",
      "HtmlDumpTest#checkHtmlIsDumped",
      "ActionOnSelectorTest#checkClearOnDateAction",
      "ActionOnSelectorTest#checkTextAction",
      "ActionOnSelectorTest#checkClearOnTimeAction",
      "ActionOnSelectorTest#checkClickActionWrongSelector",
      "ActionOnSelectorTest#checkClickAction",
      "ActionOnSelectorTest#checkFillAction",
      "ActionOnSelectorTest#checkFillOnDateAction",
      "ActionOnSelectorTest#checkFillOnTimeAction",
      "ActionOnSelectorTest#checkClearAction",
      "FluentJUnitJupiterTest#badInstance",
      "FluentJUnitJupiterTest#testBeforeEach",
      "FluentJUnitJupiterTest#testAfterEachFailure",
      "FluentJUnitJupiterTest#testAfterEachSuccessful",
      "FluentWaitMessageWithHookTest#testNotFound",
      "FluentWaitMessageWithHookTest#testMessageContextWithLabel",
      "FluentWaitMessageWithHookTest#testDisabledListInjection",
      "FluentWaitMessageWithHookTest#testDisabledInjection",
      "FluentWaitMessageWithHookTest#testMessageContextWithLabelBefore",
      "FluentWaitMessageWithHookTest#testDisabledDefaultLabelInjection",
      "FluentWaitMessageWithHookTest#testDisabledList",
      "FluentWaitMessageWithHookTest#testMessageContext",
      "FluentWaitMessageWithHookTest#testDisabledDefaultLabelListInjection",
      "FluentWaitMessageWithHookTest#testDisabled",
      "FluentWaitMessageWithHookTest#testDisabledCustomLabelListInjection",
      "FluentWaitMessageWithHookTest#testNotFoundList",
      "FluentWaitMessageWithHookTest#testDisabledCustomLabelInjection",
      "HtmlDumpPathTest#checkHtmlIsDumpedInPath",
      "WaitSizeTest#waitForListChangeToValueDefinedInSizeMethod",
      "WaitSizeTest#waitForListChangeUsingListVariable",
      "WaitSizeTest#waitForListChangeFromPageObjectUsingFluentListAnnotationWithReset",
      "WaitSizeTest#waitForListChangeUsingListVariableExpectingTooMuch",
      "WaitSizeTest#waitForListChangeFromPageObjectUsingList",
      "WaitSizeTest#waitForListChangeUsingListVariableAndEqualMethod",
      "WaitSizeTest#waitForListChangeFromPageObjectUsingFluentListAnnotation",
      "WaitSizeTest#waitForListChangeFromPageObjectUsingFluentListAnnotationWithResetInside",
      "WaitSizeTest#waitForListChangeUsingCssSelectorDirectly",
      "ActionOnListTest#checkTextAction",
      "ActionOnListTest#checkClickAction",
      "ActionOnListTest#checkFillFileInputUpperCase",
      "ActionOnListTest#checkFillAction",
      "ActionOnListTest#checkClearAction",
      "ActionOnListTest#checkScrollIntoView",
      "ActionOnListTest#checkFillFileInput",
      "SearchHookTest#testHookSearchListNoHookClone",
      "SearchHookTest#testHookSearchNoHookFunction",
      "SearchHookTest#testHookSearchNoHookClone",
      "SearchHookTest#testHookSearchNoHook",
      "SearchHookTest#testHookedSearch",
      "SearchHookTest#testHookSearchNoHookClickAndRestore",
      "SearchHookTest#testHookSearchFirstBefore",
      "SearchHookTest#testHookSearchFirstAfter",
      "SearchHookTest#testHookSearchFirstNoHookFunction",
      "SearchHookTest#testHookSearchHookBeforeFirstNoHookClickAndRestore",
      "CapabilitiesTest#testCapabilities",
      "WindowActionsTest#openNewAndSwitch",
      "WindowActionsTest#clickAndOpenNewTest",
      "NegatedAwaitFluentListTest#awaitNotClickable",
      "NegatedAwaitFluentListTest#awaitNotEnabled",
      "NegatedAwaitFluentListTest#awaitNotSelected",
      "NegatedAwaitFluentListTest#awaitForElementDisappearanceEl",
      "NegatedAwaitFluentListTest#awaitNotPresent",
      "NegatedAwaitFluentListTest#awaitNotDisplayed",
      "NegatedAwaitFluentListTest#awaitForElementDisappearanceFindBy",
      "AxesTest#checkSearchFollowingWorks",
      "AxesTest#checkSearchPrecedingSiblingWorks",
      "AxesTest#checkSearchFollowingSiblingWorks",
      "AxesTest#checkSearchParentWorks",
      "AxesTest#checkSearchPrecedingWorks",
      "AxesTest#checkSearchAncestorsWorks",
      "AxesTest#checkSearchDescendantsWorks",
      "FluentInjectorListComponentTest#testListComponent",
      "IntegerListConditionsTest#fromEachElementConditions",
      "IntegerListConditionsTest#fromAtLeastOneElementConditions",
      "AfterFailedTest#testFluentTest",
      "SeleniumVersionCheckerRetrieveVersionTest#retrieveGoodVersionShouldReturnTrueTest",
      "SeleniumVersionCheckerRetrieveVersionTest#retrieveBadVersionShouldReturnFalseTest",
      "SeleniumVersionCheckerRetrieveVersionTest#retrieveVersionShouldReturnNullWhenVersionNotPresentTest",
      "SeleniumVersionCheckerRetrieveVersionTest#retrieveGoodVersionFromPomPropertiesShouldReturnTrueTest"
    ],
    "cicada": [
      "RouteActionTest#exTest",
      "RouteActionTest#reflect2",
      "RouteActionTest#reflect3",
      "RouteActionTest#costTest",
      "RouteActionTest#reflect"
    ],
    "glowroot": [
      "SchemaUpgradeTest#shouldUpgradeMultiAgentPermissions",
      "SchemaUpgradeTest#shouldUpgradeSingleAgentPermissions",
      "SchemaUpgradeTest#shouldUpgradeWildcardPermissions",
      "LiveTraceRespositoryTest#testShouldMatch",
      "LiveTraceRespositoryTest#testShouldNotStore",
      "LiveTraceRespositoryTest#testShouldStoreAndSameTransactionTypeButDiffTransactionName",
      "LiveTraceRespositoryTest#testShouldStoreButDifferentTransactionType",
      "LiveTraceRespositoryTest#testShouldStoreAndSameTransactionTypeButNullTransactionName",
      "TransactionTest#traceIdShouldBeThirtyTwoCharactersAndLowerCase",
      "TransactionTest#shouldLowerSixBytesWithPadding",
      "TransactionTest#shouldLowerSixBytesWithNoPaddingOrTruncation",
      "TransactionTest#shouldLowerSixBytesWithTruncation",
      "LiveJvmServiceImplTest#testParseable",
      "LiveJvmServiceImplTest#testNonParseable",
      "TraceJsonServiceTest#test",
      "BeansTest#shouldCallMethodOnPackagePrivateClass",
      "BeansTest#shouldGetMapNestedValue",
      "BeansTest#shouldGetMapValue",
      "BeansTest#shouldGetMap",
      "BeansTest#shouldGetListValues",
      "BeansTest#shouldGetArrayLength",
      "BeansTest#shouldGetArrayValues",
      "BeansTest#shouldGetListSize",
      "BeansTest#shouldGetList",
      "BeansTest#shouldGetMapSize",
      "BeansTest#shouldGetArray",
      "BeansTest#shouldGetField",
      "BeansTest#shouldCallGetterMethod",
      "BeansTest#shouldGetOnNullObject",
      "BeansTest#shouldCallNonGetterMethod",
      "BeansTest#shouldCallBooleanGetterMethod",
      "ThreadAllocatedBytesTest#testIsSupportedReturnsNull",
      "ThreadAllocatedBytesTest#testIsSupportedReturnsFalse",
      "PreInitializeStorageShutdownClassesTest#shouldCheckHardcodedListAgainstReality",
      "PreloadSuperTypesCacheTest#shouldTruncateOnWritingToFile",
      "PreloadSuperTypesCacheTest#shouldNotTruncateOnSecondWritingToFile",
      "PreloadSuperTypesCacheTest#shouldTruncateTruncateOnSecondWritingToFile",
      "PreloadSuperTypesCacheTest#shouldNotTruncateOnWritingToFile",
      "CappedDatabaseOutputStreamTest#shouldWrapAndResize",
      "CappedDatabaseOutputStreamTest#shouldWrite",
      "CappedDatabaseOutputStreamTest#shouldWriteUsingByteArray",
      "CappedDatabaseOutputStreamTest#shouldWrap",
      "CappedDatabaseOutputStreamTest#shouldWriteUsingSingleBytes",
      "CappedDatabaseOutputStreamTest#shouldWrapWithoutEnoughSpaceAtEndForContiguousBlockHeader",
      "CappedDatabaseOutputStreamTest#shouldWrapAndKeepGoing",
      "CappedDatabaseOutputStreamTest#shouldWrapAndResizeVerySmall",
      "HttpServerHandlerTest#shouldStripContextPath",
      "LoggerTest#testEnteringExitingThrowingMethods",
      "LoggerTest#testResourceBundle",
      "LoggerTest#testLogpParameterizedLevelMethodsWithThrowable",
      "LoggerTest#testIsLoggableNone",
      "LoggerTest#testIsLoggableSome",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithArrayOfParams",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithThrowable",
      "LoggerTest#testLogpParameterizedLevelMethodsWithNoParams",
      "LoggerTest#testGetLevelOff",
      "LoggerTest#testGetLevelFine",
      "LoggerTest#testGetLevelConfig",
      "LoggerTest#testGetLevelFinest",
      "LoggerTest#testGetName",
      "LoggerTest#testGetLevelWarning",
      "LoggerTest#testLogpParameterizedLevelMethodsWithSingleParam",
      "LoggerTest#testGetLevelSevere",
      "LoggerTest#testParameterizedLevelMethodsWithThrowable",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithNoParams",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithVarArgsOfParams",
      "LoggerTest#testParameterizedLevelMethodsWithNoParams",
      "LoggerTest#testIsLoggableAll",
      "LoggerTest#testLogpParameterizedLevelMethodsWithArrayOfParams",
      "LoggerTest#testParameterizedLevelMethodsWithSingleParam",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithResourceBundleObjectAndThrowable",
      "LoggerTest#testParameterizedLevelMethodsWithArrayOfParams",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithVarArgsOfParams2",
      "LoggerTest#testNormalMethods",
      "LoggerTest#testGetLogger",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithSingleParam",
      "LoggerTest#testLogrbParameterizedLevelMethodsWithThrowable2",
      "AlertingServiceTest#shouldSendMailForGaugeAlert",
      "AlertingServiceTest#shouldReturnCorrectPercentileName",
      "AlertingServiceTest#shouldSendMailForTransactionAlert",
      "AlertingServiceTest#shouldNotSendMailForGaugeAlert",
      "AlertingServiceTest#shouldNotSendMailForTransactionAlert",
      "AlertingServiceTest#shouldSendMailForLowerBoundGaugeAlert",
      "AlertingServiceTest#shouldNotSendMailForLowerBoundGaugeAlert",
      "CappedDatabaseTest#shouldWrite",
      "CappedDatabaseTest#shouldWrap",
      "CappedDatabaseTest#shouldWrapOverOldBlocks",
      "CappedDatabaseTest#shouldReadOneByteAtATime",
      "CappedDatabaseTest#shouldWrapAndKeepGoing",
      "VersionTest#testWithNoneBuildCommit",
      "VersionTest#testWithNullManifest",
      "VersionTest#testWithInvalidBuildCommit",
      "VersionTest#testWithNonSnapshotVersion",
      "VersionTest#testWithSnapshotVersion",
      "VersionTest#testClassWithNoClassFile",
      "VersionTest#testWithInvalidBuildCommitAndMissingBuildTime",
      "VersionTest#testWithMissingBuildTime",
      "VersionTest#testWithNoImplementationVersion",
      "CappedDatabaseResizeTest#shouldWrapAndThenResizeSmaller",
      "CappedDatabaseResizeTest#shouldWrapAndThenResizeSameSize",
      "CappedDatabaseResizeTest#shouldResizeSameSizeAndThenWrap",
      "CappedDatabaseResizeTest#shouldResizeLargerAndThenWrap",
      "CappedDatabaseResizeTest#shouldResizeSmallerAndThenWrap",
      "CappedDatabaseResizeTest#shouldWrapAndThenResizeLarger",
      "AdminJsonServiceTest#testWithDefaultFrom",
      "AdminJsonServiceTest#testWithoutDefaults",
      "AdminJsonServiceTest#testWithDefaultFromAndDefaultDisplayName",
      "PreInitializeWeavingClassesTest#shouldCheckHardcodedListAgainstReality",
      "GrpcCommonTest#test",
      "RollupServiceTest#test",
      "TraceEntryComponentTest#testTooManyPops",
      "TraceEntryComponentTest#testPopNonExisting",
      "TraceEntryComponentTest#testMissedPop",
      "ScheduledRunnableTest#testExceptionalScheduledRunnable",
      "ScheduledRunnableTest#testScheduleWithFixedDelayCalledTwice",
      "ScheduledRunnableTest#testScheduleWithFixedDelay",
      "ScheduledRunnableTest#testCancelWithNoFuture",
      "ReflectionTest#shouldReturnNullMethodWhenClassIsNull",
      "ReflectionTest#shouldReturnDefaultValueWhenMethodThrowsException",
      "ReflectionTest#shouldReturnDefaultValueWhenMethodIsNull",
      "ReflectionTest#shouldReturnDefaultValueWhenMethodReturnsNull",
      "ReflectionTest#shouldReturnNullMethodWhenMethodNotFound",
      "CommonHandlerTest#shouldCreateJsonServiceExceptionResponseFromInvocationTargetException",
      "CommonHandlerTest#shouldCreateSqlTimeoutResponse",
      "CommonHandlerTest#shouldCreateNonTimeoutSqlExceptionResponse",
      "CommonHandlerTest#shouldCreateExceptionResponse",
      "CommonHandlerTest#shouldCreateJsonServiceExceptionResponseWithMessageFromInvocationTargetException",
      "CommonHandlerTest#shouldCreateJsonServiceExceptionResponse",
      "CommonHandlerTest#shouldCreateJsonServiceExceptionResponseWithMessage",
      "CommonHandlerTest#shouldCreateWrappedExceptionResponse",
      "CommonHandlerTest#shouldStripContextPath",
      "ImmediateTraceStoreRunnableTest#testOneCallBeyondComplete",
      "ImmediateTraceStoreRunnableTest#testTwoCallsBeyondComplete",
      "SchemasTest#shouldReadIndexes",
      "CentralCollectorTest#shouldEscape",
      "CentralCollectorTest#shouldCheckAgentVersionAgainstCentralVersion",
      "GenericMessageSupplierTest#shouldRenderArrayLength",
      "GenericMessageSupplierTest#shouldRenderNormal",
      "GenericMessageSupplierTest#shouldRenderBadTemplate",
      "GenericMessageSupplierTest#shouldRenderArray",
      "GenericMessageSupplierTest#shouldRenderNullPart",
      "GenericMessageSupplierTest#shouldRenderBadMessage",
      "GenericMessageSupplierTest#shouldRenderTrailingText",
      "GenericMessageSupplierTest#shouldRenderConstant",
      "GenericMessageSupplierTest#shouldRenderRequestedArgOutOfBounds",
      "GenericMessageSupplierTest#shouldRenderBadTemplate2",
      "GenericMessageSupplierTest#shouldRenderMessageWithThrowingPart",
      "GenericMessageSupplierTest#shouldRenderArray1",
      "GenericMessageSupplierTest#shouldRenderArray2",
      "ThreadContextImplTest#testStartTraceEntry",
      "ThreadContextImplTest#testStartAsyncQueryEntry",
      "ThreadContextImplTest#testStartTransaction",
      "ThreadContextImplTest#testStartAsyncTraceEntry",
      "ThreadContextImplTest#testStartServiceCallEntry",
      "ThreadContextImplTest#testStartQueryEntryWithExecutionCount",
      "ThreadContextImplTest#testStartAsyncServiceCallEntry",
      "ThreadContextImplTest#testStartQueryEntry",
      "ThreadContextImplTest#testSetters",
      "ThreadContextImplTest#testStartTimer",
      "ReportJsonServiceTest#testRollupInterval",
      "HttpServicesTest#shouldLogRegularException",
      "HttpServicesTest#shouldNotLogBrowserDisconnectMessageException",
      "HttpServicesTest#shouldNotLogClosedChannelException",
      "HttpServicesTest#shouldLogRegularIOException",
      "HttpServicesTest#shouldNotLogInterruptedException",
      "WeaverTest#shouldExecuteSubTypeRestrictionAdvice2",
      "WeaverTest#shouldHandleConfusingVisibilityBridge",
      "WeaverTest#shouldNotBombWithWithWildcardArg",
      "WeaverTest#shouldNotExecuteDisabledAdvice",
      "WeaverTest#shouldNotExecuteSuperTypeRestrictionWhereMethodNotReImplementedInSubClassAdvice",
      "WeaverTest#shouldWeaveMethodWithWildcardArgs",
      "WeaverTest#shouldMutateParameterWithMoreFrames",
      "WeaverTest#shouldExecuteAdviceOnMoreNotPerfectBytecodeVariant",
      "WeaverTest#shouldMixinOnlyOnce",
      "WeaverTest#shouldMatchMethodReturningCharSequence",
      "WeaverTest#shouldHandleGenericOverride1",
      "WeaverTest#shouldHandleGenericOverride2",
      "WeaverTest#shouldBindTraveler",
      "WeaverTest#shouldNotExecuteSubTypeRestrictionWhereMethodNotReImplementedInSubClassAdvice",
      "WeaverTest#shouldBindThrowable",
      "WeaverTest#shouldStillNotExecuteSuperTypeRestrictionWhereMethodNotReImplementedInSubClassAdvice",
      "WeaverTest#shouldExecuteAdviceOnNotPerfectBytecode",
      "WeaverTest#shouldBindAutoboxedReturn",
      "WeaverTest#shouldExecuteSubTypeRestrictionWhereMethodNotReImplementedInSubSubClassAdvice",
      "WeaverTest#shouldBindPrimitiveTraveler",
      "WeaverTest#shouldVerifyConstructorPointcutsAreNested",
      "WeaverTest#shouldExecuteSuperTypeRestrictionAdvice2",
      "WeaverTest#shouldChangeReturnValue",
      "WeaverTest#shouldWeaveMethodWithAutoboxArgs",
      "WeaverTest#shouldBindOptionalReturn",
      "WeaverTest#shouldHandleInnerClass",
      "WeaverTest#shouldBindMethodMeta",
      "WeaverTest#shouldBindMethodName",
      "WeaverTest#shouldHandleInterfaceThatAppearsTwiceInHierarchy",
      "WeaverTest#shouldHandleInheritedMethod",
      "WeaverTest#shouldExecuteAdviceOnMoreHackedConstructorBytecode",
      "WeaverTest#shouldWeaveStaticMethod",
      "WeaverTest#shouldBindReturn",
      "WeaverTest#shouldPayAttentionToStaticModifierMatching",
      "WeaverTest#shouldMixinToClass",
      "WeaverTest#shouldHandleFinalMethodAdvice",
      "WeaverTest#shouldBindMethodMetaReturnArray",
      "WeaverTest#shouldExecuteAdviceOnHackedConstructorBytecode",
      "WeaverTest#shouldExecuteSubTypeRestrictionAdvice",
      "WeaverTest#shouldMutateParameter",
      "WeaverTest#shouldStillCallOnAfterOfHigherPriorityPointcut",
      "WeaverTest#shouldShim",
      "WeaverTest#shouldNotMatchMethodBasedOnReturnType",
      "WeaverTest#shouldNotBombWithDuplicateFrames",
      "WeaverTest#shouldHandleCircularDependency",
      "WeaverTest#shouldNotDisruptInnerTryCatch",
      "WeaverTest#shouldBindParameterArrayOnThrow",
      "WeaverTest#shouldHandleBridgeCallingSuper",
      "WeaverTest#shouldBindClassMeta",
      "WeaverTest#shouldBindOptionalPrimitiveReturn",
      "WeaverTest#shouldBindMethodMetaArrays",
      "WeaverTest#shouldHandleInheritedPublicMethodFromPackagePrivateClass",
      "WeaverTest#shouldExecuteSubTypeRestrictionWhereMethodNotReImplementedInSubClassAdvice2",
      "WeaverTest#shouldBindOptionalVoidReturn",
      "WeaverTest#shouldExecuteEnabledAdviceOnOnlyThrow",
      "WeaverTest#shouldBindPrimitiveBooleanTraveler",
      "WeaverTest#shouldNotExecuteSuperTypeRestrictionWhereMethodNotReImplementedInSubClassAdvice2",
      "WeaverTest#shouldBindParameters",
      "WeaverTest#shouldExecuteEnabledAdvice",
      "WeaverTest#shouldExecuteSingleJumpAdviceOnHackedConstructorBytecode",
      "WeaverTest#shouldNotBomb2",
      "WeaverTest#shouldNotTryToWeaveNativeMethods",
      "WeaverTest#shouldNotMatchMethodBasedOnReturnType2",
      "WeaverTest#shouldHandleSubInheritedMethod",
      "WeaverTest#shouldWeaveMethodWithPrimitiveArgs",
      "WeaverTest#shouldExecuteAnotherAnnotationButWrongBasedPointcut",
      "WeaverTest#shouldNotExecuteSubTypeRestrictionAdvice",
      "WeaverTest#shouldExecuteAdviceOnMoreNotPerfectBytecode",
      "WeaverTest#shouldHandlePointcutWithMultipleMethods",
      "WeaverTest#shouldBindReceiver",
      "WeaverTest#shouldNotWeaveIfDoesNotOverrideMatch",
      "WeaverTest#shouldMixinAndCallInitExactlyOnce",
      "WeaverTest#shouldBindMethodMetaOnThrow",
      "WeaverTest#shouldExecuteSubTypeRestrictionWhereMethodNotReImplementedInSubClassAdvice",
      "WeaverTest#shouldHandleInnerClassArg",
      "WeaverTest#shouldHandleConstructorPointcut",
      "WeaverTest#shouldNotWeaveStaticSubbedMethod",
      "WeaverTest#shouldNotExecuteSuperTypeRestrictionAdvice",
      "WeaverTest#shouldBindTravelerOnThrow",
      "WeaverTest#shouldExecuteAdviceOnStillMoreNotPerfectBytecode",
      "WeaverTest#shouldNotTryToWeaveAbstractMethods",
      "WeaverTest#shouldNotMatchMethodParametersBadDotDot1",
      "WeaverTest#shouldExecuteEnabledAdviceOnThrow",
      "WeaverTest#shouldBindPrimitiveReturn",
      "WeaverTest#shouldBindReceiverOnThrow",
      "WeaverTest#shouldPayAttentionToPublicAndNonStaticModifierMatching",
      "WeaverTest#shouldWeaveBytecodeWithStackFrames2",
      "WeaverTest#shouldWeaveBytecodeWithStackFrames3",
      "WeaverTest#shouldWeaveBytecodeWithStackFrames4",
      "WeaverTest#shouldWeaveBytecodeWithStackFrames5",
      "WeaverTest#shouldWeaveBytecodeWithStackFrames6",
      "WeaverTest#shouldBindParameterArray",
      "WeaverTest#shouldExecuteSubTypeRestrictionWhereMethodNotReImplementedInSubSubClassAdvice2",
      "WeaverTest#shouldExecuteComplexSuperTypeRestrictedPointcut",
      "WeaverTest#shouldBindClassMetaOnThrow",
      "WeaverTest#shouldNotBombWithTroublesomeBytecode",
      "WeaverTest#shouldMatchMethodReturningVoid",
      "WeaverTest#shouldNotExecuteSubTypeRestrictionWhereMethodNotReImplementedInSubSubClassAdvice",
      "WeaverTest#shouldExecuteSuperTypeRestrictionAdvice",
      "WeaverTest#shouldNotMatchMethodReturningString",
      "WeaverTest#shouldBindParameterOnThrow",
      "WeaverTest#shouldExecuteAnotherAnnotationBasedPointcut",
      "WeaverTest#shouldMatchMethodParametersDotDot1",
      "WeaverTest#shouldMatchMethodParametersDotDot2",
      "WeaverTest#shouldMatchMethodParametersDotDot3",
      "WeaverTest#shouldHandleSubInheritedFromClassInBootstrapClassLoader",
      "WeaverTest#shouldNotExecuteDisabledAdviceOnThrow",
      "WeaverTest#shouldMixinToInterface",
      "WeaverTest#shouldExecuteAnnotationBasedPointcut",
      "WeaverTest#shouldNotBomb",
      "WeaverTest#shouldHandleInheritedMethodFulfillingAnInterface",
      "WeaverTest#shouldNotCrashOnInheritedFinalMethodFulfillingAnInterface",
      "WeaverTest#shouldWeaveBytecodeWithStackFrames",
      "WeaverTest#shouldWeaveTypeWithNamePattern",
      "MessageTest#shouldFormatConstant",
      "MessageTest#shouldTruncateDetail",
      "MessageTest#shouldNotTruncateMessage",
      "MessageTest#shouldFormatMultiple",
      "MessageTest#shouldFormatSingle",
      "MessageTest#shouldFormatConstantWithEmptyMethodBody",
      "MessageTest#shouldTestNotEnoughArgsForTemplate",
      "MessageTest#shouldTestNullTemplate",
      "MessageTest#shouldTruncateMessage",
      "MessageTest#shouldFormatSinglePlus",
      "GaugeCollectorTest#shouldNotCaptureCounterGauge",
      "GaugeCollectorTest#shouldHandleInvalidMBeanObjectName",
      "GaugeCollectorTest#shouldHandleMBeanAttributeOtherException",
      "GaugeCollectorTest#shouldCaptureNonCounterGauge",
      "GaugeCollectorTest#shouldHandleMBeanInstanceNotFoundBeforeLoggingDelay",
      "GaugeCollectorTest#shouldHandleMBeanInstanceNotFoundAfterLoggingDelay",
      "GaugeCollectorTest#shouldHandleMBeanAttributeNotFound",
      "GaugeCollectorTest#shouldHandleMBeanAttributeNotANumber",
      "GaugeCollectorTest#shouldCaptureCounterGauge",
      "GaugeCollectorTest#shouldHandleMBeanInstanceNotFoundBeforeAndAfterLoggingDelay",
      "GaugeCollectorTest#shouldHandleMBeanAttributeNotANumberOrString",
      "IncidentDaoTest#shouldExistAfterInsert",
      "IncidentDaoTest#shouldBeClosedAfterClose",
      "IncidentDaoTest#shouldNotExist",
      "IncidentDaoTest#shouldNotBeOpenAfterClose",
      "IncidentDaoTest#shouldReadAll",
      "AggregateDaoTest#shouldReadTransactions",
      "TimerNameCacheTest#testClassWithoutPointcutAnnotation",
      "TimerNameCacheTest#testNormal",
      "TimerNameCacheTest#testNullClass",
      "TimerNameCacheTest#testClassWithEmptyTimerName",
      "ClassLoadersTest#shouldDeleteRegularFile",
      "ClassLoadersTest#shouldCreateDirectory",
      "VersionsTest#shouldFallbackToZerosOnError",
      "DataSourceTest#testDebugMultipleArgs",
      "DataSourceTest#testDebugOneStringArg",
      "DataSourceTest#testDebugOneNullArg",
      "DataSourceTest#testDebugOneNumberArg",
      "DataSourceTest#testDebugNoArgs",
      "RowMappersTest#testExpired",
      "RowMappersTest#testExists",
      "RowMappersTest#testNotExists",
      "InstrumentationConfigValidationTest#testInvalidCharactersInTimerName",
      "InstrumentationConfigValidationTest#testInvalidClassNameAndMethodName",
      "InstrumentationConfigValidationTest#testValid",
      "InstrumentationConfigValidationTest#testValidEmptyTimerName",
      "InstrumentationConfigValidationTest#testInvalidEmptyTimerName",
      "InstrumentationConfigValidationTest#testInvalidTransaction",
      "InstrumentationConfigValidationTest#testInvalidTraceEntry",
      "MutableProfileTest#testMultipleRootNodes",
      "MutableProfileTest#testSingleStackTrace",
      "MutableProfileTest#testMerging",
      "UiAnalyzedMethodOrderingTest#shouldReadOrderedMethods",
      "NestedTimerMapTest#testBucketCollision",
      "PathEvaluatorTest#shouldFormatByteArrayUsingDefaultCharset",
      "PathEvaluatorTest#shouldCallMethodOnPackagePrivateClass",
      "PathEvaluatorTest#shouldFormatByteArrayUsingCharset",
      "PathEvaluatorTest#shouldTestNestedPathWithNull",
      "PathEvaluatorTest#shouldTestNestedArrayPathNavigation",
      "PathEvaluatorTest#shouldGetField",
      "PathEvaluatorTest#shouldCallGetterMethod",
      "PathEvaluatorTest#shouldTestRemainingPath",
      "PathEvaluatorTest#shouldFormatByteArrayAsHex",
      "PathEvaluatorTest#shouldCallNonGetterMethod",
      "PathEvaluatorTest#shouldTestNestedPath",
      "PathEvaluatorTest#shouldCallBooleanGetterMethod",
      "Weaver8Test#shouldExecuteDefaultMethodAdvice2",
      "Weaver8Test#shouldNotWeaveIterableDefaultMethod",
      "Weaver8Test#shouldWeaveIterableNonDefaultMethod",
      "Weaver8Test#shouldNotWeaveDefaultMethodAdvice",
      "Weaver8Test#shouldExecuteDefaultMethodAdvice",
      "ResourceMethodMetaTest#should",
      "WeavingJDK14BytecodeTest#shouldWeaveJDK14StaticMethodUsingBindReceiverParameter",
      "WeaverErrorHandlingTest#shouldHandleVoidPrimitiveBooleanTravelerGracefully",
      "WeaverErrorHandlingTest#shouldNotCallOnThrowForOnReturnException2",
      "WeaverErrorHandlingTest#shouldNotCallOnThrowForOnReturnException",
      "WeaverErrorHandlingTest#shouldHandleVoidPrimitiveTravelerGracefully",
      "WeaverErrorHandlingTest#shouldNotCallOnThrowForOnBeforeException",
      "ConfigServiceImplDefensiveCheckTest#testRegisterConfigListener",
      "ConfigServiceImplDefensiveCheckTest#testRegisterListener",
      "ConfigServiceImplDefensiveCheckTest#testGetProperty",
      "MissingOptionalDependenciesReflectionTest#testReflectionsGetAnyMethod",
      "MissingOptionalDependenciesReflectionTest#testNormal",
      "GaugesTest#test"
    ],
    "elide": [
      "JpaDataStoreTest#verifyJPQLGeneratorRegistration",
      "RequestScopeTest#testNewObjectsForInheritedTypes",
      "FetcherFetchTest#testFailuresWithBody",
      "FetcherFetchTest#testRootCollection",
      "FetcherFetchTest#testNestedCollectionPaginate",
      "FetcherFetchTest#testFragmentLoop",
      "FetcherFetchTest#testFragmentUnknown",
      "FetcherFetchTest#testAliasAttribute",
      "FetcherFetchTest#testDateGreaterThanFilter",
      "FetcherFetchTest#testVariableUnknownReference",
      "FetcherFetchTest#testAliasRelationship",
      "FetcherFetchTest#testRootCollectionInvalidSort",
      "FetcherFetchTest#testRootCollectionMultiSort",
      "FetcherFetchTest#testAliasPartialQueryAmbiguous",
      "FetcherFetchTest#testRootUnknownField",
      "FetcherFetchTest#testNestedCollection",
      "FetcherFetchTest#testPageTotalsRootWithIds",
      "FetcherFetchTest#testSchemaIntrospection",
      "FetcherFetchTest#testFragmentCorrect",
      "FetcherFetchTest#testComputedAttributes",
      "FetcherFetchTest#testAliasSameRelationship",
      "FetcherFetchTest#testPageTotalsRoot",
      "FetcherFetchTest#testRootCollectionFilter",
      "FetcherFetchTest#testAliasAmbiguous",
      "FetcherFetchTest#testDateLessThanFilter",
      "FetcherFetchTest#testRootCollectionPaginateWithOffset",
      "FetcherFetchTest#testNestedCollectionSort",
      "FetcherFetchTest#testPageTotalsRelationship",
      "FetcherFetchTest#testVariableDefinition",
      "FetcherFetchTest#testPageTotalsRootWithFilter",
      "FetcherFetchTest#testRootCollectionPaginateWithoutOffset",
      "FetcherFetchTest#testRootMultipleIds",
      "FetcherFetchTest#testPageTotalsRootWithPagination",
      "FetcherFetchTest#testFragmentInline",
      "FetcherFetchTest#testNestedCollectionFilter",
      "FetcherFetchTest#testTypeIntrospection",
      "FetcherFetchTest#testNestedSingle",
      "FetcherFetchTest#testVariableInvalidNonNull",
      "FetcherFetchTest#testRootCollectionSort",
      "FetcherFetchTest#testRootSingle",
      "FetcherRemoveTest#testRootCollection",
      "FetcherRemoveTest#testNestedCollectionNothingToRemove",
      "FetcherRemoveTest#testNestedBadInput",
      "FetcherRemoveTest#testRootBadInput",
      "FetcherRemoveTest#testNestedCollection",
      "FetcherRemoveTest#testBadArgument",
      "FetcherRemoveTest#testRootIdWithBadData",
      "FetcherUpsertTest#testUpsertOnCollection",
      "FetcherUpsertTest#testNonCreatedIdOnlyRequest2Back",
      "FetcherUpsertTest#testRootSingleWithId",
      "FetcherUpsertTest#testNestedSingleUpdate",
      "FetcherUpsertTest#testNonCreatedIdReferenceCollection",
      "FetcherUpsertTest#testRootCollectionMixedIds",
      "FetcherUpsertTest#testCreateNestedCollection",
      "FetcherUpsertTest#testCreateRootSingle",
      "FetcherUpsertTest#testNestedCollection",
      "FetcherUpsertTest#testNestedUpserts",
      "FetcherUpsertTest#testCrossCyclicRelationships",
      "FetcherUpsertTest#testCreateWithVariables",
      "FetcherUpsertTest#testCreateNestedSingleUnshareable",
      "FetcherUpsertTest#testCreateRootCollection",
      "FetcherUpsertTest#testRootSingleWithList",
      "FetcherUpsertTest#testCreateNestedSingle",
      "MultipleFilterDialectTest#testGlobalExpressionParsing",
      "MultipleFilterDialectTest#testMissingTypedDialect",
      "MultipleFilterDialectTest#testGlobalExpressionParseFailure",
      "MultipleFilterDialectTest#testTypedExpressionParseFailure",
      "MultipleFilterDialectTest#testTypedExpressionParsing",
      "MultipleFilterDialectTest#testMissingGlobalDialect",
      "FilterConstraintsTest#testWithWhereAndHaving",
      "FilterConstraintsTest#testPureWhere",
      "FilterConstraintsTest#testPureHaving",
      "HttpStatusExceptionTest#testGetVerboseResponseWithSupplier",
      "HttpStatusExceptionTest#testGetVerboseResponse",
      "HttpStatusExceptionTest#testGetEncodedResponse",
      "HttpStatusExceptionTest#testGetResponse",
      "HttpStatusExceptionTest#testGetEncodedVerboseResponse",
      "HttpStatusExceptionTest#testGetEncodedVerboseResponseWithSupplier",
      "JsonApiTest#readSingleWithMeta",
      "JsonApiTest#writeListIncluded",
      "JsonApiTest#writeList",
      "JsonApiTest#readListWithMeta",
      "JsonApiTest#writeSingleIncluded",
      "JsonApiTest#readSingleIncluded",
      "JsonApiTest#readList",
      "JsonApiTest#writeSingleNoAttributesNoRel",
      "JsonApiTest#readSingle",
      "JsonApiTest#readListIncluded",
      "JsonApiTest#checkInit",
      "JsonApiTest#writeEmptyObject",
      "JsonApiTest#writeSingle",
      "JsonApiTest#writeEmptyList",
      "GraphQLEndpointTest#testCannotReadRestrictedField",
      "GraphQLEndpointTest#testPartialResponse",
      "GraphQLEndpointTest#testQueryAMap",
      "GraphQLEndpointTest#testValidFetch",
      "GraphQLEndpointTest#testLifeCycleHooks",
      "GraphQLEndpointTest#testQueryAMapWithBadFields",
      "GraphQLEndpointTest#testAuditLogging",
      "GraphQLEndpointTest#testMultipleQueryWithAliasAndArguments",
      "GraphQLEndpointTest#testFailedMutationAndRead",
      "GraphQLEndpointTest#testFailedCommitCheck",
      "GraphQLEndpointTest#testNonShareable",
      "GraphQLEndpointTest#testSuccessfulMutation",
      "GraphQLEndpointTest#testMultipleRoot",
      "GraphQLEndpointTest#testCanReadRestrictedFieldWithAppropriateAccess",
      "GraphQLEndpointTest#testMultipleQueryWithAlias",
      "GraphQLEndpointTest#testValidFetchWithVariables",
      "FetcherUpdateTest#testRootSingleWithId",
      "FetcherUpdateTest#testNestedSingleUpdate",
      "FetcherUpdateTest#testNestedCollectionMissingIds",
      "FetcherUpdateTest#testRootCollectionMissingIds",
      "FetcherUpdateTest#testNestedCollection",
      "FetcherUpdateTest#testNestedUpdates",
      "FetcherUpdateTest#testCrossCyclicRelationships",
      "FetcherUpdateTest#testRootSingleWithList",
      "FetcherUpdateTest#testUpdateComplexGraph",
      "FetcherUpdateTest#testRootCollectionInvalidIds",
      "PermissionExecutorTest#testFailAllFieldAwareSuccessOperationFailCommit",
      "PermissionExecutorTest#testSuccessfulOperationCheck",
      "PermissionExecutorTest#testFailOperationCheckAll",
      "PermissionExecutorTest#testFailOperationCheckAny",
      "PermissionExecutorTest#testReadFieldAwareFailureAllSpecificField",
      "PermissionExecutorTest#testReadFailureFieldAwareOpenBean",
      "PermissionExecutorTest#testPassAnyFieldAwareFailOperationSuccessCommit",
      "PermissionExecutorTest#testFailCommitChecks",
      "PermissionExecutorTest#testUpdateFieldAwareSuccessAll",
      "PermissionExecutorTest#testUpdateFieldAwareSuccessAny",
      "PermissionExecutorTest#testCache",
      "PermissionExecutorTest#testUserCheckCache",
      "PermissionExecutorTest#testReadFieldAwareFailureAll",
      "PermissionExecutorTest#testReadFieldAwareFailureAny",
      "PermissionExecutorTest#testSuccessfulCommitChecks",
      "PermissionExecutorTest#testSpecificFieldOveriddenOperationCheckSucceed",
      "PermissionExecutorTest#testFailAllSpecificFieldAwareSuccessOperationFailCommit",
      "PermissionExecutorTest#testPassAnySpecificFieldAwareFailOperationSuccessCommit",
      "PermissionExecutorTest#testReadFieldAwareFailureAllNoOverride",
      "PermissionExecutorTest#testSpecificFieldCommitCheckFailByOveriddenField",
      "PermissionExecutorTest#testUpdateFieldAwareFailureAll",
      "PermissionExecutorTest#testUpdateFieldAwareFailureAny",
      "PermissionExecutorTest#testReadFieldAwareSuccessFailureAnyField",
      "PermissionExecutorTest#testReadFieldAwareSuccessAllAnyField",
      "PermissionExecutorTest#testDeleteCheckExpressionAlwaysInline",
      "PermissionExecutorTest#testReadCheckExpressionAlwaysInline",
      "PermissionExecutorTest#testReadFieldAwareSuccessAll",
      "PermissionExecutorTest#testReadFieldAwareSuccessAny",
      "PermissionExecutorTest#testNoCache",
      "PermissionExecutorTest#testReadFieldAwareEntireOpenBean",
      "PermissionExecutorTest#testBadInstance",
      "PermissionToFilterExpressionVisitorTest#testTestMethods",
      "PaginationLogicTest#checkValidOffsetAndFirstRequest",
      "PaginationLogicTest#shouldThrowExceptionForNegativePageSize",
      "PaginationLogicTest#shouldUseDefaultsWhenMissingCurrentPageAndPageSize",
      "PaginationLogicTest#shouldUseDefaultsWhenNoParams",
      "PaginationLogicTest#neverExceedMaxPageSize",
      "PaginationLogicTest#checkBadOffset",
      "PaginationLogicTest#shouldThrowExceptionForNegativePageNumber",
      "PaginationLogicTest#invalidUsageOfPaginationParameters",
      "PaginationLogicTest#shouldParseQueryParamsForCurrentPageAndPageSize",
      "PaginationLogicTest#shouldSetGenerateTotals",
      "PaginationLogicTest#shouldParseQueryParamsForOffsetAndLimit",
      "PaginationLogicTest#checkBadLimit",
      "PaginationLogicTest#checkErroneousPageLimit",
      "PaginationLogicTest#shouldThrowExceptionForInvalidPageParams",
      "PaginationLogicTest#pageBasedPaginationWithDefaultSize",
      "PaginationLogicTest#checkBadOffsetString",
      "PaginationLogicTest#checkBadLimitString",
      "PaginationLogicTest#shouldNotSetGenerateTotals",
      "PaginationLogicTest#shouldThrowExceptionForNonIntPageParamValues",
      "PaginationLogicTest#testClassLevelOverride",
      "GraphQLScalarsTest#testGraphQLDateParseLiteral",
      "GraphQLScalarsTest#testGraphQLDeferredIdSerialize",
      "GraphQLScalarsTest#testGraphQLDateSerialize",
      "GraphQLScalarsTest#testGraphQLDateParseValue",
      "GraphQLScalarsTest#testGraphQLDeferredIdParseLiteral",
      "GraphQLScalarsTest#testGraphQLDeferredIdParseValue",
      "FetcherDeleteTest#testRootCollection",
      "FetcherDeleteTest#testNestedBadInput",
      "FetcherDeleteTest#testRootBadInput",
      "FetcherDeleteTest#testNestedCollection",
      "FetcherDeleteTest#testBadArgument",
      "FetcherDeleteTest#testRootIdWithBadData",
      "FetcherDeleteTest#testRootIdNoData",
      "FetcherDeleteTest#testNestedSingleId",
      "LifeCycleTest#testRemoveFromCollectionTrigger",
      "LifeCycleTest#testElidePatch",
      "LifeCycleTest#testPreSecurityLifecycleHookException",
      "LifeCycleTest#testReadHookOnEntityFields",
      "LifeCycleTest#testUpdateHookOnEntityFields",
      "LifeCycleTest#testAddToCollectionTrigger",
      "LifeCycleTest#testUpdateWithChangeSpec",
      "LifeCycleTest#testElideGet",
      "LifeCycleTest#testMultipleUpdateWithChangeSpec",
      "LifeCycleTest#testPreCommitLifeCycleHookException",
      "LifeCycleTest#testUpdateRelationshipWithChangeSpec",
      "LifeCycleTest#testCreate",
      "LifeCycleTest#testCreateHookOnEntityFields",
      "LifeCycleTest#testOnRead",
      "LifeCycleTest#testElideCreate",
      "LifeCycleTest#testElideDelete",
      "LifeCycleTest#testOnDelete",
      "LifeCycleTest#testUpdate",
      "LifeCycleTest#testDeleteHookOnEntityFields",
      "PermissionExpressionBuilderTest#testSpecificFieldExpressionText",
      "PermissionExpressionBuilderTest#testAnyFieldExpressionText",
      "InMemoryStoreTransactionTest#testDataStoreRequiresInMemoryPagination",
      "InMemoryStoreTransactionTest#testDataStoreRequiresTotalInMemoryFilter",
      "InMemoryStoreTransactionTest#testFullFilterPredicatePushDown",
      "InMemoryStoreTransactionTest#testFilteringRequiresInMemoryPagination",
      "InMemoryStoreTransactionTest#testDataStoreRequiresPartialInMemoryFilter",
      "InMemoryStoreTransactionTest#testPaginationPushDown",
      "InMemoryStoreTransactionTest#testDataStoreRequiresInMemorySorting",
      "InMemoryStoreTransactionTest#testSortingPushDown",
      "InMemoryStoreTransactionTest#testFilteringRequiresInMemorySorting",
      "InMemoryStoreTransactionTest#testSortingRequiresInMemoryPagination",
      "InMemoryStoreTransactionTest#testTransactionRequiresInMemoryFilterDuringGetRelation",
      "InMemoryFilterExecutorTest#prefixAndPostfixAndInfixPredicateTest",
      "InMemoryFilterExecutorTest#negativeTests",
      "InMemoryFilterExecutorTest#isnullAndNotnullPredicateTest",
      "InMemoryFilterExecutorTest#inAndNotInPredicateTest",
      "InMemoryFilterExecutorTest#andExpressionTest",
      "InMemoryFilterExecutorTest#orExpressionTest",
      "InMemoryFilterExecutorTest#compareOpPredicateTests",
      "HashMapDataStoreTest#testCanGenerateIdsAfterDataCommitted",
      "HashMapDataStoreTest#checkLoading",
      "HashMapDataStoreTest#testValidCommit",
      "PersistentResourceNoopUpdateTest#testToManyAddRelation",
      "PersistentResourceNoopUpdateTest#testNOOPToOneAddRelation",
      "PersistentResourceNoopUpdateTest#testNOOPToManyAddRelation",
      "PersistentResourceNoopUpdateTest#testToOneAddRelation",
      "FilterTranslatorTest#testCustomOperator",
      "FilterTranslatorTest#testEmptyFieldOnPostfix",
      "FilterTranslatorTest#testEmptyFieldOnPrefix",
      "FilterTranslatorTest#testHQLQueryVisitor",
      "FilterTranslatorTest#testCustomPredicate",
      "FilterTranslatorTest#testEmptyFieldOnInfix",
      "AbstractHQLQueryBuilderTest#testSortClauseWithPrefix",
      "AbstractHQLQueryBuilderTest#testSortClauseWithJoin",
      "AbstractHQLQueryBuilderTest#testFilterJoinClause",
      "AbstractHQLQueryBuilderTest#testSettingQueryPagination",
      "AbstractHQLQueryBuilderTest#testSettingQueryParams",
      "AbstractHQLQueryBuilderTest#testSortClauseWithInvalidJoin",
      "AbstractHQLQueryBuilderTest#testFetchJoinClause",
      "AbstractHQLQueryBuilderTest#testSortClauseWithoutPrefix",
      "IncludedProcessorTest#testIncludeForbiddenRelationship",
      "IncludedProcessorTest#testNoQueryIncludeParams",
      "IncludedProcessorTest#testExecuteSingleRelationOnCollection",
      "IncludedProcessorTest#testExecuteSingleRelation",
      "IncludedProcessorTest#testExecuteMultipleNestedRelations",
      "IncludedProcessorTest#testExecuteMultipleRelations",
      "IncludedProcessorTest#testExecuteSingleNestedRelation",
      "IncludedProcessorTest#testNoQueryParams",
      "CoerceUtilTest#testError",
      "CoerceUtilTest#testConversionFailure",
      "CoerceUtilTest#testMapError",
      "EntityDictionaryTest#testEntityInheritanceBindingOverride",
      "EntityDictionaryTest#testBadInterface",
      "EntityDictionaryTest#testJPAFieldLevelAccess",
      "EntityDictionaryTest#testGetAttributeOrRelationAnnotation",
      "EntityDictionaryTest#testIsValidField",
      "EntityDictionaryTest#testNonEntityInheritanceBindingOverride",
      "EntityDictionaryTest#testNoExcludedFieldsReturned",
      "EntityDictionaryTest#testFindCheckByExpression",
      "EntityDictionaryTest#testExcludedAttributeIsNotExposed",
      "EntityDictionaryTest#testIsSharableFalse",
      "EntityDictionaryTest#testDetectCascadeRelations",
      "EntityDictionaryTest#testGetType",
      "EntityDictionaryTest#testGetIdAnnotationsSubClass",
      "EntityDictionaryTest#testMissingEntityBinding",
      "EntityDictionaryTest#testAttributeOrRelationAnnotationExists",
      "EntityDictionaryTest#testNonEntityInheritanceBindingExclusion",
      "EntityDictionaryTest#testGetInverseRelationshipOwnedSide",
      "EntityDictionaryTest#testGetInverseRelationshipOwningSide",
      "EntityDictionaryTest#testGetFirstAnnotationConflict",
      "EntityDictionaryTest#testGetFirstAnnotation",
      "EntityDictionaryTest#testBadLookupEntityClass",
      "EntityDictionaryTest#testComputedAttributeIsExposed",
      "EntityDictionaryTest#testMappedInterface",
      "EntityDictionaryTest#testGetIdType",
      "EntityDictionaryTest#testGetParameterizedType",
      "EntityDictionaryTest#testEntityInheritanceBinding",
      "EntityDictionaryTest#testGetTypUnknownEntityException",
      "EntityDictionaryTest#testNonEntityInheritanceBinding",
      "EntityDictionaryTest#testJPAPropertyLevelAccess",
      "EntityDictionaryTest#testBindingInitializerPriorToBindingEntityClass",
      "EntityDictionaryTest#testGetIdAnnotationsNoId",
      "EntityDictionaryTest#testIsSharableTrue",
      "EntityDictionaryTest#testBindingTriggerPriorToBindingEntityClass1",
      "EntityDictionaryTest#testBindingTriggerPriorToBindingEntityClass2",
      "EntityDictionaryTest#testBindingTriggerPriorToBindingEntityClass3",
      "EntityDictionaryTest#testGetIdAnnotations",
      "FetcherReplaceTest#testReplaceEmptyCollections",
      "FetcherReplaceTest#testReplaceNestedCollection",
      "FetcherReplaceTest#testReplaceAttributeRoot",
      "FetcherReplaceTest#testReplaceWithIdsFails",
      "ModelBuilderTest#testBuild",
      "ModelBuilderTest#checkAttributeArguments",
      "ModelBuilderTest#testPageInfoObject",
      "ModelBuilderTest#testRelationshipParameters",
      "OperatorTest#testInvalidValueExceptionCases",
      "OperatorTest#isnullAndNotnullTest",
      "OperatorTest#prefixAndPostfixAndInfixTest",
      "OperatorTest#compareOpTests",
      "OperatorTest#testInvalidPredicateExceptionCases",
      "OperatorTest#inAndNotInTest",
      "CanPaginateVisitorTest#testClassUserPermissions",
      "CanPaginateVisitorTest#testNotOperationExpression",
      "CanPaginateVisitorTest#testClassOperationPermissions",
      "CanPaginateVisitorTest#testFalseUserOROperationExpression",
      "CanPaginateVisitorTest#testComplexTrueExpression",
      "CanPaginateVisitorTest#testFieldFilterPermissions",
      "CanPaginateVisitorTest#testTrueUserOROperationExpression",
      "CanPaginateVisitorTest#testNoPermissions",
      "CanPaginateVisitorTest#testFalseUserAndOperationExpression",
      "CanPaginateVisitorTest#testMultipleFieldsNoPagination",
      "CanPaginateVisitorTest#testTrueUserAndOperationExpression",
      "CanPaginateVisitorTest#testMultipleFieldsPagination",
      "CanPaginateVisitorTest#testSparseFields",
      "ToEnumConverterTest#testInvalidType",
      "ToEnumConverterTest#testMissingStringValueException",
      "ToEnumConverterTest#testMissingNumberValueException",
      "UpdateOnCreateTest#updatePermissionOverwrittenForAttributeSuccessCase",
      "UpdateOnCreateTest#createPermissionOverwrittenForAttributeFailureCase",
      "UpdateOnCreateTest#createPermissionOverwrittenForRelationSuccessCase",
      "UpdateOnCreateTest#updatePermissionOverwrittenForRelationSuccessCase",
      "UpdateOnCreateTest#updatePermissionInheritedForAttributeSuccessCase",
      "UpdateOnCreateTest#updatePermissionInheritedForRelationFailureCase",
      "UpdateOnCreateTest#createPermissionInheritedForRelationSuccessCase",
      "UpdateOnCreateTest#createPermissionOverwrittenForAttributeSuccessCase",
      "UpdateOnCreateTest#createPermissionCheckClassAnnotationForCreatingAnEntitySuccessCase",
      "UpdateOnCreateTest#updatePermissionInheritedForRelationSuccessCase",
      "UpdateOnCreateTest#createPermissionInheritedForAttributeFailureCase",
      "UpdateOnCreateTest#createPermissionInheritedForAttributeSuccessCase",
      "UpdateOnCreateTest#createPermissionCheckFieldAnnotationForCreatingAnEntityFailureCase",
      "UpdateOnCreateTest#updatePermissionOverwrittenForAttributeFailureCase",
      "UpdateOnCreateTest#createPermissionOverwrittenForRelationFailureCase",
      "UpdateOnCreateTest#updatePermissionOverwrittenForRelationFailureCase",
      "UpdateOnCreateTest#updatePermissionInheritedForAttributeFailureCase",
      "UpdateOnCreateTest#createPermissionInheritedForRelationFailureCase",
      "UpdateOnCreateTest#createPermissionCheckFieldAnnotationForCreatingAnEntitySuccessCase",
      "PermissionExpressionVisitorTest#testNamesWithSpaces",
      "PermissionExpressionVisitorTest#testNotExpression",
      "PermissionExpressionVisitorTest#testOrExpression",
      "PermissionExpressionVisitorTest#testComplexExpression",
      "PermissionExpressionVisitorTest#testAndExpression",
      "PermissionExpressionVisitorTest#testComplexModelCreate"
    ],
    "sentry-java": [
      "SentryAppenderCloseTest#testStopDoNotFailIfNoInit",
      "SentryAppenderCloseTest#testStopDoNotFailIfSentryNull",
      "SentryAppenderCloseTest#testStopDoNotFailWhenMultipleCalls",
      "SentryAppenderCloseTest#testConnectionClosedWhenAppenderStopped",
      "SentryAppenderEventBuildingTest#testSourceUsedAsStacktrace",
      "SentryAppenderEventBuildingTest#testMarkerAddedToTag",
      "SentryAppenderEventBuildingTest#testContextPropertiesAddedToExtra",
      "SentryAppenderEventBuildingTest#testSimpleMessageLogging",
      "SentryAppenderEventBuildingTest#testExceptionLogging",
      "SentryAppenderEventBuildingTest#testLogParametrisedMessage",
      "SentryAppenderEventBuildingTest#testMdcAddedToExtra",
      "SentryAppenderEventBuildingTest#testMdcTakesPrecedenceOverContextProperties",
      "SentryAppenderEventBuildingTest#testExtraTagObtainedFromMdc",
      "SentryAppenderEventLevelFilterTest#testDefaultLevelFilter",
      "SentryAppenderFailuresTest#testAppendFailIfCurrentThreadSpawnedBySentry",
      "SentryAppenderFailuresTest#testSentryFailureDoesNotPropagate"
    ],
    "Argus": [
      "AbstractSchemaServiceTest#testPutNothingCached",
      "AbstractSchemaServiceTest#testPutEverythingCached",
      "AbstractSchemaServiceTest#testNumHoursUntilNextFlushBloomFilter",
      "AbstractSchemaServiceTest#testPutPartialCached",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndInertiaOne",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForMoreThanOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStampsReturnNull",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_Scenario1",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTime",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndZeroInertia",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeriesMultipleTriggers",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ClearNotification",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_OnCooldown",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_AlertWithMultipleMetricsNotificationSentForEach",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWehnNoDatapoints",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps2",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps3",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps4",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps5",
      "SystemConfiguratorTest#testLifecycle",
      "WardenServiceTest#testAssertSubsystemUsePermitted_AdminUser",
      "WardenServiceTest#testServiceIsSingleton",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
      "WardenServiceTest#testEnableWarden",
      "WardenServiceTest#testSuspendAdminUser",
      "WardenServiceTest#testAssertSubsystemUsePermitted_ExpiredSuspension",
      "WardenServiceTest#testSuspendUser",
      "WardenServiceTest#testDisableWarden",
      "WardenServiceTest#testModifyPolicyCounterEnablesAlert",
      "WardenServiceTest#testSubSystemSuspensionLevels",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NoSuspension",
      "WardenServiceTest#testUpdatePolicyCounterEnablesAlert",
      "WardenServiceTest#testWardenDashboard",
      "WardenServiceTest#testWardenAlertUsesUpdatedPolicyLimitForUser",
      "MainTest#testSchemaCommitClientInterrupt",
      "MainTest#testAlertClientInterrupt",
      "MainTest#testAnnotationCommitClientInterrupt",
      "MainTest#testMetricCommitClientInterrupt",
      "NamespaceServiceTest#testUserIsPermitted",
      "NamespaceServiceTest#testCreateNamespace",
      "NamespaceServiceTest#testFindNamespaceByPrimaryKey",
      "NamespaceServiceTest#testAdditionalUserIsPermitted",
      "NamespaceServiceTest#testNamespaceUnique",
      "NamespaceServiceTest#testAddAdditionalUsersToNamespace",
      "GlobalInterlockServiceTest#testObtainReleaseLock",
      "GlobalInterlockServiceTest#testObtainOnExpiredScheduleLock",
      "GlobalInterlockServiceTest#testLockExclusivity",
      "GlobalInterlockServiceTest#testObtainRefreshLock",
      "GlobalInterlockServiceTest#testReleaseNonexistentScheduleLock",
      "AlertServiceTest#testFindSharedAlertsByOwner",
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#testUpdateNotification",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#testAlertDelete",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testfindAlertsByOwner",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindAlertByNameAndOwner",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#findAlertsModifiedAfterDate",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testAlertDeleteCreateAnotherAlertWithSameName",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testFindAlertsByOwnerPaged",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser",
      "AlertServiceTest#testCountSharedAlertsMetaPaged",
      "AlertServiceTest#testFindPrivateAlertsPagedForNonPrivilegedUser",
      "AlertServiceTest#testAlertsCountContext",
      "AlertServiceTest#testCountAlertsByOwner",
      "AlertServiceTest#testfindAlertsByOwnerMeta",
      "AlertServiceTest#testDeletedTriggersInNotifications",
      "AlertServiceTest#testAlertEnqueue",
      "DashboardServiceTest#testFindSharedDashboardsByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsByOwner",
      "DashboardServiceTest#testFindDashboardsMetaByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwner",
      "DashboardServiceTest#testFindDashboardsMeta",
      "DashboardServiceTest#testDashboard_FindShareDelete",
      "DashboardServiceTest#testFindDashboardsByOwnerMeta",
      "DashboardServiceTest#testFindSharedDashboardsMetaByVersion",
      "DashboardServiceTest#testFindDashboardsByOwnerMetaAndByVersion",
      "DashboardServiceTest#testDashboardCrud",
      "DashboardServiceTest#testDashboard_FindShareDeleteByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMeta",
      "ManagementServiceTest#testPrivilegeGrant",
      "AuditServiceTest#testUpdateAudit",
      "AuditServiceTest#testFindAll",
      "AuditServiceTest#testCreateAudit",
      "AuditServiceTest#testFindByMessage",
      "AuditServiceTest#testFindByJPAEntity",
      "AuditServiceTest#testFindByHostName",
      "OAuthServiceTest#testAcceptOauthModifiedParams",
      "OAuthServiceTest#testAcceptOauth",
      "OAuthServiceTest#testCreateAuthorizationCode",
      "OAuthServiceTest#testAcceptOauthInvalidParams",
      "SchedulingServiceTest#testAlertSchedulingWithGlobalInterlock",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinMaxDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithTag",
      "MetricFederationTest#testEndPointFederationForkJoinMinDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsampler",
      "MetricFederationTest#testTimeFederationFork",
      "MonitorServiceTest#testAlertsCreatedOnStartMonitoring",
      "MonitorServiceTest#testConcurrentUpdates",
      "MonitorServiceTest#test_getCounterFromMetricName",
      "MonitorServiceTest#testServiceIsSingleton",
      "MonitorServiceTest#testEnableDisableMonitoring",
      "MonitorServiceTest#test_MonitoringDashboardNotNull",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithDownsampling",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags",
      "DefaultDiscoveryServiceTest#testWildcardQueriesNoMatch",
      "DefaultDiscoveryServiceTest#testNonWildcardQuery",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchExceedingLimit",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags1",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithinLimit",
      "UserServiceTest#testDefaultUserExistence",
      "UserServiceTest#testAdminUserExistence",
      "UserServiceTest#testUserCrud",
      "UserServiceTest#testUniqueUserCount",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricTagvRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutCreateUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutUpdateUsingScopeAndMetricSchemaIndex",
      "ChartServiceTest#testDeleteChartById",
      "ChartServiceTest#testDeleteChart",
      "ChartServiceTest#testGetChartsForEntity",
      "ChartServiceTest#testCreateChart",
      "ChartServiceTest#testGetChartByPrimaryKey",
      "ChartServiceTest#testGetChartsByOwner",
      "CallbackServiceTest#testCallbackNotifier",
      "MQServiceTest#testServiceIsSingleton",
      "MQServiceTest#testBulkPutAndGetMessages",
      "MQServiceTest#testPutAndBulkGetMessages",
      "MQServiceTest#testPutAndBulkGetMessagesMultiThredaing",
      "AbstractTSDBServiceTest#testCyclingIterator",
      "NotifierTest#testUpdatingTriggerName",
      "NotifierTest#testDBNotifier",
      "NotifierTest#testAbsoluteTimeStampsInExpression",
      "NotifierTest#testTemplateNaming",
      "CachedDiscoveryServiceTest#testWildcardExpansionWithinLimit",
      "CachedDiscoveryServiceTest#testWildcardExpansionExceedingLimit"
    ]
  },
  "org.apache.httpcomponents:httpclient": {
    "nanohttpd": [
      "CookieIntegrationTest#testCookieSentBackToClient"
    ],
    "Jest": [
      "CardinalityAggregationIntegrationTest#testGetCardinalityAggregation"
    ],
    "heritrix3": [
      "Precedence4SelfTest#testSomething",
      "Precedence2SelfTest#testSomething",
      "FramesSelfTestCase#testSomething",
      "SimpleSelfTest#testSomething",
      "UserAgentSelfTest#testSomething",
      "Precedence1SelfTest#testSomething",
      "CharsetSelfTest#testSomething",
      "BackgroundImageExtractionSelfTestCase#testSomething",
      "CookieFetchHTTPIntegrationTest#testExplicitDomain",
      "CookieFetchHTTPIntegrationTest#testBasics",
      "CookieFetchHTTPIntegrationTest#testIPAddress",
      "CookieFetchHTTPIntegrationTest#testExplicitDomainWithLeadingDot",
      "CookieFetchHTTPIntegrationTest#testImplicitDomain",
      "CookieFetchHTTPIntegrationTest#testSubdomainParentDomain",
      "CookieFetchHTTPIntegrationTest#testRejectDomain",
      "CookieFetchHTTPIntegrationTest#testNoCookie",
      "FormLoginSelfTest#testSomething",
      "StatisticsSelfTest#testSomething",
      "FormAuthSelfTest#testSomething",
      "BadURIsStopPageParsingSelfTest#testSomething"
    ],
    "wasabi": [
      "DefaultRestEndPointTest#testGetRestEndPointURI"
    ],
    "couchdb-lucene": [
      "ConfigTest#testGetClient"
    ],
    "signpost": [
      "CommonsHttpOAuthProviderTest#shouldRetrieveRequestTokenAndUpdateConsumer",
      "CommonsHttpOAuthProviderTest#shouldRespectCustomQueryParametersInAuthWebsiteUrl",
      "CommonsHttpOAuthProviderTest#shouldRetrieveAccessTokenAndUpdateConsumer",
      "CommonsHttpOAuthProviderTest#shouldMakeSpecialResponseParametersAvailableToConsumer",
      "HttpRequestAdapterTest#shouldReturnCorrectRequestUrl",
      "HttpRequestAdapterTest#shouldReturnCorrectRequestMethod",
      "HttpRequestAdapterTest#shouldGetAndSetRequestHeaders",
      "HttpRequestAdapterTest#shouldReturnCorrectContentType",
      "HttpRequestAdapterTest#shouldReturnCorrectMessagePayload"
    ],
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser"
    ]
  },
  "org.springframework:spring-beans": {
    "heritrix3": [
      "CheckpointSelfTest#testSomething",
      "Precedence4SelfTest#testSomething",
      "Precedence2SelfTest#testSomething",
      "FramesSelfTestCase#testSomething",
      "SimpleSelfTest#testSomething",
      "ScriptingConsoleTest#testInitialState",
      "ScriptingConsoleTest#testExecute",
      "ScriptingConsoleTest#testExecuteError",
      "UserAgentSelfTest#testSomething",
      "Precedence1SelfTest#testSomething",
      "CharsetSelfTest#testSomething",
      "Precedence3SelfTest#testSomething",
      "BackgroundImageExtractionSelfTestCase#testSomething",
      "FormLoginSelfTest#testSomething",
      "StatisticsSelfTest#testSomething",
      "HttpAuthSelfTest#testSomething",
      "FormAuthSelfTest#testSomething",
      "MaxLinkHopsSelfTest#testSomething",
      "BadURIsStopPageParsingSelfTest#testSomething"
    ],
    "servicecomb-java-chassis": [
      "ZipkinSpanAspectTest#initializationError",
      "TestSchemaDefParser#testDoParse",
      "TestConsumerProviderManager#allowedNoProvider",
      "TestProducerProviderManager#allowedNoProvider",
      "TestReferenceDefParser#testDoParse"
    ],
    "citrus": [
      "GroupTests#initializationError",
      "PullServiceTests#service_initParent",
      "ErrorHandlerTests#dev_detail",
      "ErrorHandlerTests#prod_sendError",
      "ErrorHandlerTests#prod_ExceptionPipeline",
      "ErrorHandlerTests#prod_ExceptionPipeline_noSchema",
      "FilterBeanTests#getServletContext",
      "FilterBeanTests#getFilterConfig",
      "FilterBeanTests#getFilterName",
      "FilterBeanTests#initHooks",
      "FilterBeanTests#missingRequired",
      "FilterBeanTests#injecting",
      "FilterBeanTests#setPropertyFailed",
      "MainHandlerTests#internalRequest_productionMode",
      "MainHandlerTests#internalRequest_main",
      "MainHandlerTests#internalRequest_homepage",
      "WebxFrameworkFilterTests#getComponent",
      "WebxFrameworkFilterTests#isExcluded",
      "WebxFrameworkFilterTests#componentPath_wrong",
      "WebxFrameworkFilterTests#findComponent",
      "WebxFrameworkFilterTests#readResource_app4_defaultComponent",
      "WebxFrameworkFilterTests#readResource_app5",
      "WebxFrameworkFilterTests#autowireComponentObject",
      "WebxFrameworkFilterTests#getConfiguration_fromComponent",
      "WebxFrameworkFilterTests#autowireController",
      "StoreMappingTests#duplicatedDefaultStores",
      "StoreMappingTests#undefinedStores",
      "StoreMappingTests#getExactMatchedAttributeNames",
      "StoreMappingTests#match",
      "WebxClasspathTests#components",
      "WebxClasspathTests#illegal_configLocationPattern",
      "WebxRootControllerTests#internalRequestMapping",
      "WebxRootControllerTests#valve_not_found_exception",
      "WebxRootControllerTests#valve_bad_request_exception",
      "WebxRootControllerTests#valve_exception_exception",
      "WebxRootControllerTests#valve_exception_exception_2",
      "WebxRootControllerTests#loadInternalRequestHandlers",
      "WebxRootControllerTests#passthru",
      "WebxRootControllerTests#requestContextFailed",
      "WebxRootControllerTests#internalRequest_illegal",
      "WebxRootControllerTests#internalRequest_error",
      "WebxRootControllerTests#nonInternalRequest",
      "WebxRootControllerTests#valve_breakToTop",
      "WebxRootControllerTests#valve_exception",
      "WebxRootControllerTests#head",
      "PageAuthorizationConfigTests#initializationError",
      "SchemaRequestHandlerTests#internalRequest_schema",
      "JspEngineTests#exists",
      "JspEngineTests#contextRoot_getResourceOfRoot",
      "JspEngineTests#contextRoot_getResourceOfWebXml",
      "JspEngineTests#contextRoot_failed",
      "JspEngineTests#render_writeToStream",
      "JspEngineTests#render_writeToWriter",
      "JspEngineTests#render_getText",
      "PropertyPlaceholderTests#location",
      "PropertyPlaceholderTests#defaultValue",
      "PropertyPlaceholderTests#propertiesRef_specificProperties",
      "PropertyPlaceholderTests#systemPropertyValue",
      "PropertyPlaceholderTests#invalidValue",
      "PropertyPlaceholderTests#propertiesRef",
      "PropertyPlaceholderTests#unresolvable_ignored",
      "PropertyPlaceholderTests#unresolvable_throwException",
      "SpringextWebContextLoaderTests#initializationError",
      "TurbineURIBrokerTests#config_withMappings",
      "TurbineURIBrokerTests#config_withoutMappings",
      "WebxUtilTests#getVersion",
      "WebxUtilTests#getServletAPIVersion",
      "TurbineContentURIBrokerTests#config",
      "SpringextContextLoaderTests#initializationError",
      "InfoHandlerTests#requestInfoPage",
      "InfoHandlerTests#systemInfo",
      "InfoHandlerTests#systemProperties",
      "InfoHandlerTests#environmentVariables"
    ],
    "metrics-spring": [
      "TestSuite#initializationError",
      "TestSuite#testExceptionMeteredMethod",
      "TestSuite#testMeteredInterfaceImpl",
      "TestSuite#testTimedMethod",
      "TestSuite#noMetricsRegistered",
      "TestSuite#testMeteredInterface",
      "TestSuite#testMeteredMethod",
      "TestSuite#testCountedMethod",
      "TestSuite#meteredMethod",
      "TestSuite#countedMethod",
      "TestSuite#timedMethod",
      "TestSuite#testMeteredClassInterface",
      "TestSuite#positiveContextLoadingTest",
      "TestSuite#negativeContextLoadingTest",
      "TestSuite#testSuppliedRegistries",
      "TestSuite#testDefaultRegistries",
      "TestSuite#testCustomRegistries",
      "TestSuite#fakeReporters",
      "TestSuite#realReporters",
      "TestSuite#reportersPropertyPlaceholders"
    ],
    "distributed-redis-tool": [
      "RedisClusterLockTest#tryLock",
      "RedisClusterLockTest#unlock",
      "RedisClusterLockTest#lock2False",
      "RedisClusterLockTest#tryLock2",
      "RedisClusterLockTest#tryLock2False",
      "RedisClusterLockTest#tryLockFalse",
      "RedisClusterLockTest#unlockFalse",
      "RedisClusterLockTest#lock2",
      "RedisClusterLockTest#lock",
      "RedisLimitJedisClusterJunitTest#limitTrue",
      "RedisLimitJedisClusterJunitTest#limit"
    ],
    "goodsKill": [
      "SeckillServiceImplTest#getById"
    ],
    "postgresql-embedded": [
      "TestMultipleInstance#itShouldAllowToRunTwoInstancesAtSameTime",
      "TestPostgresWithinSpringContext#initializationError"
    ]
  },
  "org.springframework:spring-core": {
    "heritrix3": [
      "Precedence4SelfTest#testSomething",
      "Precedence2SelfTest#testSomething",
      "FramesSelfTestCase#testSomething",
      "SimpleSelfTest#testSomething",
      "ScriptingConsoleTest#testInitialState",
      "ScriptingConsoleTest#testExecute",
      "ScriptingConsoleTest#testExecuteError",
      "UserAgentSelfTest#testSomething",
      "Precedence1SelfTest#testSomething",
      "CharsetSelfTest#testSomething",
      "Precedence3SelfTest#testSomething",
      "BackgroundImageExtractionSelfTestCase#testSomething",
      "FormLoginSelfTest#testSomething",
      "StatisticsSelfTest#testSomething",
      "HttpAuthSelfTest#testSomething",
      "FormAuthSelfTest#testSomething",
      "MaxLinkHopsSelfTest#testSomething",
      "BadURIsStopPageParsingSelfTest#testSomething"
    ],
    "citrus": [
      "SchemaBaseTests#inputStreamSource_toString",
      "InheritableBeanFactoryTests#request1",
      "InheritableBeanFactoryTests#request2",
      "SpringIntegrationTests#resourceLoadingSupport_getResourceLoadingService",
      "SpringIntegrationTests#getResource_noResourceLoadingService",
      "SpringIntegrationTests#getResource_recursively",
      "SpringIntegrationTests#getResource_notExist",
      "SpringIntegrationTests#getResource_notExistFile",
      "SpringIntegrationTests#getResource_inject",
      "SpringIntegrationTests#getResources_notFound",
      "SpringIntegrationTests#resourceAdapter_hashCodeAndEquals",
      "SpringIntegrationTests#getResources",
      "PageAuthorizationConfigTests#initializationError",
      "JspEngineTests#exists",
      "JspEngineTests#contextRoot_getResourceOfWebXml",
      "JspEngineTests#contextRoot_failed",
      "JspEngineTests#render_writeToStream",
      "JspEngineTests#render_writeToWriter",
      "JspEngineTests#render_getText",
      "JspEngineTests#contextRoot_getResourceOfRoot",
      "ResourceLoadingExtendableTests#initializationError",
      "SpringextWebContextLoaderTests#initializationError",
      "TurbineURIBrokerTests#config_withMappings",
      "TurbineURIBrokerTests#config_withoutMappings",
      "TurbineContentURIBrokerTests#config",
      "SpringextContextLoaderTests#initializationError",
      "ContributionTests#parse_import_each_other"
    ],
    "metrics-spring": [
      "TestSuite#initializationError",
      "TestSuite#testExceptionMeteredMethod",
      "TestSuite#testMeteredInterfaceImpl",
      "TestSuite#testTimedMethod",
      "TestSuite#noMetricsRegistered",
      "TestSuite#testMeteredInterface",
      "TestSuite#testMeteredMethod",
      "TestSuite#testCountedMethod",
      "TestSuite#meteredMethod",
      "TestSuite#countedMethod",
      "TestSuite#timedMethod",
      "TestSuite#testMeteredClassInterface",
      "TestSuite#positiveContextLoadingTest",
      "TestSuite#negativeContextLoadingTest",
      "TestSuite#testSuppliedRegistries",
      "TestSuite#testDefaultRegistries",
      "TestSuite#testCustomRegistries",
      "TestSuite#fakeReporters",
      "TestSuite#realReporters",
      "TestSuite#reportersPropertyPlaceholders"
    ],
    "ff4j": [
      "FlippingServiceTest#testAOPClass",
      "GreetingServiceTest#testAOP",
      "GreetingServiceTest#testAOPWithThreadLocal",
      "GreetingServiceTest#testAOPWithParameter",
      "FeatureAdvisorTest#testAlterClazzInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorTest#testAlterBeanInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorTest#testAnnotatedFlippingwithalterBean",
      "FeatureAdvisorTest#testNamespace",
      "FeatureAdvisorTest#testAnnotatedFlippingifqualifiedimplementationisnotthefirstclassqualifiednameinnaturalordering",
      "TestNotConnected#testCmdHelp2",
      "TestNotConnected#testCmdConnect",
      "TestNotConnected#testCmd",
      "TestNotConnected#testCmdls",
      "TestNotConnected#testCmdConnectInvalidEnv",
      "TestNotConnected#testCmdInvalidWord",
      "TestNotConnected#testCmdHelp",
      "TestNotConnected#testCmdList",
      "TestNotConnected#testCmdConnectInvalidCredential",
      "FF4JMBeanTest#should_enable_feature",
      "FF4JMBeanTest#defaultInitialisation",
      "FF4JMBeanTest#should_disable_feature",
      "FF4JMBeanTest#should_get_feature_auth_roles",
      "FF4JMBeanTest#should_retrieve_features_status",
      "FF4JMBeanTest#should_retrieve_changed_features_status",
      "FeatureAdvisorCGLIBTest#testAlterClazzInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorCGLIBTest#testAlterBeanInvokeThrowInvocationTargetExceptionNull",
      "FeatureAdvisorCGLIBTest#testAnnotatedFlippingwithalterBean",
      "FeatureAdvisorCGLIBTest#testWholeClassFlipping",
      "FeatureAdvisorCGLIBTest#testNamespace",
      "FeatureAdvisorCGLIBTest#testAnnotatedFlippingifqualifiedimplementationisnotthefirstclassqualifiednameinnaturalordering",
      "FlippingRepositoryTest#testAOPClass",
      "TestConnected#testCmdConnect",
      "TestConnected#testInstance1",
      "TestConnected#testInstance2",
      "AopWithoutAnnotationTest#testAOPAlterClassSpring",
      "AopWithoutAnnotationTest#testAOP",
      "AopWithoutAnnotationTest#testAOPAlterClass",
      "PlaceHolderTest#testPlaceholderWithinXMLFile",
      "PlaceHolderTest#testPlaceHolderWithAnnotation",
      "FF4JBeanPostProcessorTest#testFF4JTagOK",
      "FF4JBeanPostProcessorTest#testFF4JTagAuthorisationManager",
      "FF4JBeanPostProcessorTest#testFF4JTagEmpty",
      "WholeClassFlippingTest#testAOPClass",
      "SampleServiceFeatureTest#testAOP",
      "SpringJdbcXMLDataSourceStoreTest#testStoreHasBeenInitialized",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleToFeatureRoleDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyAddFixedValues",
      "SpringJdbcXMLDataSourceStoreTest#testReadAllGroup",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyRemoveFixedValues",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupFeatureDoeNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFlipLessAutorisation",
      "SpringJdbcXMLDataSourceStoreTest#testDeteleFeatureDoesnotExist",
      "SpringJdbcXMLDataSourceStoreTest#testEnableEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroup",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupFeatureEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleEmptyFeature",
      "SpringJdbcXMLDataSourceStoreTest#testDonotUpdateNullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFeatureMoreAutorisation",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleToFeatureFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateRemoveFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateRemoveProperty",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleNullRole",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleNullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testClear",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateAddProperty",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupFeatureNull",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupFeatureEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateNull",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFlipMoreAutorisationNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testExistGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testEnableFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testReadAllFeatures",
      "SpringJdbcXMLDataSourceStoreTest#testExistNull",
      "SpringJdbcXMLDataSourceStoreTest#testDisableFeature",
      "SpringJdbcXMLDataSourceStoreTest#testExistEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testExistGroup",
      "SpringJdbcXMLDataSourceStoreTest#testReadEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDonotDeleteEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testFeatureDoesNotExit",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleNullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testReadNull",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDisableEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroup",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroupDoesnotExist",
      "SpringJdbcXMLDataSourceStoreTest#testAddFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateAddFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleEmptyRole",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteRoleFeatureDoesNotExit",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteRoleToFeature",
      "SpringJdbcXMLDataSourceStoreTest#testCreateNull",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDonotDeleteNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveLastFeatureOfGroupDeleteGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDisableNull",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyValue",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteNull",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupEmpty",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupFeatureDoeNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDisableFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testReadNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFeatureCoreData",
      "SpringJdbcXMLDataSourceStoreTest#testEnableNull",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupFeatureNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupIfNotInGroup",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleNullRole",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testReadFullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveToGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroup",
      "SpringJdbcXMLDataSourceStoreTest#testAddFeatureAlreadyExis",
      "SpringJdbcXMLDataSourceStoreTest#testEnableFeature",
      "SpringJdbcXMLDataSourceStoreTest#testExistGroupNull",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleEmptyRole",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveRoleEmptyFeature",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroupEmpty"
    ],
    "distributed-redis-tool": [
      "RedisClusterLockTest#lock",
      "RedisClusterLockTest#tryLock",
      "RedisClusterLockTest#unlock",
      "RedisClusterLockTest#tryLockFalse",
      "RedisClusterLockTest#unlockFalse",
      "RedisClusterLockTest#lock2False",
      "RedisClusterLockTest#tryLock2",
      "RedisClusterLockTest#lock2",
      "RedisClusterLockTest#tryLock2False",
      "RedisLimitJedisClusterJunitTest#limit",
      "RedisLimitJedisClusterJunitTest#limitTrue"
    ],
    "nacos-spring-project": [
      "NacosPropertySourcePostProcessorTest#testFirstOrder",
      "NacosPropertySourcePostProcessorTest#testRelativeOrder",
      "CacheableNacosInjectedFactoryTest#testCreateConfigService",
      "CacheableNacosInjectedFactoryTest#testCreateNamingService",
      "NacosBeanUtilsTest#testBeans",
      "NacosBeanUtilsTest#testIsBeanDefinitionPresent",
      "CacheableEventPublishingNacosServiceFactoryTest#testGetNamingMaintainServices",
      "CacheableEventPublishingNacosServiceFactoryTest#testGetConfigServices",
      "CacheableEventPublishingNacosServiceFactoryTest#testGetNamingServices",
      "CacheableEventPublishingNacosServiceFactoryTest#testCreateConfigService",
      "CacheableEventPublishingNacosServiceFactoryTest#testCreateNamingService",
      "GlobalNacosPropertiesBeanDefinitionParserTest#test",
      "NacosNamespaceHandlerTest#testUser",
      "NacosNamespaceHandlerTest#testGetConfig",
      "NacosPropertySourceYamlTest#testValue",
      "NacosAnnotationDrivenBeanDefinitionParserTest#test",
      "EventPublishingConfigServiceTest#testGetConfigOnTimeout",
      "EventPublishingConfigServiceTest#testPublishConfigWithEvent",
      "EventPublishingConfigServiceTest#testRemoveListener",
      "EventPublishingConfigServiceTest#testAddListener",
      "EventPublishingConfigServiceTest#testRemoveConfigWithEvent",
      "EventPublishingConfigServiceTest#testGetProperties",
      "EventPublishingConfigServiceTest#testGetConfig",
      "NacosConfigurationPropertiesBindingPostProcessorTest#test",
      "NacosConfigBeanDefinitionRegistrarTest#testRegisterBeanDefinitions",
      "NacosBeanDefinitionRegistrarTest#testGetConfig",
      "NacosPropertySourceXmlTest#testValue",
      "NacosConfigListenerMethodProcessorTest#testPublishUser",
      "NacosConfigListenerMethodProcessorTest#testPublishConfig",
      "NacosPropertySourceJsonTest#testValue",
      "NacosPropertySourceBeanDefinitionParserTest#testGetConfig",
      "AnnotationNacosInjectedBeanPostProcessorTest#test",
      "AnnotationNacosInjectedBeanPostProcessorTest#testInjection",
      "NacosPropertySourceTest#testValue"
    ],
    "postgresql-embedded": [
      "TestMultipleInstance#itShouldAllowToRunTwoInstancesAtSameTime",
      "TestPostgresWithinSpringContext#testPostgresWithinSpring"
    ]
  },
  "org.apache.logging.log4j:log4j-slf4j-impl": {
    "servicecomb-pack": [
      "PushBackOmegaCallbackTest#pushFailedCallbackToEndOfQueue",
      "PushBackReconnectRunnableTest#pushFailedCallbackToEndOfQueue",
      "CoordinateMessageHandlerTest#sendsCompensatedEventOnCompensationCompleted",
      "GrpcTccClientMessageSenderTest#serviceOnEndParticipateTest",
      "GrpcTccClientMessageSenderTest#serviceOnTransactionEndTest",
      "GrpcTccClientMessageSenderTest#serviceOnStartParticipateTest",
      "GrpcTccClientMessageSenderTest#serviceOnConnectedTest",
      "GrpcTccClientMessageSenderTest#serviceOnTransactionStartTest",
      "GrpcTccClientMessageSenderTest#serviceOnCoordinateTest",
      "GrpcTccClientMessageSenderTest#serviceOnDisconnectedTest",
      "MemoryAlphaTccServerTest#assertOnSwitchOtherCallbackInstance",
      "MemoryAlphaTccServerTest#assertOnTccTransactionFailedEnded",
      "MemoryAlphaTccServerTest#assertOnConnect",
      "MemoryAlphaTccServerTest#assertOnTransactionStart",
      "MemoryAlphaTccServerTest#assertOnCallbackNotExist",
      "MemoryAlphaTccServerTest#assertOnCallbacksExecuteError",
      "MemoryAlphaTccServerTest#assertOnParticipated",
      "MemoryAlphaTccServerTest#assertOnTccTransactionSucceedEnded",
      "MemoryAlphaTccServerTest#assertOnDisConnect",
      "MemoryEventRegistryTest#testDeleteAll",
      "MemoryEventRegistryTest#testfindByUniqueKey",
      "MemoryEventRegistryTest#testfindAll",
      "MemoryEventRegistryTest#testFindByGlobalTxId",
      "MemoryEventRegistryTest#testfindByGlobalTxIdAndTxType",
      "AlphaIntegrationWithRandomPortTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#persistsEvent",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithRandomPortTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithRandomPortTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithRandomPortTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithRandomPortTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithRandomPortTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutSagaStartedEvent",
      "SagaLoadBalancedSenderTest#stopSendingOnInterruption",
      "SagaLoadBalancedSenderTest#blowsUpWhenServerIsInterrupted",
      "SagaLoadBalancedSenderTest#blowsUpWhenNoServerAddressProvided",
      "SagaLoadBalancedSenderTest#considerFasterServerFirst",
      "SagaLoadBalancedSenderTest#swallowException_UntilAllSendersConnected",
      "SagaLoadBalancedSenderTest#resendToAnotherServerOnFailure",
      "SagaLoadBalancedSenderTest#stopSendingWhenClusterIsDown",
      "SagaLoadBalancedSenderTest#resetLatencyOnReconnection",
      "SagaLoadBalancedSenderTest#swallowException_UntilAllSendersDisconnected",
      "SagaLoadBalancedSenderTest#broadcastConnectionAndDisconnection",
      "SagaLoadBalancedSenderTest#forwardSendResult",
      "AlphaTccEventControllerTest#retrievesEventsFromRepo",
      "AlphaIntegrationTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationTest#persistsEvent",
      "AlphaIntegrationTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationTest#getCompensateCommandOnFailure",
      "AlphaIntegrationTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationTest#closeStreamOnDisconnected",
      "AlphaIntegrationTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationTest#removeCallbackOnClientDown",
      "AlphaIntegrationTest#abortTimeoutSagaStartedEvent",
      "RdbAlphaTccServerTest#assertOnSwitchOtherCallbackInstance",
      "RdbAlphaTccServerTest#assertOnTccTransactionFailedEnded",
      "RdbAlphaTccServerTest#assertOnConnect",
      "RdbAlphaTccServerTest#assertOnTransactionStart",
      "RdbAlphaTccServerTest#assertOnCallbackNotExist",
      "RdbAlphaTccServerTest#assertOnCallbacksExecuteError",
      "RdbAlphaTccServerTest#assertOnParticipated",
      "RdbAlphaTccServerTest#assertOnTccTransactionSucceedEnded",
      "RdbAlphaTccServerTest#assertOnDisConnect",
      "TccTxEventServiceTest#handleTimeoutGlobalTraction",
      "TccTxEventServiceTest#clearUpCompletedTxFromGlobalTxTable",
      "TccTxEventServiceTest#onlyCoordinateParticipatedEventOnce",
      "TccTxEventServiceTest#clearUpCompletedTxFromGlobalTxTableMoreThanOne",
      "SagaStartAspectTest#newGlobalTxIdInSagaStart",
      "SagaStartAspectTest#clearContextOnSagaStartError",
      "ForwardRecoveryTest#forwardExceptionWhenGlobalTxAborted",
      "ForwardRecoveryTest#throwExceptionWhenRetryReachesMaximum",
      "ForwardRecoveryTest#keepRetryingTillInterrupted",
      "ClusterLockServiceTest#testSlaveNodeUpdateLockLater",
      "ClusterLockServiceTest#testSlaveNodeWhenDuplicateKey",
      "ClusterLockServiceTest#testMasterNode",
      "ClusterLockServiceTest#testSlaveNodeWhenInitLockException",
      "ClusterLockServiceTest#testSlaveNodeWhenUpdateLockException",
      "TccTxEventServiceTransactionTest#rollbackAfterSaveTccTxEventDbFailure",
      "TxConsistentServiceTest#skipTxStartedEvent_IfGlobalTxAlreadyFailed",
      "TxConsistentServiceTest#skipSagaEndedEvent_IfGlobalTxAlreadyFailed",
      "TxConsistentServiceTest#persistEventOnArrival",
      "TccParticipatorAspectTest#participateMethodIsCalledFailed",
      "TccParticipatorAspectTest#participateMethodIsCalledSuccessed",
      "SagaTransactionsControllerTest#findTransactionsTest",
      "SagaTransactionsControllerTest#getTransactionsTest",
      "SagaTransactionsControllerTest#getDashboardStats",
      "SagaTransactionsControllerTest#getRecentTransactionsTest",
      "AlphaIntegrationWithSSLTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithSSLTest#persistsEvent",
      "AlphaIntegrationWithSSLTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithSSLTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithSSLTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithSSLTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithSSLTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithSSLTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithSSLTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithSSLTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithSSLTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithSSLTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithSSLTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithSSLTest#abortTimeoutSagaStartedEvent",
      "TransactionAspectTest#restoreContextOnCompensableError",
      "TransactionAspectTest#retryReachesMaximumAndForwardException",
      "TransactionAspectTest#keepRetryingTillSuccess",
      "TransactionAspectTest#newLocalTxIdInCompensable",
      "CompositeOmegaCallbackTest#compensateOtherOmegaInstance_IfTheRequestedIsUnreachable",
      "CompositeOmegaCallbackTest#blowsUpIfNoSuchServiceIsReachable",
      "CompositeOmegaCallbackTest#removeCallbackOnException",
      "CompositeOmegaCallbackTest#blowsUpIfNoSuchServiceFound",
      "CompositeOmegaCallbackTest#compensateCorrespondingOmegaInstanceOnly",
      "CompensationMessageHandlerTest#sendsCompensatedEventOnCompensationCompleted",
      "DefaultRecoveryTest#recordRetryMethodWhenRetriesIsSet",
      "DefaultRecoveryTest#recordAbortedEventWhenFailed",
      "DefaultRecoveryTest#recordEndedEventWhenSuccess",
      "DefaultRecoveryTest#returnImmediatelyWhenReceivedRejectResponse",
      "TccCallbackEngineTest#sendCoordinateFailedForOmegaDown",
      "TccCallbackEngineTest#sendCoordinateCommandAfterTccEnd",
      "TccCallbackEngineTest#doRetryCoordinateTillOmegaReceived",
      "AlphaEventControllerTest#retrievesEventsFromRepo",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithoutSsl",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithoutSsl",
      "TccStartAspectTest#newGlobalTxIdInTccStart",
      "TccStartAspectTest#clearContextOnTccStartError",
      "SagaLoadBalanceSenderWithTLSTest#considerFasterServerFirst",
      "SagaLoadBalanceSenderWithTLSTest#broadcastConnectionAndDisconnection"
    ],
    "photon": [
      "PhotonRequestFactoryTest#testWithExcludeValueFilter",
      "PhotonRequestFactoryTest#testWithLocationBiasAndLimit",
      "PhotonRequestFactoryTest#testWithBadBias",
      "PhotonRequestFactoryTest#testWithExcludeTagFilter",
      "PhotonRequestFactoryTest#testWithIncludeTagFilter",
      "PhotonRequestFactoryTest#testWithoutLocationBias",
      "PhotonRequestFactoryTest#testWithBadLimit",
      "PhotonRequestFactoryTest#testWithBadQuery",
      "PhotonRequestFactoryTest#testWithExcludeKeyFilter",
      "PhotonRequestFactoryTest#testWithIncludeKeyFilter",
      "PhotonRequestFactoryTest#testWithIncludeValueFilter",
      "SearchRequestHandlerTest#testHandle",
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testFilterWithTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testTagNotTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testFilterWithoutTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyTourism",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testValueInformationButKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testKeyTourismButValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourism",
      "ReverseSearchRequestHandlerTest#testHandle",
      "NominatimConnectorTest#testConvertCountryCode",
      "TagFilterQueryBuilderTest#testFrenchConstructor",
      "TagFilterQueryBuilderTest#testConstructor",
      "ReverseRequestFactoryTest#testWithZeroLimit",
      "ReverseRequestFactoryTest#testWithLowLongitude",
      "ReverseRequestFactoryTest#testWithZeroRadius",
      "ReverseRequestFactoryTest#testWithNoLocation",
      "ReverseRequestFactoryTest#testHighRadius",
      "ReverseRequestFactoryTest#testWithHighLongitude",
      "ReverseRequestFactoryTest#testWithBadLocation",
      "ReverseRequestFactoryTest#testHighLimit",
      "ReverseRequestFactoryTest#testWithBadRadius",
      "ReverseRequestFactoryTest#testWithNegativeLimit",
      "ReverseRequestFactoryTest#testWithNegativeRadius",
      "ReverseRequestFactoryTest#testWithHighLatitude",
      "ReverseRequestFactoryTest#testWithLocation",
      "ReverseRequestFactoryTest#testWithLowLatitude",
      "ReverseRequestFactoryTest#testWithBadLimit",
      "ReverseRequestFactoryTest#testDistanceSortDefault"
    ],
    "sofa-tracer": [
      "LogTest#testLog4j2"
    ],
    "macrobase": [
      "MacroBaseSQLDistributedTest#testIngestFromCSV",
      "MacroBaseSQLDistributedTest#testDiffBasic",
      "MacroBaseSQLDistributedTest#testDiffSplit"
    ],
    "sentry-java": [
      "SentryAppenderCloseTest#testStopDoNotFailIfNoInit",
      "SentryAppenderCloseTest#testStopDoNotFailIfSentryNull",
      "SentryAppenderCloseTest#testStopDoNotFailWhenMultipleCalls",
      "SentryAppenderCloseTest#testConnectionClosedWhenAppenderStopped",
      "SentryAppenderEventBuildingTest#testSourceUsedAsStacktrace",
      "SentryAppenderEventBuildingTest#testMarkerAddedToTag",
      "SentryAppenderEventBuildingTest#testSimpleMessageLogging",
      "SentryAppenderEventBuildingTest#testExceptionLogging",
      "SentryAppenderEventBuildingTest#testNdcAddedToExtra",
      "SentryAppenderEventBuildingTest#testLogParametrisedMessage",
      "SentryAppenderEventBuildingTest#testMdcAddedToExtra",
      "SentryAppenderEventBuildingTest#testExtraTagObtainedFromMdc",
      "SentryAppenderFailuresTest#testAppendFailIfCurrentThreadSpawnedBySentry",
      "SentryAppenderFailuresTest#testSentryFailureDoesNotPropagate"
    ],
    "abixen-platform": [
      "JsonFilterServiceTest#initializationError",
      "SecurityServiceTest#initializationError",
      "UserServiceTest#initializationError",
      "LayoutServiceTest#initializationError"
    ]
  },
  "com.google.inject:guice": {
    "apollo": [
      "DefaultConfigFactoryManagerTest#testGetFactoryFromRegistry",
      "DefaultConfigFactoryManagerTest#testGetFactoryFromNamespace",
      "DefaultConfigFactoryManagerTest#testGetFactoryFromNamespaceMultipleTimes",
      "DefaultConfigFactoryManagerTest#testGetFactoryFromDefault",
      "JavaConfigPlaceholderTest#testPropertiesCompatiblePropertySourceWithNonNormalizedCase",
      "JavaConfigPlaceholderTest#testPropertySourceWithNoConfig",
      "JavaConfigPlaceholderTest#testMultiplePropertySourcesCoverWithSamePropertiesWithPropertiesCompatiblePropertySource",
      "JavaConfigPlaceholderTest#testPropertiesCompatiblePropertySource",
      "JavaConfigPlaceholderTest#testApplicationPropertySourceWithValueInjectedAsParameter",
      "JavaConfigPlaceholderTest#testMultiplePropertySourcesCoverWithSameProperties",
      "JavaConfigPlaceholderTest#testNestedProperty",
      "JavaConfigPlaceholderTest#testApplicationPropertySourceWithValueInjectedAsConstructorArgs",
      "JavaConfigPlaceholderTest#testMultiplePropertySources",
      "JavaConfigPlaceholderTest#testApplicationPropertySource",
      "JavaConfigPlaceholderTest#testApolloJsonValueWithNoPropertyValue",
      "JavaConfigPlaceholderTest#testApolloJsonValueWithInvalidJson",
      "JavaConfigPlaceholderTest#testNestedPropertyWithNestedDefaultValue",
      "JavaConfigPlaceholderTest#testMultipleNestedPropertyWithDefaultValue",
      "JavaConfigPlaceholderTest#testMultiplePropertiesCompatiblePropertySourcesWithSameProperties",
      "JavaConfigPlaceholderTest#testMultipleNestedProperty",
      "JavaConfigPlaceholderTest#testApolloJsonValue",
      "JavaConfigPlaceholderTest#testMultiplePropertySourcesWithSamePropertiesWithWeight",
      "JavaConfigPlaceholderTest#testNestedPropertyWithDefaultValue",
      "JavaConfigPlaceholderTest#testPropertySourceWithNoNamespace",
      "DefaultConfigManagerTest#testGetConfigFile",
      "DefaultConfigManagerTest#testGetConfigMultipleTimesWithSameNamespace",
      "DefaultConfigManagerTest#testGetConfig",
      "DefaultConfigManagerTest#testGetConfigFileMultipleTimesWithSameNamespace",
      "SimpleConfigTest#testOnRepositoryChange",
      "SimpleConfigTest#testLoadConfigFromConfigRepositoryError",
      "SimpleConfigTest#testGetProperty",
      "ApolloApplicationContextInitializerTest#testFillFromEnvironment",
      "ApolloApplicationContextInitializerTest#testFillFromEnvironmentWithNoPropertyFromEnvironment",
      "ApolloApplicationContextInitializerTest#testFillFromEnvironmentWithSystemPropertyAlreadyFilled",
      "ConfigServiceLocatorTest#testGetConfigServicesWithSystemProperty",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateJsonValueWithNoValueAndDefaultValue",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithNestedProperty",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithOneYamlFile",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateJsonValueWithNoValueAndNoDefaultValue",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithDeletedProperties",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithOneNamespace",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithValueInjectedAsConstructorArgs",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithNewPropertiesWithYamlFile",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithAllKindsOfDataTypes",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNamespacesWithSamePropertiesWithYamlFile",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithValueInjectedAsParameter",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithIrrelevantProperties",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithValueAndXmlProperty",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithNotSupportedNestedProperty",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithDeletedPropertiesWithNoDefaultValue",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNestedProperty",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithDeletedPropertiesWithYamlFile",
      "JavaConfigPlaceholderAutoUpdateTest#testApplicationPropertySourceWithValueInjectedInConfiguration",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNamespaces",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithNestedPropertyWithDefaultValue",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateDisabled",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateJsonValueWithInvalidValue",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithTypeMismatchWithYamlFile",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNamespacesWithSamePropertiesDeleted",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithInvalidSetter",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithYamlFileWithValueAndXmlProperty",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithTypeMismatch",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNamespacesWithSameProperties",
      "JavaConfigPlaceholderAutoUpdateTest#testAutoUpdateWithNewProperties",
      "DefaultConfigTest#testGetLongProperty",
      "DefaultConfigTest#testGetIntProperty",
      "DefaultConfigTest#testLoadFromRepositoryFailedAndThenRecovered",
      "DefaultConfigTest#testGetByteProperty",
      "DefaultConfigTest#testOnRepositoryChange",
      "DefaultConfigTest#testGetPropertyNamesWithNullProp",
      "DefaultConfigTest#testGetIntPropertyMultipleTimesWithCache",
      "DefaultConfigTest#testGetIntPropertyMultipleTimesWithShortExpireTime",
      "DefaultConfigTest#testGetFloatProperty",
      "DefaultConfigTest#testGetDoubleProperty",
      "DefaultConfigTest#testGetEnumProperty",
      "DefaultConfigTest#testGetArrayProperty",
      "DefaultConfigTest#testRemoveChangeListener",
      "DefaultConfigTest#testGetShortProperty",
      "DefaultConfigTest#testGetArrayPropertyMultipleTimesWithCacheAndValueChanges",
      "DefaultConfigTest#testGetPropertyWithFunction",
      "DefaultConfigTest#testGetDatePropertyWithFormat",
      "DefaultConfigTest#testGetIntPropertyMultipleTimesWithPropertyChanges",
      "DefaultConfigTest#testGetDatePropertyWithNoFormat",
      "DefaultConfigTest#testGetPropertyWithAllPropertyHierarchy",
      "DefaultConfigTest#testGetPropertyNames",
      "DefaultConfigTest#testGetBooleanProperty",
      "DefaultConfigTest#testGetArrayPropertyMultipleTimesWithCache",
      "DefaultConfigTest#testGetDurationProperty",
      "DefaultConfigTest#testGetIntPropertyMultipleTimesWithSmallCache",
      "DefaultConfigTest#testFireConfigChangeWithInterestedKeys",
      "DefaultConfigRegistryTest#testGetFactory",
      "DefaultConfigRegistryTest#testGetFactoryWithNamespaceUnregistered",
      "RemoteConfigLongPollServiceTest#testAssembleLongPollRefreshUrlWithMultipleNamespaces",
      "RemoteConfigLongPollServiceTest#testSubmitLongPollNamespaceWith304Response",
      "RemoteConfigLongPollServiceTest#testSubmitLongPollMultipleNamespacesWithMultipleNotificationsReturned",
      "RemoteConfigLongPollServiceTest#testSubmitLongPollNamespaceWithMessagesUpdated",
      "RemoteConfigLongPollServiceTest#testSubmitLongPollNamespaceWith200Response",
      "RemoteConfigLongPollServiceTest#testAssembleLongPollRefreshUrl",
      "RemoteConfigLongPollServiceTest#testSubmitLongPollMultipleNamespaces",
      "LocalFileConfigRepositoryTest#testLoadConfigWithNoLocalFile",
      "LocalFileConfigRepositoryTest#testOnRepositoryChange",
      "LocalFileConfigRepositoryTest#testLoadConfigWithLocalFileAndFallbackRepo",
      "LocalFileConfigRepositoryTest#testLoadConfigWithNoLocalFileMultipleTimes",
      "LocalFileConfigRepositoryTest#testLoadConfigWithLocalFile",
      "XMLConfigAnnotationTest#testApolloConfigChangeListenerWithWrongParamType",
      "XMLConfigAnnotationTest#testApolloConfigWithWrongFieldType",
      "XMLConfigAnnotationTest#testApolloConfigChangeListenerWithWrongParamCount",
      "XMLConfigAnnotationTest#testApolloConfigChangeListenerWithInterestedKeys",
      "XMLConfigAnnotationTest#testApolloConfigChangeListener",
      "XMLConfigAnnotationTest#testApolloConfig",
      "DefaultConfigFactoryTest#testCreateLocalConfigRepositoryInLocalDev",
      "DefaultConfigFactoryTest#testDetermineFileFormat",
      "DefaultConfigFactoryTest#testCreate",
      "DefaultConfigFactoryTest#testCreateConfigFile",
      "DefaultConfigFactoryTest#testCreatePropertiesCompatibleFileConfigRepository",
      "DefaultConfigFactoryTest#testTrimNamespaceFormat",
      "RemoteConfigRepositoryTest#testAssembleQueryConfigUrl",
      "RemoteConfigRepositoryTest#testLoadConfig",
      "RemoteConfigRepositoryTest#testGetRemoteConfigWithServerError",
      "RemoteConfigRepositoryTest#testLongPollingRefresh",
      "RemoteConfigRepositoryTest#testRepositoryChangeListener",
      "YamlConfigFileTest#testOnRepositoryChange",
      "YamlConfigFileTest#testWhenHasContent",
      "YamlConfigFileTest#testWhenHasNoContent",
      "YamlConfigFileTest#testWhenConfigRepositoryHasError",
      "YamlConfigFileTest#testWhenInvalidYamlContent",
      "YamlConfigFileTest#testWhenConfigRepositoryHasErrorAndThenRecovered",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithDeletedProperties",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithOneNamespace",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithValueInjectedAsConstructorArgs",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithAllKindsOfDataTypes",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithIrrelevantProperties",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithDeletedPropertiesWithNoDefaultValue",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNamespaces",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateDisabled",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNamespacesWithSamePropertiesDeleted",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithTypeMismatch",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithMultipleNamespacesWithSameProperties",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithNewProperties",
      "XmlConfigPlaceholderAutoUpdateTest#testAutoUpdateWithValueAndProperty",
      "ConfigServiceTest#testMockConfigFactory",
      "ConfigServiceTest#testHackConfigFactory",
      "ConfigServiceTest#testHackConfig",
      "ConfigServiceTest#testMockConfigFactoryForConfigFile",
      "ConfigIntegrationTest#testGetConfigWithNoLocalFileAndRemoteMetaServiceRetry",
      "ConfigIntegrationTest#testGetConfigWithLocalFileAndWithRemoteConfig",
      "ConfigIntegrationTest#testLongPollRefresh",
      "ConfigIntegrationTest#testRefreshConfig",
      "ConfigIntegrationTest#testGetConfigWithLocalFileAndRemoteConfigError",
      "ConfigIntegrationTest#testGetConfigWithNoLocalFileAndRemoteConfigServiceRetry",
      "ConfigIntegrationTest#testGetConfigWithNoLocalFileAndRemoteConfigError",
      "ConfigIntegrationTest#testLongPollRefreshWithMultipleNamespacesAndMultipleNamespaceNotified",
      "ConfigIntegrationTest#testLongPollRefreshWithMultipleNamespacesAndOnlyOneNamespaceNotified",
      "ConfigIntegrationTest#testGetConfigWithNoLocalFileButWithRemoteConfig",
      "JavaConfigAnnotationTest#testApolloConfigChangeListenerWithWrongParamType",
      "JavaConfigAnnotationTest#testApolloConfigWithWrongFieldType",
      "JavaConfigAnnotationTest#testApolloConfigChangeListenerWithWrongParamCount",
      "JavaConfigAnnotationTest#testApolloConfigWithInheritance",
      "JavaConfigAnnotationTest#testApolloConfigChangeListenerWithInterestedKeys",
      "JavaConfigAnnotationTest#testApolloConfigChangeListenerWithYamlFile",
      "JavaConfigAnnotationTest#testApolloConfigChangeListener",
      "JavaConfigAnnotationTest#testApolloConfig",
      "JavaConfigAnnotationTest#testApolloConfigChangeListenerWithInheritance",
      "XmlConfigPlaceholderTest#testMultiplePropertySourcesWithSameProperties",
      "XmlConfigPlaceholderTest#testPropertySourceWithNoConfig",
      "XmlConfigPlaceholderTest#testMultiplePropertySources",
      "XmlConfigPlaceholderTest#testWithInvalidWeight",
      "XmlConfigPlaceholderTest#testApplicationPropertySource",
      "XmlConfigPlaceholderTest#testMultiplePropertySourcesWithSameProperties2",
      "XmlConfigPlaceholderTest#testMultiplePropertySourcesWithSamePropertiesWithWeight",
      "XmlConfigPlaceholderTest#testPropertySourceWithNoNamespace"
    ],
    "jmxtrans": [
      "GraphiteWriterFactoryTest#timedSocketExpirationIsUsedWhenConfigured",
      "GraphiteWriterFactoryTest#socketExpirationIsUsedByDefault",
      "GraphiteWriterFactoryTest#use_tcp_protocol_by_default",
      "GraphiteWriterFactoryTest#canParseConfigurationFileWithCustomParameters",
      "GraphiteWriterFactoryTest#writer_using_udp_protocol",
      "ProcessConfigUtilsTest#loadingFromSimpleYamlFile",
      "ProcessConfigUtilsTest#loadingFromJsonFileWithVariables",
      "ProcessConfigUtilsTest#loadingFromSimpleJsonFile",
      "ProcessConfigUtilsTest#loadingFromYamlFileWithVariables",
      "ConfigurationParserTest#mixJsonAndYamlFormats",
      "ConfigurationParserTest#failParsingOnErrorIfRequested",
      "ConfigurationParserTest#testMerge",
      "ConfigurationParserTest#sameServerWithTwoDifferentQueriesMergesQueries",
      "ConfigurationParserTest#continueParsingOnErrorIfRequested",
      "ConfigurationParserTest#mergeAlreadyExistingServerDoesNotModifyList",
      "InfluxDbWriterTests#loadingFromFile"
    ],
    "wasabi": [
      "CassandraFeedbackRepositoryTest#testGetUserFeedbackSuccess",
      "CassandraFeedbackRepositoryTest#testGetAllUserFeedbackSuccess",
      "CassandraFeedbackRepositoryTest#testCreateFeedbackThrowsException",
      "CassandraFeedbackRepositoryTest#testCreateFeedbackSuccess",
      "FeedbackImplTest#testCreateUserFeedback",
      "DatabaseModuleTest#testProviderCP",
      "DefaultAuthenticationTest#testGetUserExists",
      "DefaultAuthenticationTest#testBadPasswordLogIn",
      "DefaultAuthenticationTest#testLogIn",
      "DefaultAuthenticationTest#testVerifyBadTokenWithTamperedPassword",
      "DefaultAuthenticationTest#testGoodPasswordLogIn",
      "DefaultAuthenticationTest#testGetNullUserExists",
      "DefaultAuthenticationTest#testVerifyBadToken",
      "DefaultAuthenticationTest#testLogOut",
      "DefaultAuthenticationTest#testVerifyToken",
      "AuditLogModuleTest#testConfigure",
      "AuditLogModuleTest#testConfigureFailListener",
      "AuditLogModuleTest#testConfigureFailImpl",
      "AuthenticationModuleTest#testOk",
      "AuthenticationModuleTest#testClassNotFound",
      "EmailModuleTest#testClassNotFound"
    ],
    "allure1": [
      "AllureReportGeneratorTest#shouldFailIfNoResults",
      "AllureReportGeneratorTest#shouldGenerateWithoutFailures",
      "AllureReportGeneratorTest#shouldFailIfNoResultsDirectory",
      "PluginsIndexTest#shouldBeSingleton"
    ],
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser",
      "AlertServiceTest#testCountSharedAlertsMetaPaged"
    ]
  },
  "org.mongodb:mongo-java-driver": {
    "querydsl": [
      "MongodbSerializerTest#equals",
      "MongodbSerializerTest#regexCases"
    ],
    "ff4j": [
      "FeatureStoreMongoCollectionCore1Test#testDeteleFeatureDoesnotExist",
      "FeatureStoreMongoCollectionCore1Test#testEnableEmpty",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroup",
      "FeatureStoreMongoCollectionCore1Test#testStoreHasBeenInitialized",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupFeatureEmpty",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleEmptyFeature",
      "FeatureStoreMongoCollectionCore1Test#testDonotUpdateNullFeature",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFeatureMoreAutorisation",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleToFeatureFeatureDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateRemoveFlippingStrategy",
      "FeatureStoreMongoCollectionCore1Test#testReadGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testUpdateRemoveProperty",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditFlippingStrategy",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleNullRole",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleNullFeature",
      "FeatureStoreMongoCollectionCore1Test#testClear",
      "FeatureStoreMongoCollectionCore1Test#testUpdateAddProperty",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupFeatureNull",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupFeatureEmpty",
      "FeatureStoreMongoCollectionCore1Test#testUpdateNull",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFlipMoreAutorisationNotExist",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleToFeatureRoleDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testExistGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testEnableFeatureDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testReadAllFeatures",
      "FeatureStoreMongoCollectionCore1Test#testExistNull",
      "FeatureStoreMongoCollectionCore1Test#testDisableFeature",
      "FeatureStoreMongoCollectionCore1Test#testExistEmpty",
      "FeatureStoreMongoCollectionCore1Test#testExistGroup",
      "FeatureStoreMongoCollectionCore1Test#testReadEmpty",
      "FeatureStoreMongoCollectionCore1Test#testReadGroup",
      "FeatureStoreMongoCollectionCore1Test#testDonotDeleteEmpty",
      "FeatureStoreMongoCollectionCore1Test#testFeatureDoesNotExit",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleNullFeature",
      "FeatureStoreMongoCollectionCore1Test#testReadNull",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroup",
      "FeatureStoreMongoCollectionCore1Test#testDisableEmpty",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroup",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testReadGroupDoesnotExist",
      "FeatureStoreMongoCollectionCore1Test#testAddFeature",
      "FeatureStoreMongoCollectionCore1Test#testUpdateAddFlippingStrategy",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleEmptyRole",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroupDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testDeleteRoleFeatureDoesNotExit",
      "FeatureStoreMongoCollectionCore1Test#testDeleteRoleToFeature",
      "FeatureStoreMongoCollectionCore1Test#testCreateNull",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroupDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testDonotDeleteNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveLastFeatureOfGroupDeleteGroup",
      "FeatureStoreMongoCollectionCore1Test#testDisableNull",
      "FeatureStoreMongoCollectionCore1Test#testDeleteFeature",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditPropertyValue",
      "FeatureStoreMongoCollectionCore1Test#testReadGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testDeleteNull",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupFeatureDoeNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditPropertyAddFixedValues",
      "FeatureStoreMongoCollectionCore1Test#testDisableFeatureDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testReadNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFeatureCoreData",
      "FeatureStoreMongoCollectionCore1Test#testEnableNull",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupFeatureNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroupIfNotInGroup",
      "FeatureStoreMongoCollectionCore1Test#testReadAllGroup",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleNullRole",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroupDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditPropertyRemoveFixedValues",
      "FeatureStoreMongoCollectionCore1Test#testReadFullFeature",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroupFeatureDoeNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFlipLessAutorisation",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroup",
      "FeatureStoreMongoCollectionCore1Test#testAddFeatureAlreadyExis",
      "FeatureStoreMongoCollectionCore1Test#testEnableFeature",
      "FeatureStoreMongoCollectionCore1Test#testExistGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleEmptyRole",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleEmptyFeature",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroupEmpty",
      "PropertyStoreMongoCollectionCore1Test#testInit",
      "PropertyStoreMongoCollectionCore1Test#updateKOdoesnotExist",
      "PropertyStoreMongoCollectionCore1Test#addPropertyOKLogLevel",
      "PropertyStoreMongoCollectionCore1Test#deleteKOempty",
      "PropertyStoreMongoCollectionCore1Test#updateKOnull",
      "PropertyStoreMongoCollectionCore1Test#deleteKOdoesnotexist",
      "PropertyStoreMongoCollectionCore1Test#existKOEmpty",
      "PropertyStoreMongoCollectionCore1Test#deleteKOnull",
      "PropertyStoreMongoCollectionCore1Test#readOK",
      "PropertyStoreMongoCollectionCore1Test#updateKOInvalidValue",
      "PropertyStoreMongoCollectionCore1Test#updateKOPropertyNotFound",
      "PropertyStoreMongoCollectionCore1Test#readKOnull",
      "PropertyStoreMongoCollectionCore1Test#updateOKProperties",
      "PropertyStoreMongoCollectionCore1Test#clear",
      "PropertyStoreMongoCollectionCore1Test#addPropertyKONull",
      "PropertyStoreMongoCollectionCore1Test#existfalse",
      "PropertyStoreMongoCollectionCore1Test#readAllProperties",
      "PropertyStoreMongoCollectionCore1Test#addPropertyOKDate",
      "PropertyStoreMongoCollectionCore1Test#deleteOK",
      "PropertyStoreMongoCollectionCore1Test#listPropertyNames",
      "PropertyStoreMongoCollectionCore1Test#existKONull",
      "PropertyStoreMongoCollectionCore1Test#updateKONullBis",
      "PropertyStoreMongoCollectionCore1Test#readOKFixed",
      "PropertyStoreMongoCollectionCore1Test#updateOK",
      "PropertyStoreMongoCollectionCore1Test#updateKOempty",
      "PropertyStoreMongoCollectionCore1Test#addPropertyKOAlreadyExist",
      "PropertyStoreMongoCollectionCore1Test#existfilled",
      "PropertyStoreMongoCollectionCore1Test#readKOnotExist",
      "PropertyStoreMongoCollectionCore1Test#addPropertyOKsimple",
      "PropertyStoreMongoCollectionCore1Test#valueFixed",
      "PropertyStoreMongoCollectionCore1Test#readKOempty"
    ],
    "togglz": [
      "MongoStateRepositoryTest#testInsertAndUpdate"
    ],
    "jongo": [
      "JacksonProjectionTest#canCreateQueryForPOJO",
      "JacksonProjectionTest#canCreateQueryForPOJOWithSuperType",
      "JacksonProjectionTest#shouldHonorJacksonAnnotations",
      "BsonQueryFactoryTest#shouldBindANestedKeyParameter"
    ],
    "DotCi": [
      "DynamicProjectRepositoryTest#should_save_or_update_a_project",
      "DynamicProjectRepositoryTest#should_check_if_a_project_exists",
      "DynamicProjectRepositoryTest#should_find_project_for_a_url",
      "DynamicProjectRepositoryTest#should_find_its_children",
      "DynamicProjectRepositoryTest#should_find_a_child",
      "DynamicProjectRepositoryTest#should_create_a_new_project",
      "DynamicProjectRepositoryTest#should_delete_a_project",
      "DynamicProjectRepositoryTest#should_find_a_project_by_id",
      "GithubAccessTokenRepositoryTest#should_find_access_tokens_by_url",
      "GithubAccessTokenRepositoryTest#should_find_associated_login_by_url",
      "MongoRepositoryTest#should_save_a_project",
      "MongoRepositoryTest#should_save_mixed_type_lists"
    ]
  },
  "com.h2database:h2": {
    "apollo": [
      "AdminServiceTransactionTest#modifyDatabaseWithinTransaction",
      "ClusterServiceTest#testCreateDuplicateCluster",
      "ControllerIntegrationExceptionTest#testCreateFailed",
      "ItemSetControllerTest#testItemSetUpdated",
      "ItemSetControllerTest#testItemSetCreated",
      "ItemSetControllerTest#testItemSetDeleted",
      "ClusterControllerTest#testDeleteSuccess",
      "ClusterControllerTest#shouldFailWhenRequestBodyInvalid",
      "ClusterControllerTest#testDeleteDefaultFail",
      "AppNamespaceControllerTest#testCreate",
      "NotificationControllerV2IntegrationTest#testPollNotificationWthMultipleNamespacesAndMultipleNamespacesChanged",
      "NotificationControllerV2IntegrationTest#testPollNotificationWthPublicNamespaceAsFile",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultipleNamespacesAndNotificationIdsOutDatedAndIncorrectCase",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultiplePublicNamespaceWithIncorrectCase2WithNotificationIdOutDated",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultipleNamespacesAndIncorrectCase",
      "NotificationControllerV2IntegrationTest#testPollNotificationWthPublicNamespaceAndDataCenter",
      "NotificationControllerV2IntegrationTest#testPollNotificationWthPublicNamespaceAndNoDataCenter",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultiplePublicNamespaceWithIncorrectCase3WithNotificationIdOutDated",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultiplePublicNamespaceWithIncorrectCaseWithNotificationIdOutDated",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithPrivateNamespaceAsFile",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultipleNamespaces",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultiplePublicNamespaceWithIncorrectCase4WithNotificationIdOutDated",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithDefaultNamespace",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithPublicNamespaceWithNotificationIdOutDated",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithDefaultNamespaceWithNotificationIdOutDated",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithMultipleNamespacesAndNotificationIdsOutDated",
      "NotificationControllerV2IntegrationTest#testPollNotificationWithDefaultNamespaceAsFile",
      "RolePermissionServiceTest#testQueryUsersWithRole",
      "RolePermissionServiceTest#testCreateRoleWithPermissions",
      "RolePermissionServiceTest#testCreatePermissionWithPermissionExisted",
      "RolePermissionServiceTest#testRemoveRoleFromUsers",
      "RolePermissionServiceTest#testAssignRoleToUsers",
      "RolePermissionServiceTest#testAssignRoleToUsersWithUserRolesExisted",
      "RolePermissionServiceTest#testUserHasPermission",
      "RolePermissionServiceTest#testRemoveRoleFromUsersWithRoleNotExisted",
      "RolePermissionServiceTest#testCreatePermissionsWithPermissionsExisted",
      "RolePermissionServiceTest#testCreateRoleWithPermissionsWithRoleExisted",
      "AppControllerTest#testFindNotExist",
      "AppControllerTest#testCreateTwice",
      "AppControllerTest#testFind",
      "AppControllerTest#testCheckIfAppIdUnique",
      "AppControllerTest#shouldFailedWhenAppIdIsInvalid",
      "AppControllerTest#testCreate",
      "AppControllerTest#testDelete",
      "ConsumerRolePermissionServiceTest#testConsumerHasPermission",
      "InstanceServiceTest#testFindInstancesByNamespaceAndInstanceAppId",
      "InstanceServiceTest#testFindActiveInstanceConfigs",
      "InstanceServiceTest#testFindInstancesByIds",
      "InstanceServiceTest#testFindInstanceConfigsByNamespaceWithReleaseKeysNotIn",
      "InstanceServiceTest#testCreateAndFindInstanceConfig",
      "InstanceServiceTest#testFindInstancesByNamespace",
      "InstanceServiceTest#testCreateAndFindInstance",
      "AppNamespaceRepositoryTest#testFindByNameAndNoPublicNamespace",
      "AppNamespaceRepositoryTest#testFindByNameAndIsPublicTrue",
      "NamespaceServiceIntegrationTest#testDeleteNamespace",
      "ConfigControllerIntegrationTest#testQueryConfigFileWithDefaultClusterAndDefaultNamespaceOK",
      "ConfigControllerIntegrationTest#testQueryPublicConfigWithDataCenterNotFoundAndOverride",
      "ConfigControllerIntegrationTest#testQueryPublicConfigWithIncorrectCaseAndDataCenterFoundAndOverride",
      "ConfigControllerIntegrationTest#testQueryConfigError",
      "ConfigControllerIntegrationTest#testQueryConfigWithDefaultClusterAndDefaultNamespaceOK",
      "ConfigControllerIntegrationTest#testQueryConfigWithDefaultClusterAndDefaultNamespaceAndIncorrectCase",
      "ConfigControllerIntegrationTest#testQueryConfigNotModified",
      "ConfigControllerIntegrationTest#testQueryPublicConfigWithDataCenterNotFoundAndNoOverride",
      "ConfigControllerIntegrationTest#testQueryPrivateConfigFileWithPublicNamespaceExists",
      "ConfigControllerIntegrationTest#testQueryGrayConfigWithDefaultClusterAndDefaultNamespaceOK",
      "ConfigControllerIntegrationTest#testQueryPublicConfigForNoAppIdPlaceHolder",
      "ConfigControllerIntegrationTest#testQueryPublicConfigWithDataCenterFoundAndNoOverride",
      "ConfigControllerIntegrationTest#testQueryPublicConfigWithDataCenterFoundAndOverride",
      "ConfigControllerIntegrationTest#testQueryConfigWithNamespaceOK",
      "ConfigControllerIntegrationTest#testQueryConfigFileWithNamespaceOK",
      "ConfigControllerIntegrationTest#testQueryPublicGrayConfigWithIncorrectCaseAndOverride",
      "ConfigControllerIntegrationTest#testQueryPublicGrayConfigWithOverride",
      "ConfigControllerIntegrationTest#testQueryPublicGrayConfigWithNoOverride",
      "ConfigControllerIntegrationTest#testQueryGrayConfigWithDefaultClusterAndDefaultNamespaceAndIncorrectCase",
      "ConfigControllerIntegrationTest#testQueryConfigForNoAppIdPlaceHolderWithPrivateNamespace",
      "NamespaceControllerTest#create",
      "InstanceConfigRepositoryTest#shouldPaginated",
      "AppNamespaceServiceTest#testCreatePrivateAppNamespaceExisted",
      "AppNamespaceServiceTest#testCreatePublicAppNamespaceNotExisted",
      "AppNamespaceServiceTest#testCreatePrivateAppNamespaceExistedInAnotherAppId",
      "AppNamespaceServiceTest#testFindPublicAppNamespaceByName",
      "AppNamespaceServiceTest#testCreatePublicAppNamespaceExistedWithNoAppendnamespacePrefix",
      "AppNamespaceServiceTest#testFindPublicAppNamespace",
      "AppNamespaceServiceTest#testCreatePrivateAppNamespaceNotExisted",
      "AppNamespaceServiceTest#testCreatePrivateAppNamespaceExistedInAnotherAppIdAsPublic",
      "AppNamespaceServiceTest#testCreatePublicAppNamespaceNotExistedWithNoAppendnamespacePrefix",
      "AppNamespaceServiceTest#testCreatePublicAppNamespaceExistedAsPrivateAppNamespace",
      "AppNamespaceServiceTest#testFindPublicAppNamespaceByAppAndName",
      "AppNamespaceServiceTest#testCreatePublicAppNamespaceExisted",
      "AppRepositoryTest#testCreate",
      "AppRepositoryTest#testRemove",
      "ConfigFileControllerIntegrationTest#testQueryPublicConfigAsJsonWithIncorrectCase",
      "ConfigFileControllerIntegrationTest#testQueryConfigAsJsonWithIncorrectCase",
      "ConfigFileControllerIntegrationTest#testQueryConfigAsPropertiesWithGrayRelease",
      "ConfigFileControllerIntegrationTest#testQueryConfigAsJson",
      "ConfigFileControllerIntegrationTest#testQueryPublicConfigAsJson",
      "ConfigFileControllerIntegrationTest#testQueryPublicConfigAsJsonWithGrayReleaseAndIncorrectCase",
      "ConfigFileControllerIntegrationTest#testQueryPublicConfigAsJsonWithGrayRelease",
      "ConfigFileControllerIntegrationTest#testQueryPublicConfigAsProperties",
      "ConfigFileControllerIntegrationTest#testQueryConfigAsProperties",
      "ConfigFileControllerIntegrationTest#testConfigChanged",
      "NamespaceBranchServiceTest#testUpdateRulesReleaseIdWithOldRuleExist",
      "NamespaceBranchServiceTest#testFindBranch",
      "NamespaceBranchServiceTest#testDeleteBranch",
      "NamespaceBranchServiceTest#testUpdateBranchGrayRulesWithUpdateOnce",
      "NamespaceBranchServiceTest#testUpdateBranchGrayRulesWithUpdateTwice",
      "NamespaceBranchServiceTest#testUpdateRulesReleaseIdWithOldRuleNotExist",
      "ReleaseCreationTest#testPublishNormalNamespace",
      "ReleaseCreationTest#testPublishBranch",
      "ReleaseCreationTest#testPublishMasterNamespaceAndBranchHasNotItems",
      "ReleaseCreationTest#testPublishBranchAtFirstTime",
      "ReleaseCreationTest#testModifyMasterNamespaceItemsAndBranchAlsoModify",
      "ReleaseCreationTest#testRollback",
      "ReleaseCreationTest#testPublishMasterNamespaceAndBranchHasItems",
      "NotificationControllerIntegrationTest#testPollNotificationWthPublicNamespaceAsFile",
      "NotificationControllerIntegrationTest#testPollNotificationWthPublicNamespaceAndDataCenter",
      "NotificationControllerIntegrationTest#testPollNotificationWthPublicNamespaceAndNoDataCenter",
      "NotificationControllerIntegrationTest#testPollNotificationWithPrivateNamespaceAsFile",
      "NotificationControllerIntegrationTest#testPollNotificationWithDefaultNamespace",
      "NotificationControllerIntegrationTest#testPollNotificationWithPublicNamespaceWithNotificationIdOutDated",
      "NotificationControllerIntegrationTest#testPollNotificationWithDefaultNamespaceWithNotificationIdOutDated",
      "NotificationControllerIntegrationTest#testPollNotificationWithDefaultNamespaceWithNotificationIdNull",
      "NotificationControllerIntegrationTest#testPollNotificationWithDefaultNamespaceAsFile",
      "ReleaseControllerTest#testMessageSendAfterBuildRelease",
      "ReleaseControllerTest#testReleaseBuild",
      "ServerConfigControllerTest#shouldSuccessWhenParameterValid",
      "AdminServiceTest#testCreateNewApp",
      "AdminServiceTest#testDeleteApp",
      "AdminServiceTest#testCreateDuplicateApp"
    ],
    "ebean": [
      "TestNewTypes#test_localDate_pre1900",
      "TestSqlUpdateUpsert#h2Merge"
    ],
    "rxjava-jdbc": [
      "DatabaseSyncTest#testReturnGeneratedKeysForMultipleInsertedValuesInOneStatement",
      "DatabaseAsyncTest#testReturnGeneratedKeysForMultipleInsertedValuesInOneStatement",
      "DatabaseViaDataSourceTest#testReturnGeneratedKeysForMultipleInsertedValuesInOneStatement"
    ],
    "sofa-tracer": [
      "RestTemplateTest#testRestTemplate",
      "AsyncRestTemplateTest#testAsyncRestTemplate"
    ]
  },
  "org.springframework:spring-webmvc": {
    "rest-assured": [
      "GetTest#unnamed_path_params_works",
      "CookieTest#can_send_cookie_using_cookie_class",
      "CookieTest#can_send_cookies_using_cookies_class",
      "CookieTest#can_send_multiple_cookies",
      "CookieTest#can_receive_cookies",
      "CookieTest#can_send_cookie_using_cookie_name_and_value",
      "CookieTest#can_send_cookies_using_map",
      "MockMvcStaticRequestAndResponseSpecTest#response_validation_fails_if_any_property_in_the_response_is_not_valid",
      "MockMvcStaticRequestAndResponseSpecTest#response_validation_kicks_in_even_when_no_then_clause_is_specified",
      "MockMvcStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "AttributeTest#can_send_attribute_using_attribute_name_and_value",
      "AttributeTest#can_send_attributes_using_map",
      "MockMvcResponseStatusTest#can_use_spring_http_status_for_status_matching",
      "MockMvcResponseStatusTest#can_use_integer_value_for_status_code_matching",
      "MockMvcResponseStatusTest#can_use_hamcrest_matcher_for_status_code_matching",
      "BasePathTest#base_path_can_end_with_slash_and_path_doesnt_have_to_begin_with_slash",
      "BasePathTest#base_path_doesnt_have_to_end_with_slash_even_though_path_doesnt_begin_with_slash2",
      "BasePathTest#default_base_path_is_slash",
      "BasePathTest#base_path_is_prepended_to_path",
      "BasePathTest#double_slashes_are_prevented",
      "ResultMatcherTest#unnamed_path_params_works",
      "ScalaMockMvcTest#implicit_conversion_works_when_using_the_spring_mock_mvc_module",
      "MockMvcMatcherConfigTest#response_message_is_formatted_with_hamcrest_description_type",
      "MockMvcMatcherConfigTest#response_message_is_formatted_with_rest_assured_description_type",
      "MockMvcResponseAwareMatcherTest#can_use_custom_matcher_for_response_aware_matching",
      "MockMvcResponseAwareMatcherTest#can_use_predefined_matcher_for_response_aware_matching",
      "MockMvcResponseTimeTest#can_extract_response_time_in_mock_mvc_extension",
      "MockMvcResponseTimeTest#can_use_response_time_validation_in_mock_mvc_extension",
      "RestDocsTest#path_parameters_are_automatically_supported",
      "RestDocsTest#can_disable_automatic_spring_rest_docks_mvc_support",
      "ContentTypeTest#doesnt_add_default_charset_to_content_type_if_configured_not_to_do_so",
      "ContentTypeTest#adds_specific_charset_to_content_type_by_default",
      "ContentTypeTest#adds_default_charset_to_content_type_by_default",
      "ContentTypeTest#doesnt_duplication_of_content_type",
      "ContentTypeTest#doesnt_add_default_charset_to_content_type_if_charset_is_defined_explicitly",
      "ContentTypeTest#doesnt_duplication_of_content_type_with_default_charset",
      "GreetingControllerVanillaMockMvcTest#mock_mvc_example_for_get_greeting_controller",
      "GreetingControllerVanillaMockMvcTest#mock_mvc_example_for_post_greeting_controller",
      "SecuredControllerTest#statically_defined_auth_has_precedence_over_statically_defined_request_spec",
      "SecuredControllerTest#spring_security_authentication_authentication_works",
      "SecuredControllerTest#spring_security_set_authentication_also_set_principal",
      "SecuredControllerTest#spring_context_holder_is_cleared_after_test",
      "SecuredControllerTest#spring_security_principal_authentication_works",
      "SecuredControllerTest#dsl_defined_defined_request_spec_may_include_auth",
      "SecuredControllerTest#can_override_static_auth_config_with_none",
      "SecuredControllerTest#statically_defined_defined_request_spec_may_include_auth",
      "SecuredControllerTest#statically_defined_authentication_works",
      "SecuredControllerTest#javax_principal_authentication_works",
      "SecuredControllerTest#spring_context_holder_is_cleared_after_failed_test_when_auth_is_statically_defined",
      "SecuredControllerTest#spring_context_holder_is_cleared_after_failed_test",
      "MockHttpServletRequestBuilderInterceptorTest#mock_http_servlet_request_builder_interceptor_works",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_using_static_response_and_request_specs_declared_before_enable_logging",
      "LoggingIfValidationFailsTest#logging_is_applied_when_using_non_static_response_specifications",
      "LoggingIfValidationFailsTest#doesnt_log_if_request_or_response_when_validation_succeeds_when_request_and_response_logging_if_validation_fails_is_enabled",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_configured_with_log_detail",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails",
      "MockMvcNonStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "MockMvcRequestSpecificationMergingTest#logging_is_not_overwritten_when_not_defined_in_specification",
      "MockMvcRequestSpecificationMergingTest#logging_is_overwritten_when_defined_in_specification",
      "MockMvcRequestSpecificationMergingTest#mock_mvc_instance_is_overwritten_when_defined_in_specification",
      "MockMvcRequestSpecificationMergingTest#mock_mvc_factory_is_not_overwritten_when_not_defined_in_specification",
      "ParserTest#using_static_parser_its_possible_to_parse_unknown_content_types",
      "ParserTest#using_non_static_parser_its_possible_to_parse_unknown_content_types",
      "MockMvcPathParamTest#unnamed_path_param_works",
      "RequestLoggingTest#doesnt_log_if_request_validation_succeeds_when_request_logging_if_validation_fails_is_enabled",
      "RequestLoggingTest#logging_query_param_works",
      "RequestLoggingTest#logging_form_param_works",
      "RequestLoggingTest#logging_param_works",
      "RequestLoggingTest#logging_if_request_validation_fails_works",
      "RequestLoggingTest#base_path_is_prepended_to_path_when_logging",
      "RequestLoggingTest#can_supply_string_as_body_for_post",
      "MockMvcRequestMethodTest#request_method_accepts_string_verb",
      "MockMvcRequestMethodTest#throws_iae_when_http_verb_is_not_supported_by_mock_mvc",
      "MockMvcRequestMethodTest#static_request_method_accepts_enum_verb_and_path_params",
      "MockMvcRequestMethodTest#request_method_accepts_enum_verb_and_unnamed_path_params",
      "MockMvcRequestMethodTest#static_request_method_accepts_string_verb",
      "MockMvcRequestMethodTest#request_method_accepts_string_verb_and_unnamed_path_params",
      "MockMvcRequestMethodTest#request_method_accepts_enum_verb",
      "QueryParamTest#query_param",
      "QueryParamTest#param_with_int",
      "MockMvcParamConfigTest#replaces_query_params_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_form_params_by_default",
      "MockMvcParamConfigTest#replaces_request_params_when_configured_to_do_so",
      "MockMvcParamConfigTest#replaces_form_params_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_query_params_by_default",
      "MockMvcParamConfigTest#replaces_all_parameters_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_all_parameters_when_configured_to_do_so",
      "MockMvcParamConfigTest#merges_request_params_by_default",
      "ExtractTest#can_extract_spring_mvcs_response",
      "ExtractTest#can_extract_rest_assureds_mock_mvc_response",
      "ExtractTest#can_extract_spring_mvcs_result",
      "ResultHandlerTest#merges_result_handlers_using_the_dsl",
      "ResultHandlerTest#merges_statically_defined_result_handlers_with_dsl_defined_using_response_spec",
      "ResultHandlerTest#supports_defining_result_handlers_statically",
      "ResultHandlerTest#supports_using_result_handlers_using_the_response_dsl",
      "GreetingControllerRestAssuredTest#uses_static_mock_mvc",
      "GreetingControllerRestAssuredTest#param_with_int",
      "GreetingControllerRestAssuredTest#uses_predefined_standalone",
      "GreetingControllerRestAssuredTest#uses_predefined_mock_mvc_instance",
      "AcceptTest#adds_accept_by_media_type",
      "AcceptTest#adds_accept_by_string_value",
      "AcceptTest#adds_accept_by_content_type",
      "HeaderTest#can_send_header_using_header_name_and_value",
      "HeaderTest#can_send_multiple_headers",
      "HeaderTest#can_send_headers_using_headers_class",
      "HeaderTest#validate_may_fail_when_using_mapping_function_when_validating_header_value",
      "HeaderTest#can_send_headers_using_map",
      "HeaderTest#can_send_header_using_header_class",
      "HeaderTest#canUseResponseAwareMatchersForHeaderValidation",
      "HeaderTest#can_use_mapping_function_when_validating_header_value",
      "ResponseLoggingTest#logging_if_response_validation_fails_doesnt_log_anything_if_validation_succeeds",
      "ResponseLoggingTest#logging_if_response_validation_fails_works"
    ],
    "shiro": [
      "ShiroWebSpringAutoConfigurationTest#testMinimalConfiguration"
    ],
    "citrus": [
      "ErrorHandlerTests#prod_ExceptionPipeline",
      "ErrorHandlerTests#prod_ExceptionPipeline_noSchema",
      "ErrorHandlerTests#dev_detail",
      "ErrorHandlerTests#prod_sendError",
      "MainHandlerTests#internalRequest_main",
      "MainHandlerTests#internalRequest_productionMode",
      "MainHandlerTests#internalRequest_homepage",
      "WebxFrameworkFilterTests#getComponent",
      "WebxFrameworkFilterTests#readResource_app4_defaultComponent",
      "WebxFrameworkFilterTests#readResource_app5",
      "WebxFrameworkFilterTests#autowireComponentObject",
      "WebxFrameworkFilterTests#getConfiguration_fromComponent",
      "WebxFrameworkFilterTests#autowireController",
      "WebxFrameworkFilterTests#isExcluded",
      "WebxFrameworkFilterTests#componentPath_wrong",
      "WebxFrameworkFilterTests#findComponent",
      "WebxClasspathTests#components",
      "WebxClasspathTests#illegal_configLocationPattern",
      "WebxRootControllerTests#head",
      "WebxRootControllerTests#passthru",
      "WebxRootControllerTests#valve_breakToTop",
      "WebxRootControllerTests#internalRequestMapping",
      "WebxRootControllerTests#valve_not_found_exception",
      "WebxRootControllerTests#valve_bad_request_exception",
      "WebxRootControllerTests#valve_exception_exception",
      "WebxRootControllerTests#valve_exception_exception_2",
      "WebxRootControllerTests#loadInternalRequestHandlers",
      "WebxRootControllerTests#requestContextFailed",
      "WebxRootControllerTests#internalRequest_illegal",
      "WebxRootControllerTests#internalRequest_error",
      "WebxRootControllerTests#nonInternalRequest",
      "WebxRootControllerTests#valve_exception",
      "PageAuthorizationConfigTests#initializationError",
      "SchemaRequestHandlerTests#internalRequest_schema",
      "SpringextWebContextLoaderTests#initializationError",
      "TurbineURIBrokerTests#config_withMappings",
      "TurbineURIBrokerTests#config_withoutMappings",
      "WebxUtilTests#getVersion",
      "WebxUtilTests#getServletAPIVersion",
      "TurbineContentURIBrokerTests#config",
      "SpringextContextLoaderTests#initializationError",
      "InfoHandlerTests#requestInfoPage",
      "InfoHandlerTests#systemProperties",
      "InfoHandlerTests#environmentVariables",
      "InfoHandlerTests#systemInfo"
    ],
    "spring-websocket-portfolio": [
      "IntegrationPortfolioTests#executeTrade",
      "IntegrationPortfolioTests#getPositions"
    ]
  },
  "org.slf4j:slf4j-log4j12": {
    "shiro": [
      "DefaultPasswordServiceTest#testHashFormatWarned",
      "AbstractAuthenticatorTest#logExceptionAfterDoAuthenticateThrowsNonAuthenticationException"
    ],
    "jmxtrans": [
      "Slf4JOutputWriterTest#metricsAreSentToLoggerViaMDC"
    ],
    "servicecomb-java-chassis": [
      "TestRestClientInvocation#testSetCseContext_failed",
      "TestVertxMetersInitializer#init",
      "TestServiceRegistryClientImpl#testRegisterSchemaNoResponse",
      "TestServiceRegistryClientImpl#testRegisterSchemaErrorResponse",
      "TestServiceRegistryClientImpl#testRegisterSchemaException",
      "TestServiceRegistryClientImpl#testGetServiceCenterInfoException",
      "TestServiceRegistryClientImpl#testRegisterSchemaSuccess",
      "TestDefaultLogPublisher#onPolledEvent_failed",
      "TestDefaultLogPublisher#onPolledEvent",
      "TestTransportConfigUtils#readVerticleCount_default_bigCpu",
      "TestTransportConfigUtils#readVerticleCount_default_smallCpu",
      "TestTransportConfigUtils#readVerticleCount_old_exist",
      "TestSlowInvocationLogger#consumerSlow",
      "TestSlowInvocationLogger#producerSlow",
      "TestSlowInvocationLogger#edgeSlow",
      "TestInspectorBootListener#enabled",
      "TestInspectorBootListener#diabled",
      "TestClassPathStaticResourceHandler#readContentFailed",
      "TestGroupExecutor#adjustCoreThreads",
      "TestGroupExecutor#maxThreads",
      "TestLogMarkerLeakFixUtils#log4j1",
      "TestLogMarkerLeakFixUtils#log4j2",
      "TestLogMarkerLeakFixUtils#logback",
      "TestJvmUtils#findMainClass_invalid",
      "TestMicroservicePaths#testPrintPaths",
      "TestMicroserviceRegisterTask#testLocalSchemaAndServiceCenterSchemaDiff",
      "TestProducerProviderManager#onBootEvent_close_unknown",
      "AccessLogHandlerTest#testHandle",
      "TestInspectorImpl#downloadSchemas_failed"
    ],
    "citrus": [
      "LogbackConfiguratorTests#configure_wrongContext",
      "LogConfiguratorTests#getConfigurators",
      "Log4jConfiguratorTests#getConfigurator_autoDiscovery",
      "Log4jConfiguratorTests#configure",
      "Log4jConfiguratorTests#configureDefault_noDebug",
      "Log4jConfiguratorTests#getConfigurator_withName",
      "Log4jConfiguratorTests#configureDefault_debug"
    ]
  },
  "org.hibernate:hibernate-validator": {
    "querydsl": [
      "JPADomainExporterTest#test",
      "AntJPADomainExporterTest#test"
    ],
    "aws-serverless-java-container": [
      "SpringAwsProxyTest#error_unauthenticatedCall_filterStepsRequest",
      "SpringAwsProxyTest#dateHeader_notModified_expect200",
      "SpringAwsProxyTest#dateHeader_notModified_expect304",
      "SpringAwsProxyTest#headers_servletRequest_echo",
      "SpringAwsProxyTest#error_statusCode_methodNotAllowed",
      "SpringAwsProxyTest#queryString_multiParam_expectCorrectValueCount",
      "SpringAwsProxyTest#errors_unknownRoute_expect404",
      "SpringAwsProxyTest#base64_binaryResponse_base64Encoding",
      "SpringAwsProxyTest#contextPath_generateLink_returnsCorrectPath",
      "SpringAwsProxyTest#request_encodedPath_returnsDecodedPath",
      "SpringAwsProxyTest#queryString_listParameter_expectCorrectLength",
      "SpringAwsProxyTest#servletRequestEncoding_acceptEncoding_okStatusCode",
      "SpringAwsProxyTest#request_requestURI",
      "SpringAwsProxyTest#request_requestURL",
      "SpringAwsProxyTest#authorizer_securityContext_customPrincipalSuccess",
      "SpringAwsProxyTest#error_contentType_invalidContentType",
      "SpringAwsProxyTest#injectBody_populatedResponse_noException",
      "SpringAwsProxyTest#headers_getHeaders_echo",
      "SpringAwsProxyTest#statusCode_responseStatusCode_customStatusCode",
      "SpringAwsProxyTest#responseBody_responseWriter_validBody",
      "SpringAwsProxyTest#controllerAdvice_invalidPath_returnAdvice",
      "SpringAwsProxyTest#multipart_getFileName_returnsCorrectFileName",
      "SpringAwsProxyTest#queryString_uriInfo_echo",
      "StaticAppProxyTest#staticPage",
      "SpringBootAppTest#staticContent_getHtmlFile_returnsHtmlContent",
      "SpringBootAppTest#requestUri_dotInPathParam_expectRoutingToMethod",
      "SpringBootAppTest#defaultError_requestForward_springBootForwardsToDefaultErrorPage",
      "SpringBootAppTest#testMethod_springSecurity_doesNotThrowException",
      "SpringBootAppTest#queryString_commaSeparatedList_expectUnmarshalAsList",
      "SpringProfileTest#profile_defaultProfile",
      "SpringProfileTest#profile_overrideProfile"
    ],
    "fluent-validator": [
      "FluentValidateInterceptorTest#testAddCarsExcludeGroupsIgnore",
      "FluentValidateInterceptorTest#testAddCarArray",
      "FluentValidateInterceptorTest#testAddCarsGroups",
      "FluentValidateInterceptorTest#testAddCar2",
      "FluentValidateInterceptorTest#testAddCar3",
      "FluentValidateInterceptorTest#testAddCarNegative2",
      "FluentValidateInterceptorTest#testAddCarArrayNull",
      "FluentValidateInterceptorTest#testAddCarsExcludeGroups1",
      "FluentValidateInterceptorTest#testAddCarsExcludeGroups2",
      "FluentValidateInterceptorTest#testAddCarJsr303",
      "FluentValidateInterceptorTest#testAddCarSizeExceed",
      "FluentValidateInterceptorTest#testAddCarNegative",
      "FluentValidateInterceptorTest#testAddCar",
      "FluentValidateInterceptorTest#testAddCarListNull",
      "FluentValidateInterceptorTest#testAddCarList",
      "FluentValidateInterceptorTest#testAddCarNull",
      "FluentValidateInterceptorTest#testAddCarsGroupsIgnore"
    ],
    "spring-data-neo4j": [
      "JSR303Tests#testCantCreateAnAdultUnderEighteen",
      "JSR303Tests#testCanCreateAnAdult",
      "JSR303Tests#testCantCreateAnAdultWitAShortName",
      "JSR303Tests#testCantCreateAnAdultWithNoName"
    ]
  },
  "org.apache.logging.log4j:log4j-api": {
    "Jest": [
      "CatIntegrationTest#shouldChangeOrderOfColumnsByspecifyingParameters"
    ],
    "servicecomb-pack": [
      "PushBackOmegaCallbackTest#pushFailedCallbackToEndOfQueue",
      "PushBackReconnectRunnableTest#pushFailedCallbackToEndOfQueue",
      "CoordinateMessageHandlerTest#sendsCompensatedEventOnCompensationCompleted",
      "GrpcTccClientMessageSenderTest#serviceOnEndParticipateTest",
      "GrpcTccClientMessageSenderTest#serviceOnTransactionEndTest",
      "GrpcTccClientMessageSenderTest#serviceOnStartParticipateTest",
      "GrpcTccClientMessageSenderTest#serviceOnConnectedTest",
      "GrpcTccClientMessageSenderTest#serviceOnTransactionStartTest",
      "GrpcTccClientMessageSenderTest#serviceOnCoordinateTest",
      "GrpcTccClientMessageSenderTest#serviceOnDisconnectedTest",
      "MemoryAlphaTccServerTest#assertOnSwitchOtherCallbackInstance",
      "MemoryAlphaTccServerTest#assertOnTccTransactionFailedEnded",
      "MemoryAlphaTccServerTest#assertOnConnect",
      "MemoryAlphaTccServerTest#assertOnTransactionStart",
      "MemoryAlphaTccServerTest#assertOnCallbackNotExist",
      "MemoryAlphaTccServerTest#assertOnCallbacksExecuteError",
      "MemoryAlphaTccServerTest#assertOnParticipated",
      "MemoryAlphaTccServerTest#assertOnTccTransactionSucceedEnded",
      "MemoryAlphaTccServerTest#assertOnDisConnect",
      "MemoryEventRegistryTest#testDeleteAll",
      "MemoryEventRegistryTest#testfindByUniqueKey",
      "MemoryEventRegistryTest#testfindAll",
      "MemoryEventRegistryTest#testFindByGlobalTxId",
      "MemoryEventRegistryTest#testfindByGlobalTxIdAndTxType",
      "AlphaIntegrationWithRandomPortTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#persistsEvent",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithRandomPortTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithRandomPortTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithRandomPortTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithRandomPortTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithRandomPortTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutSagaStartedEvent",
      "SagaLoadBalancedSenderTest#stopSendingOnInterruption",
      "SagaLoadBalancedSenderTest#blowsUpWhenServerIsInterrupted",
      "SagaLoadBalancedSenderTest#blowsUpWhenNoServerAddressProvided",
      "SagaLoadBalancedSenderTest#considerFasterServerFirst",
      "SagaLoadBalancedSenderTest#swallowException_UntilAllSendersConnected",
      "SagaLoadBalancedSenderTest#resendToAnotherServerOnFailure",
      "SagaLoadBalancedSenderTest#stopSendingWhenClusterIsDown",
      "SagaLoadBalancedSenderTest#resetLatencyOnReconnection",
      "SagaLoadBalancedSenderTest#swallowException_UntilAllSendersDisconnected",
      "SagaLoadBalancedSenderTest#broadcastConnectionAndDisconnection",
      "SagaLoadBalancedSenderTest#forwardSendResult",
      "AlphaTccEventControllerTest#retrievesEventsFromRepo",
      "AlphaIntegrationTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationTest#persistsEvent",
      "AlphaIntegrationTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationTest#getCompensateCommandOnFailure",
      "AlphaIntegrationTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationTest#closeStreamOnDisconnected",
      "AlphaIntegrationTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationTest#removeCallbackOnClientDown",
      "AlphaIntegrationTest#abortTimeoutSagaStartedEvent",
      "RdbAlphaTccServerTest#assertOnSwitchOtherCallbackInstance",
      "RdbAlphaTccServerTest#assertOnTccTransactionFailedEnded",
      "RdbAlphaTccServerTest#assertOnConnect",
      "RdbAlphaTccServerTest#assertOnTransactionStart",
      "RdbAlphaTccServerTest#assertOnCallbackNotExist",
      "RdbAlphaTccServerTest#assertOnCallbacksExecuteError",
      "RdbAlphaTccServerTest#assertOnParticipated",
      "RdbAlphaTccServerTest#assertOnTccTransactionSucceedEnded",
      "RdbAlphaTccServerTest#assertOnDisConnect",
      "TccTxEventServiceTest#handleTimeoutGlobalTraction",
      "TccTxEventServiceTest#clearUpCompletedTxFromGlobalTxTable",
      "TccTxEventServiceTest#onlyCoordinateParticipatedEventOnce",
      "TccTxEventServiceTest#clearUpCompletedTxFromGlobalTxTableMoreThanOne",
      "SagaStartAspectTest#newGlobalTxIdInSagaStart",
      "SagaStartAspectTest#clearContextOnSagaStartError",
      "ForwardRecoveryTest#forwardExceptionWhenGlobalTxAborted",
      "ForwardRecoveryTest#throwExceptionWhenRetryReachesMaximum",
      "ForwardRecoveryTest#keepRetryingTillInterrupted",
      "ClusterLockServiceTest#testSlaveNodeUpdateLockLater",
      "ClusterLockServiceTest#testSlaveNodeWhenDuplicateKey",
      "ClusterLockServiceTest#testMasterNode",
      "ClusterLockServiceTest#testSlaveNodeWhenInitLockException",
      "ClusterLockServiceTest#testSlaveNodeWhenUpdateLockException",
      "TccTxEventServiceTransactionTest#rollbackAfterSaveTccTxEventDbFailure",
      "TxConsistentServiceTest#skipTxStartedEvent_IfGlobalTxAlreadyFailed",
      "TxConsistentServiceTest#skipSagaEndedEvent_IfGlobalTxAlreadyFailed",
      "TxConsistentServiceTest#persistEventOnArrival",
      "TccParticipatorAspectTest#participateMethodIsCalledFailed",
      "TccParticipatorAspectTest#participateMethodIsCalledSuccessed",
      "SagaTransactionsControllerTest#findTransactionsTest",
      "SagaTransactionsControllerTest#getTransactionsTest",
      "SagaTransactionsControllerTest#getDashboardStats",
      "SagaTransactionsControllerTest#getRecentTransactionsTest",
      "AlphaIntegrationWithSSLTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithSSLTest#persistsEvent",
      "AlphaIntegrationWithSSLTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithSSLTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithSSLTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithSSLTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithSSLTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithSSLTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithSSLTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithSSLTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithSSLTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithSSLTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithSSLTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithSSLTest#abortTimeoutSagaStartedEvent",
      "TransactionAspectTest#restoreContextOnCompensableError",
      "TransactionAspectTest#retryReachesMaximumAndForwardException",
      "TransactionAspectTest#keepRetryingTillSuccess",
      "TransactionAspectTest#newLocalTxIdInCompensable",
      "CompositeOmegaCallbackTest#compensateOtherOmegaInstance_IfTheRequestedIsUnreachable",
      "CompositeOmegaCallbackTest#blowsUpIfNoSuchServiceIsReachable",
      "CompositeOmegaCallbackTest#removeCallbackOnException",
      "CompositeOmegaCallbackTest#blowsUpIfNoSuchServiceFound",
      "CompositeOmegaCallbackTest#compensateCorrespondingOmegaInstanceOnly",
      "CompensationMessageHandlerTest#sendsCompensatedEventOnCompensationCompleted",
      "DefaultRecoveryTest#recordRetryMethodWhenRetriesIsSet",
      "DefaultRecoveryTest#recordAbortedEventWhenFailed",
      "DefaultRecoveryTest#recordEndedEventWhenSuccess",
      "DefaultRecoveryTest#returnImmediatelyWhenReceivedRejectResponse",
      "TccCallbackEngineTest#sendCoordinateFailedForOmegaDown",
      "TccCallbackEngineTest#sendCoordinateCommandAfterTccEnd",
      "TccCallbackEngineTest#doRetryCoordinateTillOmegaReceived",
      "AlphaEventControllerTest#retrievesEventsFromRepo",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithoutSsl",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithoutSsl",
      "TccStartAspectTest#newGlobalTxIdInTccStart",
      "TccStartAspectTest#clearContextOnTccStartError",
      "SagaLoadBalanceSenderWithTLSTest#considerFasterServerFirst",
      "SagaLoadBalanceSenderWithTLSTest#broadcastConnectionAndDisconnection"
    ],
    "sofa-tracer": [
      "LogTest#testLog4j2"
    ],
    "sentry-java": [
      "SentryAppenderCloseTest#testStopDoNotFailIfNoInit",
      "SentryAppenderCloseTest#testStopDoNotFailIfSentryNull",
      "SentryAppenderCloseTest#testStopDoNotFailWhenMultipleCalls",
      "SentryAppenderCloseTest#testConnectionClosedWhenAppenderStopped",
      "SentryAppenderEventBuildingTest#testSourceUsedAsStacktrace",
      "SentryAppenderEventBuildingTest#testMarkerAddedToTag",
      "SentryAppenderEventBuildingTest#testSimpleMessageLogging",
      "SentryAppenderEventBuildingTest#testExceptionLogging",
      "SentryAppenderEventBuildingTest#testNdcAddedToExtra",
      "SentryAppenderEventBuildingTest#testLogParametrisedMessage",
      "SentryAppenderEventBuildingTest#testMdcAddedToExtra",
      "SentryAppenderEventBuildingTest#testExtraTagObtainedFromMdc",
      "SentryAppenderFailuresTest#testAppendFailIfCurrentThreadSpawnedBySentry",
      "SentryAppenderFailuresTest#testSentryFailureDoesNotPropagate"
    ]
  },
  "org.ow2.asm:asm": {
    "Jupiter": [
      "ReflectsTest#testFindMatchingMethod",
      "ReflectsTest#testFastInvoke"
    ],
    "reflectasm": [
      "MethodAccessTest#testInvokeInterface",
      "MethodAccessTest#testInvoke",
      "FieldAccessTest#testIndexSetAndGet",
      "FieldAccessTest#testNameSetAndGet",
      "ClassLoaderTest#testDifferentClassloaders",
      "ClassLoaderTest#testAutoUnloadClassloaders",
      "ClassLoaderTest#testRemoveClassloaders"
    ],
    "ea-async": [
      "TransformerTest#simpleAsyncMethod",
      "TransformerTest#withTwoFutures",
      "AConstNullTest#nullInTheStack",
      "AConstNullTest#nullInTheStack2",
      "NullThenBasicValueTest#nullThenBasicValueTest"
    ],
    "artemis-odb": [
      "EntityLinkGeneratorTest#generate_entity_id_accessor",
      "OptimizedSystemTest#fully_optimized_entity_system",
      "OptimizedSystemTest#fully_optimized_entity_system_with_additional_references",
      "OptimizedSystemTest#safely_optimized_entity_system",
      "EntitySystemOptimizerTest#validate_optimized_iterating_system_test",
      "EntitySystemOptimizerTest#validate_optimized_system_test",
      "IntOptimizedSystemTest#fully_optimized_entity_system",
      "IntOptimizedSystemTest#fully_optimized_entity_system_with_additional_references",
      "IntOptimizedSystemTest#safely_optimized_entity_system",
      "SystemOptimizerTest#validate_optimized_system_test"
    ]
  },
  "org.springframework:spring-jdbc": {
    "photon": [
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testFilterWithTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testTagNotTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testFilterWithoutTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyTourism",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testValueInformationButKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testKeyTourismButValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourism"
    ],
    "ff4j": [
      "SpringJdbcPropertyStoreTest#updateKOdoesnotExist",
      "SpringJdbcPropertyStoreTest#addPropertyOKLogLevel",
      "SpringJdbcPropertyStoreTest#deleteKOdoesnotexist",
      "SpringJdbcPropertyStoreTest#readOK",
      "SpringJdbcPropertyStoreTest#updateKOInvalidValue",
      "SpringJdbcPropertyStoreTest#updateKOPropertyNotFound",
      "SpringJdbcPropertyStoreTest#updateOKProperties",
      "SpringJdbcPropertyStoreTest#clear",
      "SpringJdbcPropertyStoreTest#existfalse",
      "SpringJdbcPropertyStoreTest#addPropertyOKDate",
      "SpringJdbcPropertyStoreTest#deleteOK",
      "SpringJdbcPropertyStoreTest#readOKFixed",
      "SpringJdbcPropertyStoreTest#updateOK",
      "SpringJdbcPropertyStoreTest#addPropertyKOAlreadyExist",
      "SpringJdbcPropertyStoreTest#existfilled",
      "SpringJdbcPropertyStoreTest#readKOnotExist",
      "SpringJdbcPropertyStoreTest#addPropertyOKsimple",
      "SpringJdbcPropertyStoreTest#valueFixed",
      "SpringJdbcFeatureStoreTest#testDeteleFeatureDoesnotExist",
      "SpringJdbcFeatureStoreTest#testEnableGroup",
      "SpringJdbcFeatureStoreTest#testStoreHasBeenInitialized",
      "SpringJdbcFeatureStoreTest#testUpdateFeatureMoreAutorisation",
      "SpringJdbcFeatureStoreTest#testGrantRoleToFeatureFeatureDoesNotExist",
      "SpringJdbcFeatureStoreTest#testUpdateRemoveFlippingStrategy",
      "SpringJdbcFeatureStoreTest#testUpdateRemoveProperty",
      "SpringJdbcFeatureStoreTest#testUpdateEditFlippingStrategy",
      "SpringJdbcFeatureStoreTest#testClear",
      "SpringJdbcFeatureStoreTest#testUpdateAddProperty",
      "SpringJdbcFeatureStoreTest#testUpdateFlipMoreAutorisationNotExist",
      "SpringJdbcFeatureStoreTest#testGrantRoleToFeatureRoleDoesNotExist",
      "SpringJdbcFeatureStoreTest#testEnableFeatureDoesNotExist",
      "SpringJdbcFeatureStoreTest#testReadAllFeatures",
      "SpringJdbcFeatureStoreTest#testDisableFeature",
      "SpringJdbcFeatureStoreTest#testExistGroup",
      "SpringJdbcFeatureStoreTest#testReadGroup",
      "SpringJdbcFeatureStoreTest#testFeatureDoesNotExit",
      "SpringJdbcFeatureStoreTest#testAddToGroup",
      "SpringJdbcFeatureStoreTest#testDisableGroup",
      "SpringJdbcFeatureStoreTest#testReadGroupDoesnotExist",
      "SpringJdbcFeatureStoreTest#testAddFeature",
      "SpringJdbcFeatureStoreTest#testUpdateAddFlippingStrategy",
      "SpringJdbcFeatureStoreTest#testRemoveFromGroupDoesNotExist",
      "SpringJdbcFeatureStoreTest#testDeleteRoleFeatureDoesNotExit",
      "SpringJdbcFeatureStoreTest#testDeleteRoleToFeature",
      "SpringJdbcFeatureStoreTest#testEnableGroupDoesNotExist",
      "SpringJdbcFeatureStoreTest#testRemoveLastFeatureOfGroupDeleteGroup",
      "SpringJdbcFeatureStoreTest#testDeleteFeature",
      "SpringJdbcFeatureStoreTest#testUpdateEditPropertyValue",
      "SpringJdbcFeatureStoreTest#testAddToGroupFeatureDoeNotExist",
      "SpringJdbcFeatureStoreTest#testUpdateEditPropertyAddFixedValues",
      "SpringJdbcFeatureStoreTest#testDisableFeatureDoesNotExist",
      "SpringJdbcFeatureStoreTest#testReadNotExist",
      "SpringJdbcFeatureStoreTest#testUpdateFeatureCoreData",
      "SpringJdbcFeatureStoreTest#testRemoveFromGroupIfNotInGroup",
      "SpringJdbcFeatureStoreTest#testReadAllGroup",
      "SpringJdbcFeatureStoreTest#testDisableGroupDoesNotExist",
      "SpringJdbcFeatureStoreTest#testUpdateEditPropertyRemoveFixedValues",
      "SpringJdbcFeatureStoreTest#testReadFullFeature",
      "SpringJdbcFeatureStoreTest#testRemoveFromGroupFeatureDoeNotExist",
      "SpringJdbcFeatureStoreTest#testUpdateFlipLessAutorisation",
      "SpringJdbcFeatureStoreTest#testRemoveFromGroup",
      "SpringJdbcFeatureStoreTest#testAddFeatureAlreadyExis",
      "SpringJdbcFeatureStoreTest#testEnableFeature",
      "SpringJdbcPropertyStorePrefixTest#updateKOdoesnotExist",
      "SpringJdbcPropertyStorePrefixTest#addPropertyOKLogLevel",
      "SpringJdbcPropertyStorePrefixTest#deleteKOdoesnotexist",
      "SpringJdbcPropertyStorePrefixTest#readOK",
      "SpringJdbcPropertyStorePrefixTest#updateKOInvalidValue",
      "SpringJdbcPropertyStorePrefixTest#updateKOPropertyNotFound",
      "SpringJdbcPropertyStorePrefixTest#updateOKProperties",
      "SpringJdbcPropertyStorePrefixTest#clear",
      "SpringJdbcPropertyStorePrefixTest#existfalse",
      "SpringJdbcPropertyStorePrefixTest#addPropertyOKDate",
      "SpringJdbcPropertyStorePrefixTest#deleteOK",
      "SpringJdbcPropertyStorePrefixTest#readOKFixed",
      "SpringJdbcPropertyStorePrefixTest#updateOK",
      "SpringJdbcPropertyStorePrefixTest#addPropertyKOAlreadyExist",
      "SpringJdbcPropertyStorePrefixTest#existfilled",
      "SpringJdbcPropertyStorePrefixTest#readKOnotExist",
      "SpringJdbcPropertyStorePrefixTest#addPropertyOKsimple",
      "SpringJdbcPropertyStorePrefixTest#valueFixed",
      "SpringJdbcFeatureStorePrefixTest#testDeteleFeatureDoesnotExist",
      "SpringJdbcFeatureStorePrefixTest#testEnableGroup",
      "SpringJdbcFeatureStorePrefixTest#testStoreHasBeenInitialized",
      "SpringJdbcFeatureStorePrefixTest#testUpdateFeatureMoreAutorisation",
      "SpringJdbcFeatureStorePrefixTest#testGrantRoleToFeatureFeatureDoesNotExist",
      "SpringJdbcFeatureStorePrefixTest#testUpdateRemoveFlippingStrategy",
      "SpringJdbcFeatureStorePrefixTest#testUpdateRemoveProperty",
      "SpringJdbcFeatureStorePrefixTest#testUpdateEditFlippingStrategy",
      "SpringJdbcFeatureStorePrefixTest#testClear",
      "SpringJdbcFeatureStorePrefixTest#testUpdateAddProperty",
      "SpringJdbcFeatureStorePrefixTest#testUpdateFlipMoreAutorisationNotExist",
      "SpringJdbcFeatureStorePrefixTest#testGrantRoleToFeatureRoleDoesNotExist",
      "SpringJdbcFeatureStorePrefixTest#testEnableFeatureDoesNotExist",
      "SpringJdbcFeatureStorePrefixTest#testReadAllFeatures",
      "SpringJdbcFeatureStorePrefixTest#testDisableFeature",
      "SpringJdbcFeatureStorePrefixTest#testExistGroup",
      "SpringJdbcFeatureStorePrefixTest#testReadGroup",
      "SpringJdbcFeatureStorePrefixTest#testFeatureDoesNotExit",
      "SpringJdbcFeatureStorePrefixTest#testAddToGroup",
      "SpringJdbcFeatureStorePrefixTest#testDisableGroup",
      "SpringJdbcFeatureStorePrefixTest#testReadGroupDoesnotExist",
      "SpringJdbcFeatureStorePrefixTest#testAddFeature",
      "SpringJdbcFeatureStorePrefixTest#testUpdateAddFlippingStrategy",
      "SpringJdbcFeatureStorePrefixTest#testRemoveFromGroupDoesNotExist",
      "SpringJdbcFeatureStorePrefixTest#testDeleteRoleFeatureDoesNotExit",
      "SpringJdbcFeatureStorePrefixTest#testDeleteRoleToFeature",
      "SpringJdbcFeatureStorePrefixTest#testEnableGroupDoesNotExist",
      "SpringJdbcFeatureStorePrefixTest#testRemoveLastFeatureOfGroupDeleteGroup",
      "SpringJdbcFeatureStorePrefixTest#testDeleteFeature",
      "SpringJdbcFeatureStorePrefixTest#testUpdateEditPropertyValue",
      "SpringJdbcFeatureStorePrefixTest#testAddToGroupFeatureDoeNotExist",
      "SpringJdbcFeatureStorePrefixTest#testUpdateEditPropertyAddFixedValues",
      "SpringJdbcFeatureStorePrefixTest#testDisableFeatureDoesNotExist",
      "SpringJdbcFeatureStorePrefixTest#testReadNotExist",
      "SpringJdbcFeatureStorePrefixTest#testUpdateFeatureCoreData",
      "SpringJdbcFeatureStorePrefixTest#testRemoveFromGroupIfNotInGroup",
      "SpringJdbcFeatureStorePrefixTest#testReadAllGroup",
      "SpringJdbcFeatureStorePrefixTest#testDisableGroupDoesNotExist",
      "SpringJdbcFeatureStorePrefixTest#testUpdateEditPropertyRemoveFixedValues",
      "SpringJdbcFeatureStorePrefixTest#testReadFullFeature",
      "SpringJdbcFeatureStorePrefixTest#testRemoveFromGroupFeatureDoeNotExist",
      "SpringJdbcFeatureStorePrefixTest#testUpdateFlipLessAutorisation",
      "SpringJdbcFeatureStorePrefixTest#testRemoveFromGroup",
      "SpringJdbcFeatureStorePrefixTest#testAddFeatureAlreadyExis",
      "SpringJdbcFeatureStorePrefixTest#testEnableFeature",
      "SpringJdbcEmbedDataSourceStoreTest#testDeteleFeatureDoesnotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testEnableGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testStoreHasBeenInitialized",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateFeatureMoreAutorisation",
      "SpringJdbcEmbedDataSourceStoreTest#testGrantRoleToFeatureFeatureDoesNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateRemoveFlippingStrategy",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateRemoveProperty",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateEditFlippingStrategy",
      "SpringJdbcEmbedDataSourceStoreTest#testClear",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateAddProperty",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateFlipMoreAutorisationNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testGrantRoleToFeatureRoleDoesNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testEnableFeatureDoesNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testReadAllFeatures",
      "SpringJdbcEmbedDataSourceStoreTest#testDisableFeature",
      "SpringJdbcEmbedDataSourceStoreTest#testExistGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testReadGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testFeatureDoesNotExit",
      "SpringJdbcEmbedDataSourceStoreTest#testAddToGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testDisableGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testReadGroupDoesnotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testAddFeature",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateAddFlippingStrategy",
      "SpringJdbcEmbedDataSourceStoreTest#testRemoveFromGroupDoesNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testDeleteRoleFeatureDoesNotExit",
      "SpringJdbcEmbedDataSourceStoreTest#testDeleteRoleToFeature",
      "SpringJdbcEmbedDataSourceStoreTest#testEnableGroupDoesNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testRemoveLastFeatureOfGroupDeleteGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testDeleteFeature",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateEditPropertyValue",
      "SpringJdbcEmbedDataSourceStoreTest#testAddToGroupFeatureDoeNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateEditPropertyAddFixedValues",
      "SpringJdbcEmbedDataSourceStoreTest#testDisableFeatureDoesNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testReadNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateFeatureCoreData",
      "SpringJdbcEmbedDataSourceStoreTest#testRemoveFromGroupIfNotInGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testReadAllGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testDisableGroupDoesNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateEditPropertyRemoveFixedValues",
      "SpringJdbcEmbedDataSourceStoreTest#testReadFullFeature",
      "SpringJdbcEmbedDataSourceStoreTest#testRemoveFromGroupFeatureDoeNotExist",
      "SpringJdbcEmbedDataSourceStoreTest#testUpdateFlipLessAutorisation",
      "SpringJdbcEmbedDataSourceStoreTest#testRemoveFromGroup",
      "SpringJdbcEmbedDataSourceStoreTest#testAddFeatureAlreadyExis",
      "SpringJdbcEmbedDataSourceStoreTest#testEnableFeature",
      "SpringJdbcXMLDataSourceStoreTest#testStoreHasBeenInitialized",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleToFeatureRoleDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyAddFixedValues",
      "SpringJdbcXMLDataSourceStoreTest#testReadAllGroup",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyRemoveFixedValues",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupFeatureDoeNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFlipLessAutorisation",
      "SpringJdbcXMLDataSourceStoreTest#testDeteleFeatureDoesnotExist",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroup",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFeatureMoreAutorisation",
      "SpringJdbcXMLDataSourceStoreTest#testGrantRoleToFeatureFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateRemoveFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateRemoveProperty",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testClear",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateAddProperty",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFlipMoreAutorisationNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testEnableFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testReadAllFeatures",
      "SpringJdbcXMLDataSourceStoreTest#testDisableFeature",
      "SpringJdbcXMLDataSourceStoreTest#testExistGroup",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroup",
      "SpringJdbcXMLDataSourceStoreTest#testFeatureDoesNotExit",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroup",
      "SpringJdbcXMLDataSourceStoreTest#testReadGroupDoesnotExist",
      "SpringJdbcXMLDataSourceStoreTest#testAddFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateAddFlippingStrategy",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteRoleFeatureDoesNotExit",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteRoleToFeature",
      "SpringJdbcXMLDataSourceStoreTest#testEnableGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveLastFeatureOfGroupDeleteGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDeleteFeature",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateEditPropertyValue",
      "SpringJdbcXMLDataSourceStoreTest#testAddToGroupFeatureDoeNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testDisableFeatureDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testReadNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testUpdateFeatureCoreData",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroupIfNotInGroup",
      "SpringJdbcXMLDataSourceStoreTest#testDisableGroupDoesNotExist",
      "SpringJdbcXMLDataSourceStoreTest#testReadFullFeature",
      "SpringJdbcXMLDataSourceStoreTest#testRemoveFromGroup",
      "SpringJdbcXMLDataSourceStoreTest#testAddFeatureAlreadyExis",
      "SpringJdbcXMLDataSourceStoreTest#testEnableFeature"
    ],
    "paoding-rose": [
      "SelectTest#test",
      "BatchUpdateTest#testBatchInsertIntoHashTables",
      "BatchUpdateTest#testBatchInsertIntoOneTable",
      "SuperTest#test",
      "DataSourcesTest#testGetName",
      "DataSourcesTest#testFindNames"
    ],
    "lavagna": [
      "ProjectServiceFindRelatedTest#testFindNothing",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByCardDataId",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByBoardShortname",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByEventId",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByColumnDefinitionId",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByCardId",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByLabelValueId",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByLabelId",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByColumnId",
      "ProjectServiceFindRelatedTest#testFindRelatedProjectShortNameByLabelListValudIdPath",
      "StatisticsServiceTest#testFindCardsByMilestoneWithLabels",
      "StatisticsServiceTest#getCardsByLabelOnBoardTest",
      "StatisticsServiceTest#getTomorrowMostActiveCardByProjectTest",
      "StatisticsServiceTest#testFindCardsByMilestone",
      "StatisticsServiceTest#getTodayMostActiveCardByProjectTest",
      "StatisticsServiceTest#getMostActiveCardByBoardTest",
      "StatisticsServiceTest#getCardsByLabelOnProjectTest",
      "StatisticsServiceTest#getCardsStatusByBoardOnDoubleSnapshotTest",
      "StatisticsServiceTest#getCreatedAndClosedCardsByMilestoneTest",
      "StatisticsServiceTest#testFindCardsByMilestoneOnMultipleProjects",
      "StatisticsServiceTest#getTodayMostActiveCardByBoardTest",
      "StatisticsServiceTest#getCardsStatusByProjectTest",
      "StatisticsServiceTest#getCreatedAndClosedCardsByProjectTest",
      "StatisticsServiceTest#getActiveUsersOnBoardTest",
      "StatisticsServiceTest#getAverageCardsPerUserOnProjectTest",
      "StatisticsServiceTest#testFindCardsByMilestoneOnTrashedCards",
      "StatisticsServiceTest#getCardsStatusByBoardTest",
      "StatisticsServiceTest#getTomorrowMostActiveCardByBoardTest",
      "StatisticsServiceTest#getAverageCardsPerUserOnBoardTest",
      "StatisticsServiceTest#testFindCardsByMilestoneOnEmptyProject",
      "StatisticsServiceTest#getCreatedAndClosedCardsByBoardTest",
      "StatisticsServiceTest#getAverageUsersPerCardOnProjectTest",
      "StatisticsServiceTest#getMostActiveCardByProjectTest",
      "StatisticsServiceTest#getCardsStatusByBoardOnDoubleCreateTest",
      "StatisticsServiceTest#getActiveUsersOnProjectTest",
      "StatisticsServiceTest#getAverageUsersPerCardOnBoardTest",
      "CalendarServiceTest#testGetUserCalendarOnDisabled",
      "CalendarServiceTest#testGetUserCalendarOnEmpty",
      "CalendarServiceTest#testTokenCreation",
      "CalendarServiceTest#testDeleteTokenCreation",
      "CalendarServiceTest#testGetUserCalendarWithWrongToken",
      "CalendarServiceTest#testGetCalDavCalendar",
      "CalendarServiceTest#testGetProjectStandardCalendar",
      "CalendarServiceTest#testDoubleFindTokenCreation",
      "CalendarServiceTest#testSetCalendarFeedDisabled",
      "CalendarServiceTest#testGetStandardCalendar",
      "CardRepositoryTest#testMoveCardToColumnAndReorder",
      "CardRepositoryTest#testFetchAllActivityByCardId",
      "CardRepositoryTest#testFindFullById",
      "CardRepositoryTest#testFindAllByIds",
      "CardRepositoryTest#testMoveCardsToColumnWithoutReorder",
      "CardRepositoryTest#testFindCardBy",
      "CardRepositoryTest#testUpdateCard",
      "CardRepositoryTest#testCreateCardAndFetch",
      "CardRepositoryTest#testCreateCardFromTopAndOrder",
      "CardRepositoryTest#testFindFullBySeq",
      "CardRepositoryTest#testExistCardWith",
      "CardRepositoryTest#testFindCardsId",
      "CardRepositoryTest#testUpdateCardOrder",
      "CardRepositoryTest#testCreateCardAndFetchFull",
      "CardRepositoryTest#testUpdateCardOrderEmpty",
      "CardRepositoryTest#testFindCards",
      "CardRepositoryTest#testFindCardByInProject",
      "CardRepositoryTest#testFetchPaginatedByBoardIdAndLocation",
      "ExcelExportServiceTest#testGetMilestone",
      "ExcelExportServiceTest#testExportProjectToExcel",
      "ExcelExportServiceTest#testExportMilestoneToExcel",
      "ExcelExportServiceTest#testGetWrongMilestone",
      "ExcelExportServiceTest#testExportMilestoneToExcelWrongValue",
      "UserServiceTest#createUserWithPermissions",
      "UserServiceTest#createUsers",
      "UserServiceTest#createUserWithoutRole",
      "UserServiceTest#createUserWithRole",
      "ListValueMetadataRepositoryTest#testDeleteCascade",
      "ListValueMetadataRepositoryTest#findAll",
      "ListValueMetadataRepositoryTest#listValueMetadataLifecycleTest",
      "ListValueMetadataRepositoryTest#deleteAllWithLabelIdTest",
      "SearchServiceTest#testUserWithReadPermissionInProject",
      "SearchServiceTest#testNoReadPermission",
      "SearchServiceTest#testFindByStatus",
      "SearchServiceTest#testFTS",
      "SearchServiceTest#testCreatedToday",
      "SearchServiceTest#testSearchBoard",
      "SearchServiceTest#testEmpty",
      "SearchServiceTest#testFindTaksByColumnDefinitionAfterMove",
      "SearchServiceTest#testInProject",
      "SearchServiceTest#testUnassigned",
      "SearchServiceTest#testWithoutPagination",
      "SearchServiceTest#testPagination",
      "SearchServiceTest#testFindTaksByColumnDefinitionOnManyCards",
      "SearchServiceTest#testFindCreatedByMe",
      "SearchServiceTest#testFindByStatusAndCreatedByMe",
      "SearchServiceTest#testCreatedThisYear",
      "SearchServiceTest#testFindTaksByColumnDefinition",
      "ImportServiceTest#saveTrelloBoardsToDbCheckListTest",
      "ImportServiceTest#saveTrelloBoardsToDbTest",
      "ImportServiceTest#saveTrelloBoardsToDbLabelsTest",
      "LabelServiceTest#testCardLabelEnsureTypeConstraint",
      "LabelServiceTest#testAddUniqueLabelValue",
      "LabelServiceTest#testRemoveLabelValue",
      "LabelServiceTest#testAddNonUniqueLabelValue",
      "LabelServiceTest#testAddLabelValueToCard",
      "LabelServiceTest#testAddLabel",
      "LabelServiceTest#testAddLabelValueToCards",
      "LabelServiceTest#testUpdateLabelValue",
      "EventRepositoryTest#testGetLatestActivityByProjectsOnFakeProject",
      "EventRepositoryTest#testGetUserActivity",
      "EventRepositoryTest#testLastUpdateOnCardChange",
      "EventRepositoryTest#testGetLatestActivity",
      "EventRepositoryTest#testGetLatestActivityByProjects",
      "EventRepositoryTest#testGetUserActivityForProject",
      "EventRepositoryTest#testGetUserActivityForEmptyProjectst",
      "EventRepositoryTest#testGetLatestActivityByPageAndProjects",
      "EventRepositoryTest#testLastUpdateOnUndo",
      "EventRepositoryTest#testGetLatestActivityByPage",
      "EventRepositoryTest#testGetLatestActivityByPageAndProjectsOnFakeProject",
      "ProjectServiceTest#updateProjectTest",
      "ProjectServiceTest#testFindBoardsByUserActivityWithPermissionsOnTest",
      "ProjectServiceTest#testFindBoardsByUserActivityWithNoPermissionsOnTest",
      "ProjectServiceTest#testFindAllForUser",
      "ProjectServiceTest#testProjectMetadata",
      "ProjectServiceTest#testFindBoardsByUserActivityWithGlobalPermissions",
      "ProjectServiceTest#findByIdNotFoundTest",
      "ProjectServiceTest#findAllTest",
      "ProjectServiceTest#uniquenessTest",
      "ProjectServiceTest#updateColumnDefinition",
      "ProjectServiceTest#findByIdTest",
      "ProjectServiceTest#createTest",
      "ProjectServiceTest#testExistsWithShortName",
      "BoardColumnRepositoryTest#testFindColumnByIdNothingFound",
      "BoardColumnRepositoryTest#testDefaultColumnsOnRepoCreation",
      "BoardColumnRepositoryTest#testCantCreateBacklogInBoard",
      "BoardColumnRepositoryTest#changeColumnDefinition",
      "BoardColumnRepositoryTest#testFindColumnById",
      "BoardColumnRepositoryTest#testAddColumn",
      "BoardColumnRepositoryTest#testFindColumnByIds",
      "BoardColumnRepositoryTest#testRenameColumn",
      "BoardColumnRepositoryTest#testGetColumnInfoById",
      "BoardColumnRepositoryTest#testFindAllColumn",
      "BoardColumnRepositoryTest#testMoveToLocationNotBoard",
      "BoardColumnRepositoryTest#testUpateOrder",
      "BoardColumnRepositoryTest#testCantCreateTrashInBoard",
      "BoardColumnRepositoryTest#testCantCreateArchiveInBoard",
      "BoardColumnRepositoryTest#testMoveToLocation",
      "CardLabelRepositoryTest#testAddLabelListValue",
      "CardLabelRepositoryTest#testFindUserLabelNameByProjectNoReadWithProjectIdNull",
      "CardLabelRepositoryTest#testFindUserLabelNameByProjectRead",
      "CardLabelRepositoryTest#testSwapListLabel",
      "CardLabelRepositoryTest#testFindUserLabelNameByGlobalRead",
      "CardLabelRepositoryTest#testFindUserLabelNameByProjectNoReadWithProjectId",
      "CardLabelRepositoryTest#testAddDuplicateNameLabel",
      "CardLabelRepositoryTest#testUpdateLabel",
      "CardLabelRepositoryTest#testFindListValueByIdWithBadId",
      "CardLabelRepositoryTest#testMoveLabelListValueToOrder",
      "CardLabelRepositoryTest#testRemoveLabel",
      "CardLabelRepositoryTest#testFindListValueById",
      "CardLabelRepositoryTest#testUpdateSystemLabel",
      "CardLabelRepositoryTest#testUpdateLabelWithValuesAndNewType",
      "CardLabelRepositoryTest#testFindLabelByNameWith2Projects",
      "CardLabelRepositoryTest#testHandleLabelListValueMetadata",
      "CardLabelRepositoryTest#testLabelListValueMapping",
      "CardLabelRepositoryTest#testFindLabelByName",
      "CardLabelRepositoryTest#testFindLabelValueByLabelAndValue",
      "CardLabelRepositoryTest#testCountLabelListValueUse",
      "CardLabelRepositoryTest#testWrongUpdateSystemLabel",
      "CardLabelRepositoryTest#testRemoveLabelListValue",
      "CardEventRepositoryTest#findUsersIdFor",
      "NotificationServiceTest#sendEmailTest",
      "NotificationServiceTest#sendEmailTestWithoutMyEvents",
      "NotificationServiceTest#testCheck",
      "CardDataRepositoryTest#testFindMetadataById",
      "CardDataRepositoryTest#testFindDataByIdsWithEmptyCollection",
      "UserRepositoryTest#updateProfile",
      "UserRepositoryTest#existUser",
      "UserRepositoryTest#findAll",
      "UserRepositoryTest#findById",
      "UserRepositoryTest#findUsersInProject",
      "UserRepositoryTest#testRememberMeTokenFlow",
      "UserRepositoryTest#testFindUsersId",
      "UserRepositoryTest#testDeleteAllTokens",
      "UserRepositoryTest#findByIds",
      "UserRepositoryTest#findUsers",
      "UserRepositoryTest#findExistingUser",
      "UserRepositoryTest#createUserTest",
      "UserRepositoryTest#existUserAndEnabled",
      "UserRepositoryTest#findNonExistingUser",
      "UserRepositoryTest#testUserNameUniquenessConstraint",
      "UserRepositoryTest#testToggle",
      "UserRepositoryTest#createUserFullTeste",
      "CardServiceTest#testMoveCardToColumnAndReorder",
      "CardServiceTest#testUpdateCard",
      "CardServiceTest#testCloneCard",
      "CardServiceTest#testFetchAllInColumn",
      "ConfigurationRepositoryTest#testGetValue",
      "ConfigurationRepositoryTest#testGetValueNotFound",
      "ConfigurationRepositoryTest#delete",
      "ConfigurationRepositoryTest#findAll",
      "ConfigurationRepositoryTest#findFor",
      "ConfigurationRepositoryTest#insertDuplicateKey",
      "ConfigurationRepositoryTest#testHasKeyDefined",
      "ConfigurationRepositoryTest#testGetValueOrNull",
      "ConfigurationRepositoryTest#updateOrCreate",
      "ConfigurationRepositoryTest#testUpdate",
      "PermissionServiceTest#testDeleteRoleInProject",
      "PermissionServiceTest#testFindUserRolesByProjectOnGlobal",
      "PermissionServiceTest#testAddPermissionsToRole",
      "PermissionServiceTest#testCreateDuplicateRoleForProject",
      "PermissionServiceTest#testCreateDuplicateRole",
      "PermissionServiceTest#findByNameNotFoundInProject",
      "PermissionServiceTest#testFindUsersByRoleInProject",
      "PermissionServiceTest#testDeleteNotExistingRole",
      "PermissionServiceTest#testAddRoleToUser",
      "PermissionServiceTest#testFindPermissionByUsernameInProject",
      "PermissionServiceTest#findByNameInProject",
      "PermissionServiceTest#findByName",
      "PermissionServiceTest#testAddDuplicateRoleToUser",
      "PermissionServiceTest#testDeleteNotExistingRoleInProject",
      "PermissionServiceTest#testPermissionsGroupedByProjectIdForUsername",
      "PermissionServiceTest#testAddPermissionsToRoleInProject",
      "PermissionServiceTest#testCreateRoleForProject",
      "PermissionServiceTest#findByNameNotFound",
      "PermissionServiceTest#testFindUsersByRole",
      "PermissionServiceTest#testRemoveRoleToUserInProject",
      "PermissionServiceTest#testCreateRole",
      "PermissionServiceTest#testFindBasePermissionByUsername",
      "PermissionServiceTest#testFindUserRolesByProjectOnProject",
      "PermissionServiceTest#testDeleteRole",
      "PermissionServiceTest#testAddRoleToUserInProject",
      "PermissionServiceTest#testRemoveRoleToUser",
      "PermissionServiceTest#testAddDuplicateRoleToUserInProject",
      "ExportImportServiceTest#testImportAndExport",
      "BoardRepositoryTest#testFindProjectAndBoardByColumnId",
      "BoardRepositoryTest#testRepoCreationConstraint",
      "BoardRepositoryTest#testFindByShortName",
      "BoardRepositoryTest#testFindIdByShortName",
      "BoardRepositoryTest#testNothingFoundForFindIdByShortName",
      "BoardRepositoryTest#updateBoardTest",
      "BoardRepositoryTest#testRepoCreation",
      "BoardRepositoryTest#testFindBoard",
      "BoardRepositoryTest#testNothingFoundForFindByShortName",
      "BoardRepositoryTest#findBoardInfoTest",
      "CardDataServiceTest#testCheckEnsureReferenceIdConstraints",
      "CardDataServiceTest#createFileWithoutCard",
      "CardDataServiceTest#assignFileToCard",
      "CardDataServiceTest#findByIds",
      "CardDataServiceTest#assignSameFileToCard",
      "BulkOperationServiceTest#testWatch",
      "BulkOperationServiceTest#testReAssign",
      "BulkOperationServiceTest#testRemoveWatch",
      "BulkOperationServiceTest#testRemoveAssign",
      "BulkOperationServiceTest#testSetDueDate",
      "BulkOperationServiceTest#testRemoveDueDate",
      "BulkOperationServiceTest#testRemoveMilestone",
      "BulkOperationServiceTest#testUserLabel",
      "BulkOperationServiceTest#testAssign",
      "BulkOperationServiceTest#testSetMilestone",
      "EventEmitterTest#emitRemoveLabelValueToCardsTest",
      "EventEmitterTest#emitAddLabelValueToCardsTest",
      "EventEmitterTest#emitUpdateBoardTest",
      "EventEmitterTest#emitCreateProjectTest",
      "EventEmitterTest#emitUpdateUserProfileTest",
      "EventEmitterTest#emitUpdateOrAddValueToCardsTest",
      "EventEmitterTest#emitUpdateProjectTest"
    ]
  },
  "com.squareup.okhttp3:okhttp": {
    "retrofit": [
      "GuavaCallAdapterFactoryTest#rawResponseTypeThrows",
      "GuavaCallAdapterFactoryTest#nonListenableFutureReturnsNull",
      "GuavaCallAdapterFactoryTest#responseType",
      "GuavaCallAdapterFactoryTest#rawTypeThrows",
      "JaxbConverterFactoryTest#externalDtd",
      "JaxbConverterFactoryTest#externalEntity",
      "JaxbConverterFactoryTest#userSuppliedJaxbContext",
      "JaxbConverterFactoryTest#characterEncoding",
      "JaxbConverterFactoryTest#malformedXml",
      "JaxbConverterFactoryTest#unrecognizedField",
      "JaxbConverterFactoryTest#xmlResponseBody",
      "JaxbConverterFactoryTest#xmlRequestBody",
      "CompletableWithSchedulerTest#completableUsesScheduler",
      "MoshiConverterFactoryTest#requireFullResponseDocumentConsumption",
      "MoshiConverterFactoryTest#annotations",
      "MoshiConverterFactoryTest#failOnUnknown",
      "MoshiConverterFactoryTest#anInterface",
      "MoshiConverterFactoryTest#nonUtf8BomIsNotSkipped",
      "MoshiConverterFactoryTest#withNulls",
      "MoshiConverterFactoryTest#anImplementation",
      "MoshiConverterFactoryTest#asLenient",
      "MoshiConverterFactoryTest#utf8BomSkipped",
      "AsyncTest#success",
      "AsyncTest#throwingInOnCompleteDeliveredToPlugin",
      "AsyncTest#failure",
      "AsyncTest#bodyThrowingInOnSafeSubscriberErrorDeliveredToPlugin",
      "AsyncTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "JacksonConverterFactoryTest#anInterface",
      "JacksonConverterFactoryTest#anImplementation",
      "WireConverterFactoryTest#serializeAndDeserialize",
      "WireConverterFactoryTest#deserializeWrongClass",
      "WireConverterFactoryTest#deserializeWrongValue",
      "WireConverterFactoryTest#deserializeWrongType",
      "WireConverterFactoryTest#deserializeEmpty",
      "CompletableThrowingSafeSubscriberTest#throwingInOnCompleteDeliveredToPlugin",
      "CompletableThrowingSafeSubscriberTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "ObservableWithSchedulerTest#bodyUsesScheduler",
      "ObservableWithSchedulerTest#resultUsesScheduler",
      "ObservableWithSchedulerTest#responseUsesScheduler",
      "SimpleXmlConverterFactoryTest#deserializeWrongClass",
      "SimpleXmlConverterFactoryTest#deserializeWrongValue",
      "SimpleXmlConverterFactoryTest#honorsCharacterEncoding",
      "SimpleXmlConverterFactoryTest#bodyWays",
      "AsyncTest#bodyThrowingFatalInOnErrorPropagates",
      "CancelDisposeTest#disposeCancelsCall",
      "CancelDisposeTest#cancelDoesNotDispose",
      "ScalarsConverterFactoryTest#unsupportedResponseTypesNotMatched",
      "ScalarsConverterFactoryTest#supportedResponseTypes",
      "ScalarsConverterFactoryTest#supportedRequestTypes",
      "ScalarsConverterFactoryTest#unsupportedRequestTypesNotMatched",
      "SingleWithSchedulerTest#bodyUsesScheduler",
      "SingleWithSchedulerTest#resultUsesScheduler",
      "SingleWithSchedulerTest#responseUsesScheduler",
      "SingleTest#resultFailure",
      "SingleTest#bodySuccess200",
      "SingleTest#bodySuccess404",
      "SingleTest#responseFailure",
      "SingleTest#responseSuccess200",
      "SingleTest#responseSuccess404",
      "SingleTest#bodyFailure",
      "SingleTest#subscribeTwice",
      "SingleTest#resultSuccess200",
      "SingleTest#resultSuccess404",
      "ObservableTest#resultFailure",
      "ObservableTest#bodySuccess200",
      "ObservableTest#bodySuccess404",
      "ObservableTest#observableAssembly",
      "ObservableTest#responseFailure",
      "ObservableTest#responseSuccess200",
      "ObservableTest#responseSuccess404",
      "ObservableTest#bodyFailure",
      "ObservableTest#subscribeTwice",
      "ObservableTest#resultSuccess200",
      "ObservableTest#resultSuccess404",
      "Java8CallAdapterFactoryTest#rawResponseTypeThrows",
      "Java8CallAdapterFactoryTest#nonListenableFutureReturnsNull",
      "Java8CallAdapterFactoryTest#responseType",
      "Java8CallAdapterFactoryTest#rawTypeThrows",
      "MaybeWithSchedulerTest#bodyUsesScheduler",
      "MaybeWithSchedulerTest#resultUsesScheduler",
      "MaybeWithSchedulerTest#responseUsesScheduler",
      "SingleThrowingTest#responseThrowingInOnSuccessDeliveredToPlugin",
      "SingleThrowingTest#resultThrowingInOnSuccessDeliveredToPlugin",
      "SingleThrowingTest#bodyThrowingInOnSuccessDeliveredToPlugin",
      "SingleThrowingTest#responseThrowingInOnErrorDeliveredToPlugin",
      "SingleThrowingTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "ProtoConverterFactoryTest#serializeAndDeserialize",
      "ProtoConverterFactoryTest#deserializeWrongClass",
      "ProtoConverterFactoryTest#deserializeWrongValue",
      "ProtoConverterFactoryTest#deserializeUsesRegistry",
      "ProtoConverterFactoryTest#deserializeWrongType",
      "ProtoConverterFactoryTest#deserializeEmpty",
      "CompletableFutureTest#bodySuccess200",
      "CompletableFutureTest#bodySuccess404",
      "CompletableFutureTest#responseFailure",
      "CompletableFutureTest#responseSuccess200",
      "CompletableFutureTest#responseSuccess404",
      "CompletableFutureTest#bodyFailure",
      "FlowableWithSchedulerTest#bodyUsesScheduler",
      "FlowableWithSchedulerTest#resultUsesScheduler",
      "FlowableWithSchedulerTest#responseUsesScheduler",
      "FlowableTest#resultFailure",
      "FlowableTest#bodySuccess200",
      "FlowableTest#bodySuccess404",
      "FlowableTest#responseRespectsBackpressure",
      "FlowableTest#bodyRespectsBackpressure",
      "FlowableTest#responseFailure",
      "FlowableTest#responseSuccess200",
      "FlowableTest#responseSuccess404",
      "FlowableTest#bodyFailure",
      "FlowableTest#resultRespectsBackpressure",
      "FlowableTest#subscribeTwice",
      "FlowableTest#resultSuccess200",
      "FlowableTest#resultSuccess404",
      "FutureTest#bodySuccess200",
      "FutureTest#bodySuccess404",
      "FutureTest#responseFailure",
      "FutureTest#responseSuccess200",
      "FutureTest#responseSuccess404",
      "FutureTest#bodyFailure",
      "CompletableThrowingTest#throwingInOnCompleteDeliveredToPlugin",
      "CompletableThrowingTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "GsonConverterFactoryTest#requireFullResponseDocumentConsumption",
      "GsonConverterFactoryTest#deserializeUsesConfiguration",
      "GsonConverterFactoryTest#anInterface",
      "GsonConverterFactoryTest#serializeUsesConfiguration",
      "GsonConverterFactoryTest#anImplementation",
      "SingleTest#responseThrowingInOnNextDeliveredToError",
      "SingleTest#resultThrowingInOnNextDeliveredToError",
      "SingleTest#bodyThrowingInOnNextDeliveredToError",
      "ListenableFutureTest#bodySuccess200",
      "ListenableFutureTest#bodySuccess404",
      "ListenableFutureTest#responseFailure",
      "ListenableFutureTest#responseSuccess200",
      "ListenableFutureTest#responseSuccess404",
      "ListenableFutureTest#bodyFailure",
      "Java8OptionalConverterFactoryTest#delegates",
      "Java8OptionalConverterFactoryTest#optional",
      "Java8OptionalConverterFactoryTest#onlyMatchesOptional",
      "CompletableTest#completableSuccess200",
      "CompletableTest#completableSuccess404",
      "CompletableTest#completableFailure",
      "CompletableTest#subscribeTwice",
      "MaybeThrowingTest#responseThrowingInOnSuccessDeliveredToPlugin",
      "MaybeThrowingTest#resultThrowingInOnSuccessDeliveredToPlugin",
      "MaybeThrowingTest#bodyThrowingInOnSuccessDeliveredToPlugin",
      "MaybeThrowingTest#responseThrowingInOnErrorDeliveredToPlugin",
      "MaybeThrowingTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "ScalarsConverterPrimitivesFactoryTest#supportedResponseTypes",
      "FlowableThrowingTest#responseThrowingInOnNextDeliveredToError",
      "FlowableThrowingTest#resultThrowingInOnNextDeliveredToError",
      "FlowableThrowingTest#responseThrowingInOnErrorDeliveredToPlugin",
      "FlowableThrowingTest#resultThrowingInOnErrorDeliveredToPlugin",
      "FlowableThrowingTest#resultThrowingInOnCompletedDeliveredToPlugin",
      "FlowableThrowingTest#bodyThrowingInOnNextDeliveredToError",
      "FlowableThrowingTest#responseThrowingInOnCompleteDeliveredToPlugin",
      "FlowableThrowingTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "FlowableThrowingTest#bodyThrowingInOnCompleteDeliveredToPlugin",
      "CancelDisposeTest#disposeBeforeEnqueueDoesNotEnqueue",
      "ObservableThrowingSafeSubscriberTest#responseThrowingInOnNextDeliveredToError",
      "ObservableThrowingSafeSubscriberTest#resultThrowingInOnNextDeliveredToError",
      "ObservableThrowingSafeSubscriberTest#responseThrowingInOnErrorDeliveredToPlugin",
      "ObservableThrowingSafeSubscriberTest#resultThrowingInOnErrorDeliveredToPlugin",
      "ObservableThrowingSafeSubscriberTest#resultThrowingInOnCompletedDeliveredToPlugin",
      "ObservableThrowingSafeSubscriberTest#bodyThrowingInOnNextDeliveredToError",
      "ObservableThrowingSafeSubscriberTest#responseThrowingInOnCompleteDeliveredToPlugin",
      "ObservableThrowingSafeSubscriberTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "ObservableThrowingSafeSubscriberTest#bodyThrowingInOnCompleteDeliveredToPlugin",
      "MaybeTest#resultFailure",
      "MaybeTest#bodySuccess200",
      "MaybeTest#bodySuccess404",
      "MaybeTest#responseFailure",
      "MaybeTest#responseSuccess200",
      "MaybeTest#responseSuccess404",
      "MaybeTest#bodyFailure",
      "MaybeTest#subscribeTwice",
      "MaybeTest#resultSuccess200",
      "MaybeTest#resultSuccess404",
      "ObservableThrowingTest#responseThrowingInOnNextDeliveredToError",
      "ObservableThrowingTest#resultThrowingInOnNextDeliveredToError",
      "ObservableThrowingTest#responseThrowingInOnErrorDeliveredToPlugin",
      "ObservableThrowingTest#resultThrowingInOnErrorDeliveredToPlugin",
      "ObservableThrowingTest#resultThrowingInOnCompletedDeliveredToPlugin",
      "ObservableThrowingTest#bodyThrowingInOnNextDeliveredToError",
      "ObservableThrowingTest#responseThrowingInOnCompleteDeliveredToPlugin",
      "ObservableThrowingTest#bodyThrowingInOnErrorDeliveredToPlugin",
      "ObservableThrowingTest#bodyThrowingInOnCompleteDeliveredToPlugin",
      "ScalaCallAdapterFactoryTest#rawResponseTypeThrows",
      "ScalaCallAdapterFactoryTest#nonListenableFutureReturnsNull",
      "ScalaCallAdapterFactoryTest#responseType",
      "ScalaCallAdapterFactoryTest#rawTypeThrows",
      "GuavaOptionalConverterFactoryTest#delegates",
      "GuavaOptionalConverterFactoryTest#optional",
      "GuavaOptionalConverterFactoryTest#onlyMatchesOptional",
      "ObservableTest#responseUnsubscribedDoesNotCallCompleted",
      "ObservableTest#responseRespectsBackpressure",
      "ObservableTest#bodyRespectsBackpressure",
      "ObservableTest#resultRespectsBackpressure"
    ],
    "sofa-tracer": [
      "OkHttpTracerTest#testOkHttpTracer",
      "OkHttpTracerNonJsonTest#testOkHttpTracer"
    ],
    "picasso2-okhttp3-downloader": [
      "OkHttp3DownloaderTest#networkPolicyNoCache",
      "OkHttp3DownloaderTest#networkPolicyNoStore",
      "OkHttp3DownloaderTest#readsContentLengthHeader",
      "OkHttp3DownloaderTest#offlineStaleResponse",
      "OkHttp3DownloaderTest#throwsResponseException",
      "OkHttp3DownloaderTest#shutdownClosesCache",
      "OkHttp3DownloaderTest#cachedResponse"
    ]
  },
  "org.apache.derby:derby": {
    "languagetool": [
      "MatchDatabaseTest#test",
      "AtomFeedCheckerTest#testCheckToDatabase"
    ],
    "querydsl": [
      "QueryMutabilityTest#clone_",
      "QueryMutabilityTest#test"
    ],
    "Argus": [
      "AbstractSchemaServiceTest#testPutNothingCached",
      "AbstractSchemaServiceTest#testPutEverythingCached",
      "AbstractSchemaServiceTest#testNumHoursUntilNextFlushBloomFilter",
      "AbstractSchemaServiceTest#testPutPartialCached",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndInertiaOne",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForMoreThanOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStampsReturnNull",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_Scenario1",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTime",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndZeroInertia",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeriesMultipleTriggers",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ClearNotification",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_OnCooldown",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_AlertWithMultipleMetricsNotificationSentForEach",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWehnNoDatapoints",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps2",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps3",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps4",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps5",
      "SystemConfiguratorTest#testLifecycle",
      "WardenServiceTest#testAssertSubsystemUsePermitted_AdminUser",
      "WardenServiceTest#testServiceIsSingleton",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
      "WardenServiceTest#testEnableWarden",
      "WardenServiceTest#testSuspendAdminUser",
      "WardenServiceTest#testAssertSubsystemUsePermitted_ExpiredSuspension",
      "WardenServiceTest#testSuspendUser",
      "WardenServiceTest#testDisableWarden",
      "WardenServiceTest#testModifyPolicyCounterEnablesAlert",
      "WardenServiceTest#testSubSystemSuspensionLevels",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NoSuspension",
      "WardenServiceTest#testUpdatePolicyCounterEnablesAlert",
      "WardenServiceTest#testWardenDashboard",
      "WardenServiceTest#testWardenAlertUsesUpdatedPolicyLimitForUser",
      "MainTest#testSchemaCommitClientInterrupt",
      "MainTest#testAlertClientInterrupt",
      "MainTest#testAnnotationCommitClientInterrupt",
      "MainTest#testMetricCommitClientInterrupt",
      "NamespaceServiceTest#testUserIsPermitted",
      "NamespaceServiceTest#testCreateNamespace",
      "NamespaceServiceTest#testFindNamespaceByPrimaryKey",
      "NamespaceServiceTest#testAdditionalUserIsPermitted",
      "NamespaceServiceTest#testNamespaceUnique",
      "NamespaceServiceTest#testAddAdditionalUsersToNamespace",
      "GlobalInterlockServiceTest#testObtainReleaseLock",
      "GlobalInterlockServiceTest#testObtainOnExpiredScheduleLock",
      "GlobalInterlockServiceTest#testLockExclusivity",
      "GlobalInterlockServiceTest#testObtainRefreshLock",
      "GlobalInterlockServiceTest#testReleaseNonexistentScheduleLock",
      "AlertServiceTest#testFindSharedAlertsByOwner",
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#testUpdateNotification",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#testAlertDelete",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testfindAlertsByOwner",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindAlertByNameAndOwner",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#findAlertsModifiedAfterDate",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testAlertDeleteCreateAnotherAlertWithSameName",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testFindAlertsByOwnerPaged",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser",
      "AlertServiceTest#testCountSharedAlertsMetaPaged",
      "AlertServiceTest#testFindPrivateAlertsPagedForNonPrivilegedUser",
      "AlertServiceTest#testAlertsCountContext",
      "AlertServiceTest#testCountAlertsByOwner",
      "AlertServiceTest#testfindAlertsByOwnerMeta",
      "AlertServiceTest#testDeletedTriggersInNotifications",
      "AlertServiceTest#testAlertEnqueue",
      "DashboardServiceTest#testFindSharedDashboardsByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsByOwner",
      "DashboardServiceTest#testFindDashboardsMetaByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwner",
      "DashboardServiceTest#testFindDashboardsMeta",
      "DashboardServiceTest#testDashboard_FindShareDelete",
      "DashboardServiceTest#testFindDashboardsByOwnerMeta",
      "DashboardServiceTest#testFindSharedDashboardsMetaByVersion",
      "DashboardServiceTest#testFindDashboardsByOwnerMetaAndByVersion",
      "DashboardServiceTest#testDashboardCrud",
      "DashboardServiceTest#testDashboard_FindShareDeleteByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMeta",
      "ManagementServiceTest#testPrivilegeGrant",
      "AuditServiceTest#testUpdateAudit",
      "AuditServiceTest#testFindAll",
      "AuditServiceTest#testCreateAudit",
      "AuditServiceTest#testFindByMessage",
      "AuditServiceTest#testFindByJPAEntity",
      "AuditServiceTest#testFindByHostName",
      "OAuthServiceTest#testAcceptOauthModifiedParams",
      "OAuthServiceTest#testAcceptOauth",
      "OAuthServiceTest#testCreateAuthorizationCode",
      "OAuthServiceTest#testAcceptOauthInvalidParams",
      "SchedulingServiceTest#testAlertSchedulingWithGlobalInterlock",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinMaxDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithTag",
      "MetricFederationTest#testEndPointFederationForkJoinMinDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsampler",
      "MetricFederationTest#testTimeFederationFork",
      "MonitorServiceTest#testAlertsCreatedOnStartMonitoring",
      "MonitorServiceTest#testConcurrentUpdates",
      "MonitorServiceTest#test_getCounterFromMetricName",
      "MonitorServiceTest#testServiceIsSingleton",
      "MonitorServiceTest#testEnableDisableMonitoring",
      "MonitorServiceTest#test_MonitoringDashboardNotNull",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithDownsampling",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags",
      "DefaultDiscoveryServiceTest#testWildcardQueriesNoMatch",
      "DefaultDiscoveryServiceTest#testNonWildcardQuery",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchExceedingLimit",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags1",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithinLimit",
      "UserServiceTest#testDefaultUserExistence",
      "UserServiceTest#testAdminUserExistence",
      "UserServiceTest#testUserCrud",
      "UserServiceTest#testUniqueUserCount",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricTagvRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutCreateUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutUpdateUsingScopeAndMetricSchemaIndex",
      "ChartServiceTest#testDeleteChartById",
      "ChartServiceTest#testDeleteChart",
      "ChartServiceTest#testGetChartsForEntity",
      "ChartServiceTest#testCreateChart",
      "ChartServiceTest#testGetChartByPrimaryKey",
      "ChartServiceTest#testGetChartsByOwner",
      "CallbackServiceTest#testCallbackNotifier",
      "MQServiceTest#testServiceIsSingleton",
      "MQServiceTest#testBulkPutAndGetMessages",
      "MQServiceTest#testPutAndBulkGetMessages",
      "MQServiceTest#testPutAndBulkGetMessagesMultiThredaing",
      "AbstractTSDBServiceTest#testCyclingIterator",
      "NotifierTest#testUpdatingTriggerName",
      "NotifierTest#testDBNotifier",
      "NotifierTest#testAbsoluteTimeStampsInExpression",
      "NotifierTest#testTemplateNaming",
      "CachedDiscoveryServiceTest#testWildcardExpansionWithinLimit",
      "CachedDiscoveryServiceTest#testWildcardExpansionExceedingLimit"
    ]
  },
  "org.glassfish.jersey.core:jersey-server": {
    "YCSB": [
      "IntegrationTest#testDeleteOpsBenchmarkSuccess",
      "IntegrationTest#testInsertOpsBenchmarkSuccess",
      "IntegrationTest#testReadOpsBenchmarkSuccess",
      "IntegrationTest#testUpdateOpsBenchmarkSuccess",
      "RestClientTest#read_200",
      "RestClientTest#read_403",
      "RestClientTest#read_404",
      "RestClientTest#update_200",
      "RestClientTest#update_403",
      "RestClientTest#update_404",
      "RestClientTest#insert_200",
      "RestClientTest#insert_403",
      "RestClientTest#insert_404",
      "RestClientTest#delete_200",
      "RestClientTest#delete_403",
      "RestClientTest#delete_404"
    ],
    "ff4j": [
      "ApiKeyValidatorFilterTest#testFilterNondeader",
      "ApiKeyValidatorFilterTest#testFilterApiKeyExpired",
      "ApiKeyValidatorFilterTest#testFilterInvalid",
      "ApiKeyValidatorFilterTest#testFilterApiKeyNotFound",
      "SecurityAuthorizationFilterTest#testRoleAllowedInvalid",
      "SecurityAuthorizationFilterTest#testDenyAll",
      "FF4JIntegrationTest#testFF4j",
      "SecurityAuthenticationFilterTest#testUnAuthorized1NoAuthorization",
      "SecurityAuthenticationFilterTest#testUnAuthorizedApiKey",
      "SecurityAuthenticationFilterTest#testNoAuthorizationAttributeInHeader",
      "SecurityAuthenticationFilterTest#testUnAuthorizedInvalidValue"
    ],
    "openscoring": [
      "ModelResourceTest#linearRegressionAuto",
      "ModelResourceTest#associationRulesShopping",
      "ModelResourceTest#decisionTreeIris"
    ]
  },
  "commons-codec:commons-codec": {
    "light-4j": [
      "AuditHandlerTest#testAuditWithTrace",
      "AuditHandlerTest#testAuditWithoutTrace",
      "DumpHandlerTest#tesLog",
      "CorrelationHandlerTest#testGetWithoutTid"
    ],
    "heritrix3": [
      "FetchHTTPTest#testHttpProxyAuth",
      "FetchHTTPTest#testDigestAuth",
      "FetchHTTPTest#testBasicAuth"
    ],
    "httpcomponents-client": [
      "TestByteArrayCacheEntrySerializer#canSerializeEntriesWithVariantMaps"
    ]
  },
  "org.elasticsearch.plugin:transport-netty4-client": {
    "immutables": [
      "ElasticPersonTest#regex_forElastic",
      "ElasticAggregationTest#no_groupBy",
      "ElasticAggregationTest#agg1",
      "ElasticAggregationTest#agg2",
      "ElasticAggregationTest#empty",
      "ScrollingTest#withLimit",
      "ScrollingTest#noLimit",
      "ElasticIntegrationTests#projection",
      "ElasticIntegrationTests#nullable",
      "ElasticIntegrationTests#comparison",
      "ElasticIntegrationTests#optional",
      "ElasticIntegrationTests#empty",
      "ElasticIntegrationTests#equality",
      "ElasticIntegrationTests#basic",
      "ElasticIntegrationTests#startsWith",
      "ElasticIntegrationTests#contains",
      "ElasticIntegrationTests#fetch",
      "ElasticIntegrationTests#whitespace",
      "ElasticIntegrationTests#endsWith"
    ],
    "Jest": [
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeWithCIDRMaskAggregation",
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeAggregation",
      "Ipv4RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "FlushIntegrationTest#testFlushAll",
      "FlushIntegrationTest#testFlushWithWaitifOngoing",
      "FlushIntegrationTest#testFlushWithForce",
      "FlushIntegrationTest#testFlushSpecificIndices",
      "CatIntegrationTest#shouldChangeOrderOfColumnsByspecifyingParameters",
      "CatIntegrationTest#shouldFilterResultsToASingleIndex",
      "CatIntegrationTest#shouldProperlyMapSingleResult",
      "CatIntegrationTest#shouldDisplayRecoveryForSingleResult",
      "CatIntegrationTest#catShardsSingleIndex",
      "CatIntegrationTest#catNodes",
      "CatIntegrationTest#shouldDisplayAliasForSingleResult",
      "CatIntegrationTest#shouldReturnEmptyPlainTextForIndices",
      "CatIntegrationTest#catAllShards",
      "GetSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "CloseIndexIntegrationTest#testClose",
      "SearchScrollIntegrationTest#clearScrollAll",
      "SearchScrollIntegrationTest#searchWithValidQuery",
      "JestClientFactoryIntegrationTest#testIdleConnectionReaper",
      "JestClientFactoryIntegrationTest#testDiscoveryWithFiltering",
      "JestClientFactoryIntegrationTest#testNoIdleConnectionReaper",
      "JestClientFactoryIntegrationTest#testDiscovery",
      "MultiSearchIntegrationTest#multipleSearchRequests",
      "MultiSearchIntegrationTest#multipleSearchRequestsWithOneFaulty",
      "RangeAggregationIntegrationTest#testGetRangeAggregation",
      "RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "GetSettingsIntegrationTest#testBasicFlow",
      "GetSettingsIntegrationTest#testForNonexistentIndex",
      "StatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "StatsAggregationIntegrationTest#testGetStatsAggregation",
      "CardinalityAggregationIntegrationTest#testBadAggregationQueryResult",
      "CardinalityAggregationIntegrationTest#testGetCardinalityAggregation",
      "SignificantTermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "SignificantTermsAggregationIntegrationTest#testGetSignificantTermsAggregation",
      "MissingAggregationIntegrationTest#testGetMissingAggregation",
      "MissingAggregationIntegrationTest#testBadAggregationQueryResult",
      "PendingClusterTasksIntegrationTest#pendingClusterTasks",
      "MultiGetIntegrationTest#getMultipleDocsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getMultipleDocsWhenAllIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getWithoutSource",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenAllIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getWithPartialSource",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getMultipleDocsWhenSomeIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenSomeIndexedDocsAreRequested",
      "GetMappingIntegrationTest#testWithSingleIndex",
      "GetMappingIntegrationTest#testWithMultipleIndices",
      "GetMappingIntegrationTest#testWithoutParameters",
      "UpdateIntegrationTest#partialDocUpdateWithValidParameters",
      "UpdateIntegrationTest#scriptedUpdateWithValidParameters",
      "UpdateIntegrationTest#partialDocUpdateWithValidVersion",
      "UpdateIntegrationTest#partialDocUpdateWithInvalidVersion",
      "ValueCountAggregationIntegrationTest#testBadAggregationQueryResult",
      "ValueCountAggregationIntegrationTest#testGetValueCountAggregation",
      "DateRangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "DateRangeAggregationIntegrationTest#testGetDateRangeAggregation",
      "DeleteStoredScriptIntegrationTest#delete_a_stored_script_for_Painless",
      "PutMappingIntegrationTest#testPutMappingWithDocumentMapperBuilder",
      "PutMappingIntegrationTest#testPutMapping",
      "SumAggregationIntegrationTest#testBadAggregationQueryResult",
      "SumAggregationIntegrationTest#testGetSumAggregation",
      "CreateStoredScriptIntegrationTest#createAStoredScript",
      "HistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "HistogramAggregationIntegrationTest#testGetHistogramAggregation",
      "ModifyAliasesIntegrationTest#testAddAliasForMultipleIndex",
      "ModifyAliasesIntegrationTest#testAddAliasWithRouting",
      "ModifyAliasesIntegrationTest#testAddAlias",
      "ModifyAliasesIntegrationTest#testRemoveAlias",
      "ModifyAliasesIntegrationTest#testAddAndRemoveAlias",
      "UpdateSettingsIntegrationTest#testBasicFlowForAllIndices",
      "UpdateSettingsIntegrationTest#testWithEmptySource",
      "UpdateSettingsIntegrationTest#testBasicFlowForTargetedIndex",
      "UpdateSettingsIntegrationTest#testWithNullSource",
      "UpdateSettingsIntegrationTest#testWithEmptyJsonSource",
      "UpdateSettingsIntegrationTest#testBasicFlowForNonExistingIndex",
      "IndicesExistsIntegrationTest#indexNotExists",
      "IndicesExistsIntegrationTest#multiIndexNotExists",
      "IndicesExistsIntegrationTest#indexExists",
      "IndicesExistsIntegrationTest#multiIndexExists",
      "ExplainIntegrationTest#explain",
      "DeleteIntegrationTest#deleteNonExistingDocument",
      "DeleteIntegrationTest#deleteRealDocument",
      "DeleteIntegrationTest#deleteDocumentAsynchronously",
      "HealthIntegrationTest#healthWaitForNoRelocatingShards",
      "HealthIntegrationTest#healthWithTimeout",
      "HealthIntegrationTest#health",
      "HealthIntegrationTest#healthLevelShards",
      "HealthIntegrationTest#healthWaitForStatus",
      "HealthIntegrationTest#healthWithIndex",
      "HealthIntegrationTest#healthOnlyLocal",
      "FiltersAggregationIntegrationTest#testGetAnonymousFiltersAggregation",
      "FiltersAggregationIntegrationTest#testGetFiltersAggregation",
      "MinAggregationIntegrationTest#testBadAggregationQueryResult",
      "MinAggregationIntegrationTest#testGetMinAggregation",
      "PercentileRanksAggregationIntegrationTest#testGetPercentileRanksAggregation",
      "PercentileRanksAggregationIntegrationTest#testBadAggregationQueryResult",
      "OpenIndexIntegrationTest#testOpen",
      "RolloverIntegrationTest#testRollover",
      "StatsIntegrationTest#clusterStatsWithSpecificNodes",
      "StatsIntegrationTest#clusterStats",
      "TermsAggregationIntegrationTest#testGetTermsAggregation",
      "TermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "SortIntegrationTest#searchWithSimpleFieldSort",
      "SortIntegrationTest#searchWithCustomSort",
      "SortIntegrationTest#searchWithMultiIndexSortFieldUnmapped",
      "StatsIntegrationTest#testStatsWithOptions",
      "StatsIntegrationTest#testDefaultStats",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreads",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreadsWithCustomInterval",
      "NodesHotThreadsIntegrationTest#allNodesHotThreads",
      "FilterAggregationIntegrationTest#testGetFilterAggregation",
      "NodesStatsIntegrationTest#nodesStatsWithIndicesAndJvm",
      "NodesStatsIntegrationTest#nodesStats",
      "NodesStatsIntegrationTest#nodesStatsAll",
      "NodesStatsIntegrationTest#nodesStatsWithIndices",
      "RefreshIntegrationTest#testFlushAll",
      "RefreshIntegrationTest#testFlushSpecificIndices",
      "PercentilesAggregationIntegrationTest#testGetPercentilesAggregation",
      "PercentilesAggregationIntegrationTest#testBadAggregationQueryResult",
      "SearchTemplateIntegrationTest#searchTemplateInlineScript",
      "SearchTemplateIntegrationTest#searchTemplateIdScriptWithSort",
      "SearchTemplateIntegrationTest#searchWithValidQuery",
      "SearchTemplateIntegrationTest#searchTemplateInlineScriptWithSort",
      "DateHistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "DateHistogramAggregationIntegrationTest#testGetDateHistogramAggregation",
      "AvgAggregationIntegrationTest#testBadAggregationQueryResult",
      "AvgAggregationIntegrationTest#testGetAvgAggregation",
      "GeoDistanceAggregationTest#testGetGeoDistanceAggregationWithProperName",
      "GeoDistanceAggregationTest#testBadAggregationQueryResult",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingLineBreak",
      "BulkIntegrationTest#bulkOperationWithDefaultIndexAndDefaultType",
      "BulkIntegrationTest#bulkOperationWithCustomGson",
      "BulkIntegrationTest#bulkOperationWithIndex",
      "BulkIntegrationTest#bulkOperationWithIndexCreateOpType",
      "BulkIntegrationTest#bulkOperationWithSourceList",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingWhitespace",
      "BulkIntegrationTest#bulkOperationWithIndexWithParam",
      "BulkIntegrationTest#bulkOperationWithSingleDelete",
      "BulkIntegrationTest#bulkOperationWithMultipleIndexAndDelete",
      "BulkIntegrationTest#bulkOperationWithIndexJsonSource",
      "BulkIntegrationTest#bulkOperationWithMultipleDelete",
      "BulkIntegrationTest#bulkOperationWithMultipleIndex",
      "BulkIntegrationTest#bulkOperationWithIndexAndUpdate",
      "CountIntegrationTest#countWithValidTermQueryOnAllIndices",
      "CountIntegrationTest#countWithMultipleIndices",
      "CountIntegrationTest#countWithValidTermQueryOnSingleIndex",
      "GeoHashGridAggregationIntegrationTest#testGetGeoDistanceAggregationWithProperName",
      "GeoHashGridAggregationIntegrationTest#testBadAggregationQueryResult",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAlias",
      "AliasExistsIntegrationTest#testIndexDoesNotExist",
      "AliasExistsIntegrationTest#testAliasAndIndexDoesNotExist",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAliasAndIndex",
      "AliasExistsIntegrationTest#testAliasesExistsForMultipleIndices",
      "AliasExistsIntegrationTest#testAliasesExists",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificIndex",
      "AliasExistsIntegrationTest#testAliasDoesNotExist",
      "DeleteIndexIntegrationTest#deleteIndex",
      "DeleteIndexIntegrationTest#deleteNonExistingIndex",
      "TypeExistIntegrationTest#indexTypeNotExists",
      "TypeExistIntegrationTest#indexTypeExists",
      "ValidateIntegrationTest#validateQueryWithIndex",
      "ValidateIntegrationTest#validateQueryWithIndexAndType",
      "ReindexIntegrationTest#documentShouldBeTransferredWithQuery",
      "ReindexIntegrationTest#documentShouldNotBeTransferredWithQuery",
      "ReindexIntegrationTest#testWithScriptString",
      "ReindexIntegrationTest#testReindex",
      "JestHttpClientConfiguredProxyIntegrationTest#testConnectionThroughConfiguredProxy",
      "ExtendedStatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "ExtendedStatsAggregationIntegrationTest#testGetExtendedStatsAggregation",
      "GetAliasesIntegrationTest#testGetAliasesForSpecificIndex",
      "GetAliasesIntegrationTest#testGetAliases",
      "GetAliasesIntegrationTest#testGetAliasesForMultipleSpecificIndices",
      "FieldCapabilitiesIntegrationTest#testFieldStats",
      "StateIntegrationTest#clusterStateWithMetadata",
      "StateIntegrationTest#clusterState",
      "ScriptedMetricAggregationIntegrationTest#testGetScriptedMetricAggregation",
      "ScriptedMetricAggregationIntegrationTest#testBadAggregationQueryResult",
      "UpdateByQueryIntegrationTest#update",
      "MaxAggregationIntegrationTest#testGetMaxAggregation",
      "MaxAggregationIntegrationTest#testBadAggregationQueryResult",
      "GetIntegrationTest#get",
      "GetIntegrationTest#getWithType",
      "GetIntegrationTest#getWithSpecialCharacterInDocId",
      "GetIntegrationTest#getWithoutType",
      "GetIntegrationTest#getAsClass",
      "GetIntegrationTest#getAsynchronously",
      "CreateIndexIntegrationTest#createIndexWithSettingsMapAndMappingsString",
      "CreateIndexIntegrationTest#createIndexWithMapSettings",
      "CreateIndexIntegrationTest#createIndexWithDefaultSettings",
      "AnalyzeIntegrationTest#testWithAnalyzerWithTextFormat",
      "AnalyzeIntegrationTest#testWithAnalyzer",
      "AnalyzeIntegrationTest#testWithCustomTransientAnalyzer",
      "PingIntegrationTest#simplePing",
      "TaskInformationIntegrationTest#shouldReturnTaskInformation",
      "SearchShardsIntegrationTest#testBasicFlow",
      "UpdateSettingsIntegrationTest#transientSettingShouldBeUpdated",
      "UpdateSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "JestHttpClientSystemWideProxyIntegrationTest#testConnectionThroughDefaultProxy",
      "GeoBoundsAggregationIntegrationTest#testGeoBoundsAggregation",
      "GeoBoundsAggregationIntegrationTest#testBadAggregationQueryResult",
      "RerouteIntegrationTest#move",
      "GetStoredScriptIntegrationTest#createStoredScript",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndWithoutInfo",
      "NodesInfoIntegrationTest#nodesInfoWithNodeAndWithInfo",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeWithInfo",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeAndInfo",
      "NodesInfoIntegrationTest#nodesInfoWithNodeWithoutInfo",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndMultipleInfo",
      "SearchIntegrationTest#searchWithPercolator",
      "SearchIntegrationTest#searchWithQueryBuilder",
      "SearchIntegrationTest#searchIndexWithTypeWithNullJestId",
      "SearchIntegrationTest#searchWithValidQuery",
      "SearchIntegrationTest#searchWithSourceFilterByQuery",
      "SearchIntegrationTest#searchWithSort",
      "SearchIntegrationTest#suggestQuery",
      "SearchIntegrationTest#searchAndGetFirstHitWithoutSource",
      "SearchIntegrationTest#searchAndGetFirstHitWithSource",
      "SearchIntegrationTest#searchWithMultipleHits",
      "SearchIntegrationTest#searchInnerHits",
      "SearchIntegrationTest#searchWithNoHits",
      "SearchIntegrationTest#testWithEncodedURI",
      "SearchIntegrationTest#searchWithSourceFilterByParam",
      "SearchIntegrationTest#searchWithValidTermQuery",
      "SearchIntegrationTest#searchWithValidQueryAndExplain",
      "IndexIntegrationTest#automaticIdGeneration",
      "IndexIntegrationTest#indexDocumentWithValidParametersAndWithoutSettings",
      "IndexIntegrationTest#indexDocumentWithDateField",
      "PutTemplateIntegrationTest#testPutTemplate"
    ],
    "photon": [
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testFilterWithTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testTagNotTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testFilterWithoutTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyTourism",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testValueInformationButKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testKeyTourismButValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourism"
    ]
  },
  "org.scala-lang:scala-library": {
    "incubator-pinot": [
      "FlakyConsumerRealtimeClusterIntegrationTest",
      "LLCRealtimeClusterSplitCommitIntegrationTest",
      "LLCRealtimeClusterIntegrationTest",
      "HybridClusterIntegrationTest",
      "ConvertToRawIndexMinionClusterIntegrationTest",
      "DeleteAPIHybridClusterIntegrationTest",
      "RealtimeClusterIntegrationTest"
    ],
    "AthenaX": [
      "InstanceManagerITest#testInstantiation",
      "JobDeployerITest#testCreateAthenaXCluster",
      "KafkaJsonConnectorITest#testPassThrough",
      "StartJobITest#testStartJob",
      "JobDeployerTest#testDeployerWithIsolatedConfiguration",
      "ProcessExecutorTest#testCompile",
      "ProcessExecutorTest#testInvalidSql",
      "ProcessExecutorTest#testDirectCompile"
    ],
    "Argus": [
      "MainTest#testSchemaCommitClientInterrupt",
      "MainTest#testAlertClientInterrupt",
      "MainTest#testAnnotationCommitClientInterrupt",
      "MainTest#testMetricCommitClientInterrupt"
    ]
  },
  "org.apache.curator:curator-test": {
    "exhibitor": [
      "TestSuite"
    ],
    "owner": [
      "ZooKeeperLoaderTest#whenPathIsWrongEverythingIsNull",
      "ZooKeeperLoaderTest#shouldLoadPropertiesFromZookeeperSource"
    ],
    "Argus": [
      "AbstractSchemaServiceTest#testPutNothingCached",
      "AbstractSchemaServiceTest#testPutEverythingCached",
      "AbstractSchemaServiceTest#testNumHoursUntilNextFlushBloomFilter",
      "AbstractSchemaServiceTest#testPutPartialCached",
      "SystemConfiguratorTest#testLifecycle",
      "WardenServiceTest#testAssertSubsystemUsePermitted_AdminUser",
      "WardenServiceTest#testServiceIsSingleton",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
      "WardenServiceTest#testEnableWarden",
      "WardenServiceTest#testSuspendAdminUser",
      "WardenServiceTest#testAssertSubsystemUsePermitted_ExpiredSuspension",
      "WardenServiceTest#testSuspendUser",
      "WardenServiceTest#testDisableWarden",
      "WardenServiceTest#testModifyPolicyCounterEnablesAlert",
      "WardenServiceTest#testSubSystemSuspensionLevels",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NoSuspension",
      "WardenServiceTest#testUpdatePolicyCounterEnablesAlert",
      "WardenServiceTest#testWardenDashboard",
      "WardenServiceTest#testWardenAlertUsesUpdatedPolicyLimitForUser",
      "NamespaceServiceTest#testUserIsPermitted",
      "NamespaceServiceTest#testCreateNamespace",
      "NamespaceServiceTest#testFindNamespaceByPrimaryKey",
      "NamespaceServiceTest#testAdditionalUserIsPermitted",
      "NamespaceServiceTest#testNamespaceUnique",
      "NamespaceServiceTest#testAddAdditionalUsersToNamespace",
      "DashboardServiceTest#testFindSharedDashboardsByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsByOwner",
      "DashboardServiceTest#testFindDashboardsMetaByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwner",
      "DashboardServiceTest#testFindDashboardsMeta",
      "DashboardServiceTest#testDashboard_FindShareDelete",
      "DashboardServiceTest#testFindDashboardsByOwnerMeta",
      "DashboardServiceTest#testFindSharedDashboardsMetaByVersion",
      "DashboardServiceTest#testFindDashboardsByOwnerMetaAndByVersion",
      "DashboardServiceTest#testDashboardCrud",
      "DashboardServiceTest#testDashboard_FindShareDeleteByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMeta",
      "ManagementServiceTest#testPrivilegeGrant",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinMaxDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithTag",
      "MetricFederationTest#testEndPointFederationForkJoinMinDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsampler",
      "MetricFederationTest#testTimeFederationFork",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithDownsampling",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags",
      "DefaultDiscoveryServiceTest#testWildcardQueriesNoMatch",
      "DefaultDiscoveryServiceTest#testNonWildcardQuery",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchExceedingLimit",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags1",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithinLimit",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricTagvRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutCreateUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutUpdateUsingScopeAndMetricSchemaIndex",
      "ChartServiceTest#testDeleteChartById",
      "ChartServiceTest#testDeleteChart",
      "ChartServiceTest#testGetChartsForEntity",
      "ChartServiceTest#testCreateChart",
      "ChartServiceTest#testGetChartByPrimaryKey",
      "ChartServiceTest#testGetChartsByOwner",
      "CallbackServiceTest#testCallbackNotifier",
      "AbstractTSDBServiceTest#testCyclingIterator",
      "CachedDiscoveryServiceTest#testWildcardExpansionWithinLimit",
      "CachedDiscoveryServiceTest#testWildcardExpansionExceedingLimit"
    ]
  },
  "io.netty:netty-common": {
    "servicecomb-pack": [
      "AlphaIntegrationWithRandomPortTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#persistsEvent",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithRandomPortTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithRandomPortTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithRandomPortTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithRandomPortTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithRandomPortTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutSagaStartedEvent",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithoutSsl",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithoutSsl"
    ],
    "servicecomb-java-chassis": [
      "TestAbstractRestInvocation#scheduleInvocation_invocationContextDeserializeError",
      "TestAbstractRestInvocation#testDoSendResponseResultOKFilter",
      "TestAbstractRestInvocation#testDoSendResponseResultOK",
      "TestAbstractRestInvocation#scheduleInvocation_flowControlReject",
      "TestMicroserviceManager#getOrCreateMicroserviceVersionRule",
      "TestMicroserviceManager#onMicroserviceNotExistEvent_normal",
      "TestMicroserviceManager#onMicroserviceNotExistEvent_otherApp",
      "TestMicroserviceManager#testCreateRuleServiceNotExists",
      "TestMicroserviceVersionRuleLatest#update_v1",
      "TestMicroserviceVersionRuleLatest#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleLatest#update_all_then_empty",
      "TestMicroserviceVersionRuleLatest#update_v1_then_v2",
      "TestMicroserviceVersionRuleLatest#update_all_then_v3",
      "TestMicroserviceVersionRuleLatest#update_empty",
      "TestMicroserviceVersionRuleLatest#update_all",
      "TestMicroserviceVersionRuleLatest#getVersionRule",
      "TestMicroserviceVersionRuleLatest#update_v1_then_all",
      "TestPropertiesLoader#testMicroservicePropertiesLoader",
      "TestPropertiesLoader#testCanNotAssignExtendedClass",
      "TestPropertiesLoader#testInvalidExtendedClass",
      "TestPropertiesLoader#testInstancePropertiesLoader",
      "TestPropertiesLoader#testEmptyExtendedClass",
      "TestPropertiesLoader#testExtendedClassCompatible",
      "ApolloClientTest#refreshApolloConfig",
      "TestRestClientInvocation#handleResponse",
      "TestAbstractTransportDiscoveryFilter#createDiscoveryTree_ignoreInvalid",
      "TestAppManager#getOrCreateMicroserviceVersionRule",
      "TestAppManager#getOrCreateMicroserviceVersions",
      "TestAppManager#getStaticMicroserviceVersionFactory",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent6",
      "TestConfigurePropertyUtils#testGetPropertiesWithPrefix",
      "TestVertxMetersInitializer#init",
      "TestAbstractTransport#testMyAbstractTransport",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaNormalNotEncode",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceNewSC",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceOldSC",
      "TestAbstractTransport#testMyAbstractTransportException",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaAlreadyHaveQuery",
      "TestServiceRegistryClientImpl#syncHandler_failed",
      "TestServiceRegistryClientImpl#testRegisterSchemaErrorResponse",
      "TestServiceRegistryClientImpl#findServiceInstances_microserviceNotExist",
      "TestServiceRegistryClientImpl#testPrivateMethodCreateHttpClientOptions",
      "TestCseClientHttpRequest#testNormal",
      "TestAbstractServiceRegistry#initAppManagerSpecialMicroserviceVersionFactoryFailed",
      "TestAbstractServiceRegistry#initAppManagerSpecialMicroserviceVersionFactoryNormal",
      "TestAbstractServiceRegistry#registryMicroserviceMapping",
      "TestAbstractServiceRegistry#registryMicroserviceMappingByEndpoints",
      "TestAbstractServiceRegistry#initAppManagerDefault",
      "TestDiscoveryTree#sort",
      "TestMicroserviceVersionRuleStartFrom#update_v1",
      "TestMicroserviceVersionRuleStartFrom#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleStartFrom#update_all_then_empty",
      "TestMicroserviceVersionRuleStartFrom#update_v1_then_v2",
      "TestMicroserviceVersionRuleStartFrom#update_all_then_v3",
      "TestMicroserviceVersionRuleStartFrom#update_empty",
      "TestMicroserviceVersionRuleStartFrom#update_all",
      "TestMicroserviceVersionRuleStartFrom#getVersionRule",
      "TestMicroserviceVersionRuleStartFrom#update_v1_then_all",
      "TestHighwayCodec#testDecodeRequest",
      "TestHighwayCodec#testEncodeResponse",
      "TestHighwayCodec#testEncodeRequest",
      "TestHighwayCodec#testDecodeRequestTraceId",
      "TestHighwayCodec#testReadRequestHeader",
      "TestHighwayCodec#testDecodeResponse",
      "TestAbstractRegisterTask#testHeartbeatFailed",
      "AbortFaultTest#injectFaultError",
      "AbortFaultTest#injectFaultNoPercentageConfig",
      "AbortFaultTest#injectFaultNoErrorCodeConfig",
      "AbortFaultTest#injectFaultNoError",
      "TestMicroserviceWatchTask#testWatchInstanceChanged",
      "TestBodyProcessor#testSetValueTextPlain",
      "TestBodyProcessor#convertFromUrlencoded",
      "TestBodyProcessor#testGetValueRawJson",
      "TestBodyProcessor#testGetValueNoAttrNoStream",
      "TestBodyProcessor#testGetValueTextPlain",
      "TestBodyProcessor#testGetValueContextTypeJson",
      "TestBodyProcessor#testGetValueDefaultJson",
      "TestBodyProcessor#testSetValueRawJson",
      "TestBodyProcessor#testGetProcessorType",
      "TestBodyProcessor#convertFromFormData",
      "TestBodyProcessor#testGetValueRawJsonHaveAttr",
      "TestBodyProcessor#testGetValueRawJsonNoAttrNoStream",
      "TestBodyProcessor#testSetValueTextPlainTypeMismatch",
      "TestBodyProcessor#testGetValueHaveAttr",
      "TestBodyProcessor#testGetParameterPath",
      "TestBodyProcessor#testSetValue",
      "TestInstanceCacheChecker#check_findInstances_serviceNotExist",
      "TestInstanceCacheChecker#check_appManager_empty",
      "TestInstanceCacheChecker#check_findInstances_revisionNotMatch",
      "TestInstanceCacheChecker#check_findInstances_cacheNotMatch",
      "TestInstanceCacheChecker#check_findInstances_failed",
      "TestInstanceCacheChecker#check_StaticMicroservice",
      "TestInstanceCacheChecker#check_microserviceManager_empty",
      "TestMicroserviceInstanceRegisterTask#registerIpSuccess",
      "TestMicroserviceInstanceRegisterTask#registerHostSuccess",
      "TestMicroserviceInstanceRegisterTask#registerIpFailed",
      "TestDefaultHttpClientFilter#extractResult_decodeError",
      "TestDefaultHttpClientFilter#testAfterReceiveResponseNullProduceProcessor",
      "TestDefaultHttpClientFilter#extractResult_decodeError200",
      "TestHighwayServerInvoke#test",
      "TestHighwayServerInvoke#testFlowControlQps",
      "TestServiceCenterTask#testLifeCycleException",
      "TestServiceCenterTask#testLifeCycleSuccess",
      "TestWebsocketClientPool#createHttpClientOptions_notHttp2",
      "TestWebsocketClientPool#createHttpClientOptions_http2",
      "TestHighwayServerConnection#testRequestError",
      "TestHighwayServerConnection#testRequestNormal",
      "TestHighwayServerConnection#testSetParameterNormal",
      "TestHighwayServerConnection#testInvalidMsgType",
      "TestHighwayServerConnection#testSetParameterError",
      "TestHighwayServerConnection#testReqeustHeaderError",
      "TestRestClientRequestImpl#testForm",
      "TestRestClientRequestImpl#doEndWithUpload",
      "TestRestClientRequestImpl#fileBoundaryInfo_nullSubmittedFileName",
      "TestRestClientRequestImpl#fileBoundaryInfo_validSubmittedFileName",
      "TestRestClientRequestImpl#testCookie",
      "TestTransportVertxFactory#getTransportVertx",
      "TestMicroserviceVersionRuleRange#update_v1",
      "TestMicroserviceVersionRuleRange#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleRange#update_all_then_empty",
      "TestMicroserviceVersionRuleRange#update_v1_then_v2",
      "TestMicroserviceVersionRuleRange#update_all_then_v3",
      "TestMicroserviceVersionRuleRange#update_empty",
      "TestMicroserviceVersionRuleRange#update_all",
      "TestMicroserviceVersionRuleRange#getVersionRule",
      "TestMicroserviceVersionRuleRange#update_v1_then_all",
      "TestServletRestTransport#testInitNotPublish",
      "TestServletRestTransport#testCanInitNullAddress",
      "TestServletRestTransport#testGetOrder",
      "TestServletRestTransport#testCanInitListened",
      "TestServletRestTransport#testInitPublishWithUrlPrefix",
      "TestServletRestTransport#testCanInitNotListened",
      "TestServletRestTransport#testInitPublishNoUrlPrefix",
      "TestProduceJsonProcessor#testdecodeResponseNull",
      "TestProduceJsonProcessor#testBufferNormal",
      "TestMicroserviceRegisterTask#testLocalSchemaAndServiceCenterSchemaDiff",
      "TestMicroserviceRegisterTask#testAlreadyRegisteredSchemaIdSetMatch",
      "TestMicroserviceRegisterTask#testAlreadyRegisteredGetSchemaIdSetFailed",
      "TestMicroserviceRegisterTask#testFirstRegisterForProd",
      "TestMicroserviceRegisterTask#testReRegisterForProductAndLocalSchemasAreLess",
      "TestMicroserviceRegisterTask#testReRegisterForDevAndLocalSchemasAreLess",
      "TestMicroserviceRegisterTask#testReRegisteredSetForProd",
      "TestMicroserviceRegisterTask#testNewRegisterSuccess",
      "TestMicroserviceRegisterTask#testRegisterSchemaFailed",
      "TestMicroserviceRegisterTask#testAlreadyRegisteredSchemaIdSetNotMatch",
      "TestMicroserviceRegisterTask#testReRegisteredSetForDev",
      "TestMicroserviceRegisterTask#testNewRegisterFailed",
      "TestMicroserviceRegisterTask#testRegisterSchemaSuccess",
      "TestHighwayClient#testCreateLogin",
      "TestRemoteServiceRegistry#onPullMicroserviceVersionsInstancesEvent",
      "TestRemoteServiceRegistry#testLifeCycle",
      "TestMicroserviceVersions#submitPull",
      "TestMicroserviceVersions#onMicroserviceInstanceChangedNameNotMatch",
      "TestMicroserviceVersions#getOrCreateMicroserviceVersionRule",
      "TestMicroserviceVersions#submitPullProtection",
      "TestMicroserviceVersions#pullInstances_notExists",
      "TestMicroserviceVersions#onMicroserviceInstanceChangedAppNotMatch",
      "TestMicroserviceVersions#setInstancesMatch",
      "TestMicroserviceVersions#safeSetInstances",
      "TestMicroserviceVersions#construct",
      "TestMicroserviceVersions#testIsEventAccept",
      "TestMicroserviceVersions#onMicroserviceInstanceChangedMatch",
      "TestMicroserviceVersions#createAndInitMicroserviceVersionRule",
      "TestMicroserviceVersions#pullInstancesCancel",
      "TestMicroserviceVersions#pullInstancesNull",
      "TestMicroserviceInstanceHeartbeatTask#testHeartbeatNotRegistered",
      "TestMicroserviceInstanceHeartbeatTask#testHeartbeatDisconnect",
      "TestConfigCenterClient#testConfigRefreshModeZero",
      "TestConfigCenterClient#testConfigRefreshException",
      "TestConfigCenterClient#testConnectServer",
      "TestConfigCenterClient#testConfigRefreshModeOne",
      "TestHighwayTransport#testInit",
      "TestHighwayTransport#testSendException",
      "TestHighwayTransport#testHighway",
      "TestHighwayTransport#testGetInstance",
      "TestInstanceCacheCheckTask#autoTask_normal",
      "TestInstanceCacheCheckTask#manualTask",
      "TestInstanceCacheCheckTask#autoTask_invalidIntervalZero",
      "TestInstanceCacheCheckTask#autoTask_clearOldTask",
      "TestInstanceCacheCheckTask#autoTask_invalidIntervalLessThanZero",
      "TestSCBEngine#test",
      "CseAsyncClientHttpRequestTest#testFail",
      "CseAsyncClientHttpRequestTest#testNormal",
      "TestMicroserviceVersionRuleFixed#update_v1",
      "TestMicroserviceVersionRuleFixed#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleFixed#update_all_then_empty",
      "TestMicroserviceVersionRuleFixed#update_v1_then_v2",
      "TestMicroserviceVersionRuleFixed#update_all_then_v3",
      "TestMicroserviceVersionRuleFixed#update_empty",
      "TestMicroserviceVersionRuleFixed#update_all",
      "TestMicroserviceVersionRuleFixed#getVersionRule",
      "TestMicroserviceVersionRuleFixed#update_v1_then_all",
      "DelayFaultTest#injectFaultNoPercentageConfig",
      "DelayFaultTest#injectFaultNoDelayMsConfig",
      "DelayFaultTest#injectFaultNotDelay",
      "DelayFaultTest#injectFaultVertxDelay",
      "TestLocalServiceRegistry#testLifeCycle",
      "TestLocalServiceRegistry#registerMicroservice",
      "TestLocalServiceRegistry#testUpdateProperties",
      "TestLocalServiceRegistry#testSchema",
      "TestProduceTextPlainProcessor#testdecodeResponseNull",
      "TestProduceTextPlainProcessor#testBufferNormal",
      "TestServiceRegistryFactory#testGetRemoteRegistryClient",
      "TestInspectorImpl#urlPrefix"
    ],
    "aws-sdk-java-v2": [
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsInvalid_ThrowException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_ExtraData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsValid",
      "ResourceManagementTest#executorFromBuilderNotShutdown",
      "MultipartUploadTest#createMultipartUpload_overrideContentType",
      "MultipartUploadTest#asyncCreateMultipartUpload_shouldHaveUploadsQueryParam",
      "MultipartUploadTest#syncCreateMultipartUpload_shouldHaveUploadsQueryParam",
      "ExecutionInterceptorTest#async_interceptorException_failureInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingInput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingOutput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_serviceException_failureInterceptorMethodsCalled",
      "AsyncTimeoutTest#attemptsTimeout_shouldThrowApiCallAttemptTimeoutException",
      "AsyncTimeoutTest#attemptFinishWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_slowTransformer_shouldThrowApiCallAttemptTimeoutException",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime500_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#allAttemtsNotFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncAwsJsonRetryTest#retryPolicyNone_shouldNotRetry",
      "AsyncAwsJsonRetryTest#shouldRetryOnRetryableAwsErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOnAwsThrottlingErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOn500",
      "AsyncResponseThreadingTest#completionWithNioThreadWorksCorrectly",
      "EndpointOverrideTest#getObject_shouldNotThrowNPE",
      "EndpointOverrideTest#getObjectAsync_shouldNotThrowNPE",
      "XmlMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "XmlMetadataTest#requestIdNotInXmlOrHeader_responseMetadataShouldBeUnknown",
      "AsyncResponseTransformerTest#jsonClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "AsyncResponseTransformerTest#xmlClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "QueryMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "QueryMetadataTest#asyncResponse_shouldContainResponseMetadata",
      "QueryMetadataTest#syncResponse_shouldContainResponseMetadata",
      "QueryMetadataTest#requestIdNotInXmlOrHeader_responseMetadataShouldBeUnknown",
      "ChecksumResetsOnRetryTest#syncPutObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#asyncPutObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#syncGetObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#asyncGetObject_resetsChecksumOnRetry",
      "AsyncFaultTest#subscriberCancel_correctExceptionThrown",
      "SdkHttpResponseTest#asyncStreamingMethodShouldContainSdkHttpDate",
      "SdkHttpResponseTest#syncStreamingShouldContainSdkHttpDate",
      "SdkHttpResponseTest#syncNonStreamingShouldContainSdkHttpDate",
      "SdkHttpResponseTest#asyncNonStreamingShouldContainsSdkHttpData",
      "ClockSkewAdjustmentTest#clockSkewDoesNotAdjustOnNonClockSkewErrors",
      "ClockSkewAdjustmentTest#clockSkewAdjustsOnClockSkewErrors",
      "ClockSkewAdjustmentTest#clientClockSkewAdjustsWithoutRetries",
      "CustomResponseMetadataTest#asyncStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#syncNonStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#headerNotAvailable_responseMetadataShouldBeUnknown",
      "CustomResponseMetadataTest#syncStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#asyncNonStreaming_shouldContainResponseMetadata",
      "AsyncApiCallTimeoutTest#increaseTimeoutInRequestOverrideConfig_shouldTakePrecedence",
      "AsyncApiCallTimeoutTest#streamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retrySucceeded_FinishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retryWouldSucceed_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowBeforeRequestRequestHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowAfterErrorRequestHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#slowApiAttempt_ThrowsApiCallAttemptTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowResponseHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowErrorResponseHandler_ThrowsApiCallTimeoutException",
      "PaginatorInUserAgentTest#asyncPaginator_shouldHavePaginatorUserAgent",
      "PaginatorInUserAgentTest#syncPaginator_shouldHavePaginatorUserAgent"
    ]
  },
  "org.springframework:spring-web": {
    "servicecomb-java-chassis": [
      "ApolloClientTest#testCompareChangedConfig",
      "ApolloClientTest#refreshApolloConfig"
    ],
    "client_java": [
      "PrometheusEndpointTest#initializationError",
      "PrometheusMvcEndpointTest#initializationError",
      "SpringBootMetricsCollectorTest#initializationError"
    ],
    "citrus": [
      "DateValidatorTests#validate_minDate",
      "DateValidatorTests#validate_default",
      "DateValidatorTests#validate_format",
      "DateValidatorTests#validate_maxDate",
      "DateValidatorTests#validate_minDate_maxDate_format",
      "DateValidatorTests#validate_optional_noValue",
      "RequestContextAsyncTests#getRequestContext",
      "RequestContextAsyncTests#getRequestContext_DispatcherAsync",
      "RequestContextAsyncTests#commitRequestContext_DispatcherRequest",
      "RequestContextAsyncTests#commitRequestContext_DispatcherRequest_AsyncStarted",
      "RequestContextAsyncTests#commitRequestContext_DispatcherAsync",
      "RequestContextAsyncTests#commitRequestContext_DispatcherAsync_AsyncStarted",
      "BeanToolTests#tool_non_singleton_autowire",
      "BeanToolTests#tool_singleton_noAutowire",
      "BeanToolTests#tool_singleton_autowire",
      "BeanToolTests#tool_non_singleton_noAutowire",
      "ContextValueResolverTests#getString",
      "ContextValueResolverTests#controlContext",
      "ContextValueResolverTests#noName",
      "ContextValueResolverTests#getInt",
      "IfValidatorTests#validate_testAttribute",
      "IfValidatorTests#validate_condition",
      "ParameterResolverTests#getString",
      "ParameterResolverTests#error_NoName",
      "ParameterResolverTests#getIntDefault",
      "ParameterResolverTests#getIntArray",
      "ParameterResolverTests#getFileItemAsString",
      "ParameterResolverTests#getFileItemAsList",
      "ParameterResolverTests#error_DefaultValueAndDefaultValues",
      "ParameterResolverTests#getIntArrayDefault",
      "ParameterResolverTests#getIntegerDefault",
      "ParameterResolverTests#getIntegerArray",
      "ParameterResolverTests#getIntegerArrayDefault",
      "ParameterResolverTests#getIntegerList",
      "ParameterResolverTests#getIntegerListDefault",
      "ParameterResolverTests#getLongDefault",
      "ParameterResolverTests#getBool",
      "ParameterResolverTests#getBooleanArrayDefault",
      "ParameterResolverTests#getStringArrayDefault",
      "ParameterResolverTests#getFileItem",
      "ParameterResolverTests#getInt",
      "ParameterResolverTests#getLong",
      "ParameterResolverTests#getInteger",
      "MessageContextTests#formMessageContext",
      "MessageContextTests#groupMessageContext",
      "MessageContextTests#fieldMessageContext",
      "MessageContextTests#validatorMessageContext",
      "RequestContextCommitTests#commit",
      "RequestContextCommitTests#commitHeaders",
      "RequestContextCommitTests#synchronization",
      "RequestContextCommitTests#commitHeaders_thenCommitAll",
      "RequestContextCommitTests#autoCommitHeaders_writer",
      "RequestContextCommitTests#autoCommitHeaders_stream",
      "RequestContextCommitTests#preventCommitHeaders_whenDoCommitting",
      "UncompressedFieldKeyTests#compress_uncompress_hybrid",
      "UncompressedFieldKeyTests#uncompress_only_1",
      "UncompressedFieldKeyTests#uncompressed_key",
      "UncompressedFieldKeyTests#uncompress_only_2",
      "NoneOfValidatorTests#validate_allTrue",
      "NoneOfValidatorTests#validate_allFalse",
      "NoneOfValidatorTests#validate_someTrue",
      "ParametersResolverTests#setData_convertFailed",
      "ParametersResolverTests#setData",
      "ParametersResolverTests#setData_abstract",
      "ScreenEventTests#isModuleEvent",
      "ScreenEventTests#doPerform_noDefaultHandler_unknownEvent",
      "ScreenEventTests#doSomethingFailed",
      "ScreenEventTests#doPerform_noDefaultHandler_noEvent",
      "ScreenEventTests#doSomethingInteresting",
      "ScreenEventTests#doPerform_unknownEvent",
      "ScreenEventTests#doPerform_noArgs",
      "ScreenEventTests#doReturnValue",
      "ScreenEventTests#screen_withExecute_andEventHandler",
      "AnyOfValuesValidatorTests#validate_allTrue",
      "AnyOfValuesValidatorTests#validate_allFalse",
      "AnyOfValuesValidatorTests#validate_someTrue",
      "StringCompareValidatorTests#validate_notEqualTo",
      "StringCompareValidatorTests#validate_equalTo",
      "StringCompareValidatorTests#validate_equalTo_ignoreCase",
      "StringCompareValidatorTests#validate_notEqualTo_ignoreCase",
      "StringCompareValidatorTests#validate_equalTo_noTrimming",
      "StringCompareValidatorTests#validate_optional_noValue",
      "TurbineRunDataResolverTests#params",
      "TurbineRunDataResolverTests#navigator",
      "TurbineRunDataResolverTests#request",
      "TurbineRunDataResolverTests#response",
      "TurbineRunDataResolverTests#session",
      "TurbineRunDataResolverTests#servletContext",
      "TurbineRunDataResolverTests#cookies",
      "TurbineRunDataResolverTests#context_control",
      "TurbineRunDataResolverTests#requestContext",
      "TurbineRunDataResolverTests#requestContext2",
      "TurbineRunDataResolverTests#requestContext3",
      "TurbineRunDataResolverTests#rundata",
      "TurbineRunDataResolverTests#context",
      "SetLocaleRequestContextOverrideTests#changeInputCharset",
      "SetLocaleRequestContextOverrideTests#changeInputCharset_override_json",
      "SetLocaleRequestContextOverrideTests#changeInputCharset_override_js",
      "ContentURIBrokerConfigTests#clink3_overrideClink2",
      "ContentURIBrokerConfigTests#clink",
      "ContentURIBrokerConfigTests#clink4_extendsURIBroker",
      "ContentURIBrokerConfigTests#clink2",
      "FormServiceTests#getForm_postOnly",
      "FormServiceTests#getForm_no_args",
      "FormServiceTests#getForm_twice",
      "FormServiceTests#getForm_notPostOnly",
      "FormServiceTests#getForm_forcePostOnly",
      "RequiredValidatorTests#validate_blank",
      "RequiredValidatorTests#validate_empty",
      "RequiredValidatorTests#validate_null",
      "RequiredValidatorTests#validate_notEmpty",
      "RequiredValidatorTests#validate_empty_noTrimming",
      "RequiredValidatorTests#validate_blank_noTrimming",
      "FieldTests#isValid",
      "FieldTests#getGroup",
      "FieldTests#getAbsentKey",
      "FieldTests#getAttachmentKey",
      "FieldTests#getValues",
      "FieldTests#getAttachment",
      "FieldTests#getFieldConfig",
      "FieldTests#getStringValue",
      "FieldTests#toString_",
      "FieldTests#getDefaultValues",
      "FieldTests#setMessage",
      "FieldTests#validate_withAbsentKey",
      "FieldTests#addValue_trimming",
      "FieldTests#getAttachment_failureEncoding",
      "FieldTests#getAttachment_failureDecoding",
      "FieldTests#getMessage_invalidField",
      "FieldTests#getMessage_validField",
      "FieldTests#getName",
      "FieldTests#getValue",
      "FieldTests#getKey",
      "FieldTests#getDefaultValue",
      "FieldTests#getDisplayName",
      "FormToolTests#form_getGroups",
      "FormToolTests#form_isValid",
      "FormToolTests#group_getField",
      "FormToolTests#group_getFields",
      "FormToolTests#group_isValid",
      "FormToolTests#group_mapTo",
      "FormToolTests#field_functions",
      "FormToolTests#field_absent",
      "FormToolTests#field_attachment",
      "FormToolTests#field_isValid",
      "FormToolTests#field_getMessage",
      "FormToolTests#tool_toString",
      "FormToolTests#form_getGroup",
      "FormToolTests#tool_formServiceRef",
      "FormToolTests#group_isValidated",
      "SessionRequestContextTests#clear",
      "SessionRequestContextTests#isSessionInvalidated",
      "SessionRequestContextTests#getSessionConfig",
      "NumberCompareValidatorTests#validate_notEqualTo",
      "NumberCompareValidatorTests#validate_equalTo",
      "NumberCompareValidatorTests#validate_thisField_notANumber",
      "NumberCompareValidatorTests#validate_otherField_notANumber",
      "NumberCompareValidatorTests#validate_lessThan",
      "NumberCompareValidatorTests#validate_greaterThan",
      "NumberCompareValidatorTests#validate_lessThanOrEqualTo",
      "NumberCompareValidatorTests#validate_greaterThanOrEqualTo",
      "NumberCompareValidatorTests#validate_optional_noValue",
      "RegexpValidatorTests#validate_partialMatch",
      "RegexpValidatorTests#validate_fullMatch",
      "RegexpValidatorTests#validate_match_negative",
      "RegexpValidatorTests#validate_optional_noValue",
      "RequestContextChainingServiceTests#sort",
      "RequestContextChainingServiceTests#emptyRequestContext",
      "RequestContextChainingServiceTests#prepareCommitOrder",
      "RequestContextChainingServiceTests#sort1",
      "RequestContextChainingServiceTests#sort2",
      "RequestContextChainingServiceTests#destructionCallbacks",
      "FormResolverTests#getFormDefault",
      "FormResolverTests#getFormWrongType",
      "FormResolverTests#getFormDontSkipAction",
      "SetLocaleRequestContextTests#changeInputCharset",
      "SetLocaleRequestContextTests#changeOutputCharset",
      "SetLocaleRequestContextTests#switchLocaleAndCharset",
      "SetLocaleRequestContextTests#setContentTypeWithoutCharset",
      "SetLocaleRequestContextTests#setCharsetThenSetContentType",
      "SetLocaleRequestContextTests#setContentTypeThenSetCharset",
      "SetLocaleRequestContextTests#getDefaultLocale",
      "RandomizeTests#render",
      "RandomizeTests#setKey",
      "RandomizeTests#setChars",
      "RandomizeTests#setPath",
      "RandomizeTests#setRange",
      "RandomizeTests#longToString",
      "RandomizeTests#configuration",
      "ParserRequestContextTests#multipartForm",
      "ParserRequestContextTests#cookies",
      "ParserRequestContextTests#getParameterNames",
      "ParserRequestContextTests#urlEncodeForm",
      "ParserRequestContextTests#toQueryString",
      "ParserRequestContextTests#uploaded_file_whitelist",
      "ParserRequestContextTests#uploaded_file_whitelist2",
      "ParserRequestContextTests#getRequestMap",
      "ParserRequestContextTests#parse_post",
      "ParserRequestContextTests#parse_get",
      "ParserRequestContextTests#parse_query",
      "ParserRequestContextTests#parse_trimming",
      "DataBindingTests#execute",
      "DataBindingTests#isModuleEvent",
      "DataBindingTests#executeAndReturn",
      "FormGroupResolverTests#error_NoName",
      "FormGroupResolverTests#getGroup",
      "FormGroupResolverTests#getGroupInstance_bean_dontSkipAction",
      "FormGroupResolverTests#getGroupInstance_bean_convertError_quiet",
      "FormGroupResolverTests#getGroupInstance_bean_convertError_noisy",
      "FormGroupResolverTests#getGroupDontSkipAction",
      "FormGroupResolverTests#getGroupInstance_bean",
      "FormTests#isValid",
      "FormTests#getFormConfig",
      "FormTests#getGroups",
      "FormTests#toString_",
      "FormTests#isForcePostOnly",
      "FormTests#getTypeConverter",
      "FormTests#init_postOnly",
      "FormTests#init_noFormData",
      "FormTests#init_andValidate",
      "FormTests#init_noData",
      "FormTests#init_undefinedGroup",
      "FormTests#init_withAbsentKey",
      "FormTests#init_withAbsentKey_override",
      "FormTests#getKey",
      "NumberValidatorTests#validate_notEqualTo",
      "NumberValidatorTests#validate_combine",
      "NumberValidatorTests#validate_equalTo",
      "NumberValidatorTests#validate_noLimit",
      "NumberValidatorTests#validate_lessThan",
      "NumberValidatorTests#validate_greaterThan",
      "NumberValidatorTests#validate_lessThanOrEqualTo",
      "NumberValidatorTests#validate_greaterThanOrEqualTo",
      "NumberValidatorTests#validate_optional_noValue",
      "SessionInterceptorTests#invalidate",
      "SessionInterceptorTests#expired",
      "SessionInterceptorTests#createNewSessionId",
      "SessionInterceptorTests#invalidate_new",
      "SessionInterceptorTests#readWrite",
      "SessionInterceptorTests#reuseSessionId",
      "ActionEventTests#isModuleEvent",
      "ActionEventTests#doSomethingFailed",
      "ActionEventTests#doSomethingInteresting",
      "ActionEventTests#doPerform_noArgs",
      "ActionEventTests#doReturnValue",
      "ActionEventTests#doPerform_unknownArgs",
      "ActionEventTests#doPerform_noDefaultHandler_emptyArgs",
      "ActionEventTests#doPerform_noDefaultHandler_unknownArgs",
      "ActionEventTests#doSomething_imageButton",
      "AnyOfValidatorTests#validate_allTrue",
      "AnyOfValidatorTests#validate_allFalse",
      "AnyOfValidatorTests#validate_someTrue",
      "BasicRequestContextTests#noInterceptors",
      "BasicRequestContextTests#noInterceptors_2",
      "BasicRequestContextTests#withCrlf",
      "BasicRequestContextTests#noCrlf",
      "URIBrokerToolTests#pull",
      "ServletContentURIBrokerConfigTests#scontentLink3_override",
      "ServletContentURIBrokerConfigTests#scontentLink",
      "ServletContentURIBrokerConfigTests#scontentLink2",
      "CookieStoreTests#simple",
      "CookieStoreTests#simple_override_cookie_settings",
      "CookieStoreTests#survivesInInvalidating",
      "CookieStoreTests#long_cookies",
      "CookieStoreTests#too_long_cookies",
      "CookieStoreTests#checksum",
      "CookieStoreTests#checksum_notMatch",
      "CookieStoreTests#checksum_numberNotMatch",
      "CookieStoreTests#multi_encoders",
      "BufferedRequestContextTests#illegalStateExceptionForWriter",
      "BufferedRequestContextTests#commit_noContent",
      "BufferedRequestContextTests#charBuffer",
      "BufferedRequestContextTests#byteBuffer",
      "BufferedRequestContextTests#illegalStateExceptionForBytes",
      "BufferedRequestContextTests#writeCharsAndReadBytes",
      "BufferedRequestContextTests#writeBytesAndReadChars",
      "MailAddressValidatorTests#validate_mail",
      "MailAddressValidatorTests#validate_optional_noValue",
      "RunDataTests#contentType",
      "RunDataTests#missingRequestContext",
      "RunDataTests#multipartForm",
      "RunDataTests#cookies",
      "RunDataTests#contentTypeAndCharset",
      "RunDataTests#charsetAndContentType",
      "RunDataTests#sendRedirect",
      "RunDataTests#statusCode",
      "RunDataTests#getRequestURL",
      "RunDataTests#urlEncodeForm",
      "URIBrokerServiceTests#getURIBroker",
      "URIBrokerServiceTests#isRequestAware",
      "URIBrokerServiceTests#init_noBroker",
      "URIBrokerServiceTests#init_noBrokers",
      "URIBrokerServiceTests#requestProxy",
      "URIBrokerServiceTests#dump",
      "URIBrokerServiceTests#getNames",
      "URIBrokerServiceTests#getExposedNames",
      "URIBrokerServiceTests#init_noBrokerName",
      "URIBrokerServiceTests#init_duplicatedBrokerName",
      "URIBrokerServiceTests#init_cyclicDepends",
      "URIBrokerServiceTests#init_parentNotExists",
      "URIBrokerServiceTests#init_parentNotSuperclass",
      "URIBrokerServiceTests#init_prerendered_initialized",
      "URIBrokerServiceTests#init_request",
      "UploadedFileValidatorTests#validate_minSize_maxSize_contentTypes",
      "UploadedFileValidatorTests#validate_noFileItems",
      "UploadedFileValidatorTests#validate_defaultConfig",
      "UploadedFileValidatorTests#validate_minSize",
      "UploadedFileValidatorTests#validate_maxSize",
      "UploadedFileValidatorTests#validate_minSize_maxSize",
      "UploadedFileValidatorTests#validate_contentType",
      "UploadedFileValidatorTests#validate_contentTypes",
      "UploadedFileValidatorTests#validate_forceEmptyFile",
      "UploadedFileValidatorTests#validate_noContentType",
      "UploadedFileValidatorTests#validate_extension",
      "NoneOfValuesValidatorTests#validate_allTrue",
      "NoneOfValuesValidatorTests#validate_allFalse",
      "NoneOfValuesValidatorTests#validate_someTrue",
      "TurbineClassicURIBrokerConfigTests#classicLink",
      "TurbineClassicURIBrokerConfigTests#classicLink2",
      "TurbineClassicURIBrokerConfigTests#turbineParams",
      "TurbineClassicURIBrokerConfigTests#classicLink3_override",
      "SetLocaleRequestContextParamsTests#changeInputCharset",
      "SetLocaleRequestContextParamsTests#changeOutputCharset",
      "SetLocaleRequestContextParamsTests#switchLocaleAndCharset",
      "SetLocaleRequestContextParamsTests#setContentTypeWithoutCharset",
      "SetLocaleRequestContextParamsTests#setCharsetThenSetContentType",
      "SetLocaleRequestContextParamsTests#setContentTypeThenSetCharset",
      "SetLocaleRequestContextParamsTests#getDefaultLocale",
      "MessageSourceTests#getMessage_fromMessageSource",
      "MessageSourceTests#getMessage_noMessage_or_noId",
      "LazyCommitRequestContextTests#reset",
      "LazyCommitRequestContextTests#flushBuffer",
      "LazyCommitRequestContextTests#sendRedirect",
      "LazyCommitRequestContextTests#statusCode",
      "LazyCommitRequestContextTests#getRedirectLocation",
      "LazyCommitRequestContextTests#sendError",
      "LazyCommitRequestContextTests#sendErrorWithoutWrapper",
      "LazyCommitRequestContextTests#sendRedirectWithoutWrapper",
      "LazyCommitRequestContextTests#flushBufferWithoutWrapper",
      "StringLengthValidatorTests#validate_lessThan3",
      "StringLengthValidatorTests#validate_between3and10",
      "StringLengthValidatorTests#validate_moreThan10",
      "StringLengthValidatorTests#validate_optional_noValue",
      "ChooseValidatorTests#validate_noOtherwise",
      "ChooseValidatorTests#validate_when_when_otherwise",
      "URIBrokerConfigTests#defaultCharset",
      "URIBrokerConfigTests#withoutRequest",
      "URIBrokerConfigTests#link_URIBroker",
      "URIBrokerConfigTests#link4_serverURI",
      "URIBrokerConfigTests#not_requestAware",
      "URIBrokerConfigTests#standalone",
      "URIBrokerConfigTests#link2_URIBroker",
      "URIBrokerConfigTests#link3_URIBroker_extendsLink2_overrideWithEmpty",
      "URIBrokerConfigTests#mylink_URIBoker_variableReplacement",
      "URIBrokerConfigTests#linkCharset_URLEncoding",
      "URIBrokerConfigTests#linkWithInterceptor_URIBroker",
      "URIBrokerConfigTests#linkWithPathInterceptor_URIBroker",
      "URIBrokerConfigTests#noCharset",
      "URIBrokerConfigTests#uriBean",
      "URIBrokerConfigTests#importAndOverride",
      "FormFieldsResolverTests#getFieldsDontSkipAction",
      "FormFieldsResolverTests#getFieldsBeans",
      "FormFieldsResolverTests#getFieldsBeans_dontSkipAction",
      "FormFieldsResolverTests#getFieldInstance_bean_convertError_quiet",
      "FormFieldsResolverTests#getFieldInstance_bean_convertError_noisy",
      "FormFieldsResolverTests#getFields",
      "JspEngineTests#render_getText",
      "JspEngineTests#render_writeToStream",
      "JspEngineTests#render_writeToWriter",
      "LifecycleLoggerListenerTests#test",
      "BufferedRunDataTests#illegalStateExceptionForWriter",
      "BufferedRunDataTests#charBuffer",
      "BufferedRunDataTests#byteBuffer",
      "BufferedRunDataTests#illegalStateExceptionForBytes",
      "BufferedRunDataTests#writeCharsAndReadBytes",
      "BufferedRunDataTests#writeBytesAndReadChars",
      "PullServiceConfigTests#nonSingleton",
      "PullServiceConfigTests#sharing",
      "PullServiceConfigTests#getTools",
      "PullServiceConfigTests#toolSet",
      "ServletURIBrokerConfigTests#servletLink",
      "ServletURIBrokerConfigTests#servletLink2",
      "ServletURIBrokerConfigTests#servletLink3_override",
      "MixinToolTests#tool",
      "SimpleModuleTests#execute",
      "SimpleModuleTests#abstract_module",
      "AllOfValidatorTests#validate_allTrue",
      "AllOfValidatorTests#validate_allFalse",
      "AllOfValidatorTests#validate_someTrue",
      "ValueParserTests#getString",
      "ValueParserTests#getDate",
      "ValueParserTests#remove",
      "ValueParserTests#get",
      "ValueParserTests#getObject",
      "ValueParserTests#getBoolean",
      "ValueParserTests#getByte",
      "ValueParserTests#getShort",
      "ValueParserTests#getChar",
      "ValueParserTests#getInt",
      "ValueParserTests#getLong",
      "ValueParserTests#getFloat",
      "ValueParserTests#getDouble",
      "ValueParserTests#clear",
      "ValueParserTests#getBytes",
      "ValueParserTests#setProperties",
      "ValueParserTests#keys",
      "ValueParserTests#containsKey",
      "ValueParserTests#setString",
      "ValueParserTests#getObjectOfType",
      "ValueParserTests#setObject",
      "ValueParserTests#setProperties_noisy",
      "SpringextWebContextLoaderTests#post",
      "SpringextWebContextLoaderTests#myservlet",
      "SpringextWebContextLoaderTests#response",
      "SpringextWebContextLoaderTests#get",
      "FormFieldResolverTests#getFieldDontSkipAction",
      "FormFieldResolverTests#getFieldInstance_value",
      "FormFieldResolverTests#getFieldInstance_value_dontSkipAction",
      "FormFieldResolverTests#getFieldInstance_value_convertError_quiet",
      "FormFieldResolverTests#getFieldInstance_value_convertError_noisy",
      "FormFieldResolverTests#getField",
      "ParserRequestContextParamsTests#multipartForm",
      "ParserRequestContextParamsTests#cookies",
      "ParserRequestContextParamsTests#getParameterNames",
      "ParserRequestContextParamsTests#urlEncodeForm",
      "ParserRequestContextParamsTests#toQueryString",
      "ParserRequestContextParamsTests#uploaded_file_whitelist",
      "ParserRequestContextParamsTests#uploaded_file_whitelist2",
      "ParserRequestContextParamsTests#getRequestMap",
      "ParserRequestContextParamsTests#parse_post",
      "ParserRequestContextParamsTests#parse_get",
      "ParserRequestContextParamsTests#parse_query",
      "ParserRequestContextParamsTests#parse_trimming",
      "MultiValuesCountValidatorTests#validator_emptyConfig",
      "MultiValuesCountValidatorTests#validator_minCount",
      "MultiValuesCountValidatorTests#validator_maxCount",
      "MultiValuesCountValidatorTests#validator_min_maxCount",
      "MultiValuesCountValidatorTests#validator_forceNoValues",
      "AllOfValuesValidatorTests#validate_allTrue",
      "AllOfValuesValidatorTests#validate_hidden_all_of_validator",
      "AllOfValuesValidatorTests#validate_withNull",
      "AllOfValuesValidatorTests#validate_allFalse",
      "AllOfValuesValidatorTests#validate_someTrue",
      "FormGroupsResolverTests#error_NoName",
      "FormGroupsResolverTests#getGroupInstance_bean_convertError_quiet",
      "FormGroupsResolverTests#getGroupInstance_bean_convertError_noisy",
      "FormGroupsResolverTests#getGroupsBeans",
      "FormGroupsResolverTests#getGroupsBeans_dontSkipAction",
      "FormGroupsResolverTests#getGroupsDontSkipAction",
      "FormGroupsResolverTests#getGroups",
      "RewriteRequestContextTests#emptyRules",
      "RewriteRequestContextTests#test1_redirect_301",
      "RewriteRequestContextTests#test2_redirect_default",
      "RewriteRequestContextTests#test2_redirect_default_change_port",
      "RewriteRequestContextTests#test2_4_redirect_default_qsa",
      "RewriteRequestContextTests#test2_5_redirect_absolute",
      "RewriteRequestContextTests#test3_internal_redirect_prefix_mapping",
      "RewriteRequestContextTests#test3_5_internal_redirect_prefix_mapping",
      "RewriteRequestContextTests#test3_internal_redirect_suffix_mapping",
      "RewriteRequestContextTests#test4_no_changes",
      "RewriteRequestContextTests#test5_clear_parameters",
      "RewriteRequestContextTests#test6_reserve_parameters",
      "RewriteRequestContextTests#test7_chaining",
      "RewriteRequestContextTests#test8_handlers_normalizeURL",
      "RewriteRequestContextTests#test9_negative_patterns",
      "RewriteRequestContextTests#test11_bugfix",
      "RewriteRequestContextTests#test9_negative_patterns_rule_not_match",
      "RewriteRequestContextTests#test9_negative_patterns_condition_not_match",
      "RewriteRequestContextTests#test10_ornext_conditions",
      "RewriteRequestContextTests#test10_ornext_conditions_not_match",
      "AttributeWhitelistTests#init_",
      "AttributeWhitelistTests#access_sessionModelOnly",
      "AttributeWhitelistTests#read_notExistAttr",
      "AttributeWhitelistTests#readWrite_anyType",
      "AttributeWhitelistTests#readWrite_anyType2",
      "AttributeWhitelistTests#readWrite_specifiedType",
      "AttributeWhitelistTests#readWrite_wrongType",
      "AttributeWhitelistTests#readWrite_primitiveType",
      "AttributeWhitelistTests#readWrite_wrongPrimitiveType",
      "AttributeWhitelistTests#readWrite_nameNotInWhitelist",
      "StringByteLengthValidatorTests#validate_lessThan3",
      "StringByteLengthValidatorTests#validate_between3and10",
      "StringByteLengthValidatorTests#validate_moreThan10",
      "StringByteLengthValidatorTests#validate_optional_noValue",
      "ParamBindingTests#skipAction",
      "ParamBindingTests#skipScreen",
      "ParamBindingTests#withDataResolver_default_adapters",
      "ParamBindingTests#noDataResolver",
      "ParamBindingTests#skipActionEvent",
      "ParamBindingTests#withDataResolver_defined_adapters_default_resolverRef",
      "ParamBindingTests#withDataResolver_defined_adapters",
      "GlobalRequestObjectsTests#request",
      "GlobalRequestObjectsTests#response",
      "GlobalRequestObjectsTests#performance",
      "GlobalRequestObjectsTests#classNames",
      "GlobalRequestObjectsTests#hashCodeEquals",
      "GlobalRequestObjectsTests#web_environment",
      "GlobalRequestObjectsTests#session",
      "GlobalRequestObjectsTests#bufferedRC",
      "GlobalRequestObjectsTests#lazyCommitRC",
      "GlobalRequestObjectsTests#setLocaleRC",
      "GlobalRequestObjectsTests#parserRC",
      "GlobalRequestObjectsTests#rewriteRC",
      "GlobalRequestObjectsTests#sessionRC",
      "GlobalRequestObjectsTests#rundataRC",
      "GlobalRequestObjectsTests#performance_raw",
      "GlobalRequestObjectsTests#non_web_environment",
      "SessionTests#session",
      "SessionTests#session_attr",
      "SessionTests#stores_modelOnly",
      "SessionTests#session_params",
      "SessionTests#session_change_model",
      "SessionTests#session_exactMatchesOnly",
      "SessionTests#session_params_default",
      "SessionTests#session_urlencode",
      "SessionTests#session_reuseSessionID",
      "SessionTests#session_noKeepInTouch",
      "SessionTests#session_keepInTouch",
      "SessionTests#session_maxInactiveInterval_exceeds",
      "SessionTests#session_forceExpirationPeriod_exceeds",
      "SessionTests#session_forceExpirationPeriod_notExceeds",
      "SessionTests#session_invalidate",
      "SessionTests#session_invalidate_new",
      "SessionTests#session_models",
      "SessionTests#session_id_not_match",
      "SessionTests#session_id_not_found_in_model"
    ]
  },
  "org.springframework:spring-aop": {
    "client_java": [
      "MethodTimerTest#testOverloadedMethodName",
      "MethodTimerTest#testThrowWorks",
      "MethodTimerTest#testSecondMethod",
      "MethodTimerTest#timeMethod",
      "MethodTimerTest#timeMethodInSubClassModel",
      "MethodTimerTest#testValueParam",
      "MethodTimerTest#testHelpParam",
      "PrometheusEndpointTest#testMetricsExportedThroughPrometheusEndpoint",
      "PrometheusMvcEndpointTest#testNameParamIsNotNull",
      "PrometheusMvcEndpointTest#testNameParamIsNull",
      "PrometheusMvcEndpointTest#testAcceptPlainText",
      "SpringBootMetricsCollectorTest#collect"
    ],
    "citrus": [
      "SchemaExporterCLITests#complete_save"
    ],
    "metrics-spring": [
      "TestSuite#testFieldInjectionShouldNotCauseErrorWhenTargetIsAopProxy",
      "TestSuite#testExceptionMeteredMethod",
      "TestSuite#testMeteredInterfaceImpl",
      "TestSuite#testTimedMethod",
      "TestSuite#noMetricsRegistered",
      "TestSuite#testMeteredInterface",
      "TestSuite#testMeteredMethod",
      "TestSuite#testCountedMethod",
      "TestSuite#testUnhealthy",
      "TestSuite#testHealthy",
      "TestSuite#gauges",
      "TestSuite#monotonicCountedMethod",
      "TestSuite#overloadedCountedMethod",
      "TestSuite#countedMethod",
      "TestSuite#scopeTest",
      "TestSuite#targetIsNotNull",
      "TestSuite#meteredMethod",
      "TestSuite#timedMethod",
      "TestSuite#testMeteredClassInterface",
      "TestSuite#exceptionMeteredMethod",
      "TestSuite#varargsMeteredMethod",
      "TestSuite#quadruplyMeteredMethod",
      "TestSuite#overloadedExceptionMeteredMethod",
      "TestSuite#overloadedMeteredMethod",
      "TestSuite#overloadedTimedMethod",
      "TestSuite#positiveContextLoadingTest"
    ]
  },
  "com.esotericsoftware:kryo": {
    "rtree": [
      "KryoSerializationTest#testKryo"
    ],
    "memcached-session-manager": [
      "TestSuite"
    ],
    "macrobase": [
      "CachingSQLIngesterTest#testChunkedIO",
      "CachingSQLIngesterTest#testGetData"
    ]
  },
  "org.apache.httpcomponents:httpmime": {
    "nanohttpd": [
      "CookieHandlerTest#testMultipartFormData",
      "CookieHandlerTest#testTempFileInterface",
      "HttpPutRequestTest#testMultipartFormData",
      "HttpPutRequestTest#testTempFileInterface",
      "HttpPostRequestTest#testMultipartFormData",
      "HttpPostRequestTest#testTempFileInterface",
      "HttpKeepAliveTest#testMultipartFormData",
      "HttpKeepAliveTest#testTempFileInterface",
      "HttpChunkedResponseTest#testMultipartFormData",
      "HttpChunkedResponseTest#testTempFileInterface",
      "SSLServerSocketFactoryTest#testMultipartFormData",
      "SSLServerSocketFactoryTest#testTempFileInterface",
      "HttpServerTest#testMultipartFormData",
      "HttpServerTest#testTempFileInterface",
      "InvalidRequestTest#testMultipartFormData",
      "InvalidRequestTest#testTempFileInterface",
      "HttpSessionHeadersTest#testMultipartFormData",
      "HttpSessionHeadersTest#testTempFileInterface",
      "HttpSSLServerTest#testMultipartFormData",
      "HttpSSLServerTest#testTempFileInterface",
      "GetAndPostIntegrationTest#testPostRequestWithMultipartExtremEncodedParameters",
      "GetAndPostIntegrationTest#testPostRequestWithMultipartEncodedParameters",
      "HttpParsingTest#testMultipartFormData",
      "HttpParsingTest#testTempFileInterface",
      "HttpGetRequestTest#testMultipartFormData",
      "HttpGetRequestTest#testTempFileInterface",
      "BadRequestTest#testMultipartFormData",
      "BadRequestTest#testTempFileInterface",
      "HttpDeleteRequestTest#testMultipartFormData",
      "HttpDeleteRequestTest#testTempFileInterface",
      "HttpHeadRequestTest#testMultipartFormData",
      "HttpHeadRequestTest#testTempFileInterface",
      "HttpSessionTest#testMultipartFormData",
      "HttpSessionTest#testTempFileInterface"
    ],
    "heritrix3": [
      "FormLoginProcessorTest#testMultipartFormLogin"
    ]
  },
  "com.google.inject.extensions:guice-multibindings": {
    "shiro": [
      "FilterConfigTest#testWithConfig",
      "FilterConfigTest#testSimple",
      "ShiroWebModuleTest#testAddFilterChainGuice3Only",
      "ShiroWebModuleTest#testAddFilterChainGuice3and4",
      "ShiroWebModuleTest#basicInstantiation",
      "ShiroWebModuleTest#testBindWebSecurityManager",
      "ShiroWebModuleTest#testBindWebEnvironment",
      "ShiroModuleTest#testEventBusAware",
      "ShiroModuleTest#basicInstantiation",
      "ShiroModuleTest#testBindEnvironment",
      "ShiroModuleTest#testConfigure",
      "ShiroModuleTest#testBindSecurityManager",
      "ShiroModuleTest#testDestroy",
      "ShiroModuleTest#testEventListener",
      "ShiroModuleTest#testBindSessionManager"
    ],
    "nifty": [
      "TestPlainServer#testDefaultConnectionIdleTimeout",
      "TestPlainServer#testMethodCalls",
      "TestPlainServer#testMethodCallsWithNiftyClient",
      "TestPlainServer#testRejectedExecution",
      "TestPlainServer#testSpecifiedConnectionIdleTimeout",
      "TestPlainServer#testTaskTimeout"
    ]
  },
  "org.hamcrest:hamcrest-library": {
    "immutables": [
      "MongoAggregationTest#no_groupBy",
      "MongoAggregationTest#agg1",
      "MongoAggregationTest#agg2",
      "MongoAggregationTest#empty",
      "JacksonCodecsTest#encodeDecode",
      "ValuesTest#builderFrom",
      "ValuesTest#copyConstructor",
      "ValuesTest#withMethodSetsAndMaps",
      "ValuesTest#generateCopyAnnotations",
      "ValuesTest#requiredAttributesSetChecked",
      "ValuesTest#extendingBuilder",
      "ValuesTest#auxiliary",
      "ValuesTest#ordering",
      "MongoIntegrationTest#projection",
      "MongoIntegrationTest#nullable",
      "MongoIntegrationTest#comparison",
      "MongoIntegrationTest#optional",
      "MongoIntegrationTest#empty",
      "MongoIntegrationTest#equality",
      "MongoIntegrationTest#basic",
      "MongoIntegrationTest#startsWith",
      "MongoIntegrationTest#contains",
      "MongoIntegrationTest#whitespace",
      "MongoIntegrationTest#endsWith",
      "NumbersTest#primitives",
      "NumbersTest#boxed",
      "HolderTest#primitives",
      "SourceTypeTest#extract",
      "RepositoryTest#reactive",
      "RepositoryTest#sync",
      "RepositoryTest#empty",
      "BasicMongoOperationsTest#insert",
      "BasicMongoOperationsTest#update",
      "BasicMongoOperationsTest#upsert",
      "BasicMongoOperationsTest#empty",
      "BasicMongoOperationsTest#readWrite_single",
      "SpecifiedExceptionTest#itThrowsExceptionWithMissingAttributeNames",
      "NullableAttributesTest#nonnullDefault",
      "NullableAttributesTest#skipNullElements1",
      "NullableAttributesTest#allowNulls",
      "NullableAttributesTest#skipNullElements",
      "NullableAttributesTest#allowNulls2",
      "NullableAttributesTest#defaultValues",
      "NullableAttributesTest#nonDefaultValues",
      "MarshallingTest#unmarshalingPolymorphicTypes",
      "MarshallingTest#marshalingPolymorphicOptionalTypes",
      "GeodePersonTest#projection_ofContainers",
      "GeodePersonTest#orderBy",
      "GeodePersonTest#intComparison",
      "GeodePersonTest#projection_basic",
      "GeodePersonTest#projection_nulls",
      "GeodePersonTest#projection_tuple",
      "InMemoryIntegrationTest#projection",
      "InMemoryIntegrationTest#nullable",
      "InMemoryIntegrationTest#comparison",
      "InMemoryIntegrationTest#optional",
      "InMemoryIntegrationTest#empty",
      "InMemoryIntegrationTest#equality",
      "InMemoryIntegrationTest#basic",
      "InMemoryIntegrationTest#startsWith",
      "InMemoryIntegrationTest#contains",
      "InMemoryIntegrationTest#whitespace",
      "InMemoryIntegrationTest#endsWith",
      "LongBitsTest#doubleLong",
      "LongBitsTest#singleLong",
      "OrdinalSetTest#singletonSet",
      "OrdinalSetTest#incrementCountersLarge",
      "OrdinalSetTest#incrementCountersSmall",
      "OrdinalSetTest#copyOfIterable",
      "OrdinalSetTest#emptySet",
      "GeodeIntegrationTest#projection",
      "GeodeIntegrationTest#nullable",
      "GeodeIntegrationTest#comparison",
      "GeodeIntegrationTest#empty",
      "GeodeIntegrationTest#equality",
      "GeodeIntegrationTest#basic",
      "GeodeIntegrationTest#whitespace",
      "JsonQueryTest#jsonQuery",
      "AnnotationTest#ann",
      "PersonOrderingTest#basicOrdering",
      "PersonOrderingTest#empty",
      "ObjectMappedTest#customBuilderDeserialize",
      "ObjectMappedTest#packageHiddenInsideBuilder",
      "ProcessorRuleTest#basic",
      "ElasticPersonTest#regex_forElastic",
      "BsonReaderTest#gsonToBson",
      "IdAttributeTest#idAttribute",
      "BugsTest#deserialize368",
      "SimpleInserterTest#insertDuplicate",
      "SimpleInserterTest#insertOne",
      "SimpleInserterTest#insertOne2",
      "BeanFriendlyTest#modifiableAsJavaBean",
      "TupleCodecProviderTest#optionalAttribute_nickname",
      "TupleCodecProviderTest#age",
      "GsonCodecsTest#dateCodec",
      "GeodeAggregationTest#no_groupBy",
      "GeodeAggregationTest#agg1",
      "GeodeAggregationTest#agg2",
      "GeodeAggregationTest#empty",
      "DeepImmutablesDetectionTest#immutableCollectionFieldIsConvertedInModifiableSetter",
      "OrdinalValueTest#ordinalValue",
      "BsonCodecRepoTest#basic",
      "ElasticAggregationTest#no_groupBy",
      "ElasticAggregationTest#agg1",
      "ElasticAggregationTest#agg2",
      "ElasticAggregationTest#empty",
      "MongoCursorIsClosedTest#emptyResult",
      "SimpleIndexerTest#index1",
      "SimpleIndexerTest#index2",
      "SimpleIndexerTest#sameAttributeIndex_exception",
      "FlagsTest#readonly",
      "FlagsTest#noIndex",
      "ClearBuilderTest#clear",
      "GsonFeaturesTest#emptyAsNullsAndNotSerializeNulls",
      "GsonFeaturesTest#nullableContainersNames",
      "GsonFeaturesTest#emptyAsNotNulls",
      "GsonFeaturesTest#emptyAsNullsAndSerializeNulls",
      "GsonFeaturesTest#deserializeEmptyNullableCollections",
      "ScrollingTest#withLimit",
      "ScrollingTest#noLimit",
      "JaxrsTest#doubleInMapTest",
      "JaxrsTest#objectDoubleInMapTest",
      "JaxrsTest#booleanInMapTest",
      "JaxrsTest#pureGsonRoundtrip",
      "JaxrsTest#gsonJacksonRoundtrip",
      "JaxrsTest#objectBooleanInMapTest",
      "SimpleDeleterTest#basicDelete",
      "SimpleDeleterTest#deleteByCriteria",
      "CriteriaModelProcessorTest#timeZone",
      "CriteriaModelProcessorTest#creatorDefinition",
      "CriteriaModelProcessorTest#string",
      "CriteriaModelProcessorTest#havingCriteria",
      "ModifiablesTest#deferedAllocationAndNullable",
      "ModifiablesTest#modifiableImmutableCollections",
      "ModifiablesTest#clear",
      "ModifiablesTest#defaults",
      "ModifiablesTest#isAttributesSet",
      "ModifiablesTest#uninitializedEquals",
      "ModifiablesTest#modifiableCollection",
      "SupertypeTest#supetype3",
      "SimpleUpdaterTest#setWithOtherOperations",
      "SimpleUpdaterTest#clear",
      "SimpleUpdaterTest#setListNonScalar",
      "SimpleUpdaterTest#setList",
      "CustomCollectionTest#creates",
      "ElasticIntegrationTests#projection",
      "ElasticIntegrationTests#nullable",
      "ElasticIntegrationTests#comparison",
      "ElasticIntegrationTests#optional",
      "ElasticIntegrationTests#empty",
      "ElasticIntegrationTests#equality",
      "ElasticIntegrationTests#basic",
      "ElasticIntegrationTests#startsWith",
      "ElasticIntegrationTests#contains",
      "ElasticIntegrationTests#whitespace",
      "ElasticIntegrationTests#endsWith",
      "ServiceTest#serviceSets",
      "PersonGeneratorTest#basic",
      "CodeTest#oneLiner",
      "InMemoryPersonTest#emptyNotEmptyIterable",
      "InMemoryPersonTest#projection_ofContainers",
      "InMemoryPersonTest#orderBy",
      "InMemoryPersonTest#iterableHasSize",
      "InMemoryPersonTest#nested",
      "InMemoryPersonTest#intComparison",
      "InMemoryPersonTest#iterableContains",
      "InMemoryPersonTest#projection_basic",
      "InMemoryPersonTest#projection_nulls",
      "InMemoryPersonTest#projection_tuple",
      "InMemoryPersonTest#stringLength",
      "InMemoryPersonTest#stringEmptyNotEmpty",
      "SafeInitTest#cycles",
      "NamingTest#underscoreCharacter",
      "NamingTest#suffixNaming",
      "NamingTest#prefixAndSuffixNaming",
      "NamingTest#verbatimNaming",
      "NamingTest#prefixNaming",
      "JacksonRepoTest#nullDate",
      "JacksonRepoTest#withDate",
      "JacksonRepoTest#criteria",
      "MongoPersonTest#emptyNotEmptyIterable",
      "MongoPersonTest#projection_ofContainers",
      "MongoPersonTest#orderBy",
      "MongoPersonTest#iterableHasSize",
      "MongoPersonTest#nested",
      "MongoPersonTest#intComparison",
      "MongoPersonTest#iterableContains",
      "MongoPersonTest#projection_basic",
      "MongoPersonTest#projection_nulls",
      "MongoPersonTest#projection_tuple",
      "MongoPersonTest#stringLength",
      "MongoPersonTest#stringEmptyNotEmpty",
      "ReactiveFetcherDelegateTest#exists",
      "ReactiveFetcherDelegateTest#one",
      "ReactiveFetcherDelegateTest#fetch",
      "ReactiveFetcherDelegateTest#oneOrNone",
      "JdkOnlyTest#maps",
      "JdkOnlyTest#collections",
      "PostprocessingMachineTest#onlyCollectImports",
      "PostprocessingMachineTest#importsHaveUnderscores",
      "PostprocessingMachineTest#onlyCollectHeader",
      "FactoryBuilderTest#invokesStaticFactory",
      "PersonCriteriaTest#subCollection",
      "PersonCriteriaTest#stringPattern",
      "PersonCriteriaTest#optionalStringPattern",
      "PersonCriteriaTest#or",
      "PersonCriteriaTest#age",
      "PersonCriteriaTest#empty",
      "PersonCriteriaTest#nonScalar",
      "PersonCriteriaTest#negation",
      "SupportTest#unwrapObject",
      "SimpleReplacerTest#returnNewOld",
      "SimpleReplacerTest#findAndReplace",
      "SimpleReplacerTest#updateUpsertWhenEmpty",
      "AnnotateTest#attributeNamesArray"
    ],
    "citrus": [
      "PipelineTests#pipeline_newInvocation",
      "PipelineTests#pipeline_init",
      "PipelineTests#invoke_uninited",
      "PipelineTests#invoke_alreadyInvoked",
      "PipelineTests#invoke_brokenPipeline",
      "PipelineTests#break_levels_outOfBounds",
      "PipelineTests#break_label_empty",
      "PipelineTests#break_label_NotFound",
      "DoPerformRunnableValveTests#notInPerformRunnableAsync",
      "TemplateContextAdapterTests#newInstance",
      "IfValveTests#init_",
      "LoopValveTests#config",
      "LoopValveTests#loop_notInited",
      "LoopValveTests#init_",
      "LoopValveTests#loop_exceedsMax",
      "ChooseValveTests#init_condition_block_notMatch",
      "ChooseValveTests#init_condition_or_block_null",
      "ChooseValveTests#invoke_notInited",
      "PerformRunnableAsyncValveConfigTests#noExecutor",
      "JexlConditionTests#create",
      "JexlConditionTests#evaluate",
      "JexlConditionTests#setExpression",
      "JexlConditionTests#init_",
      "TryCatchFinallyValveTests#config",
      "TryCatchFinallyValveTests#invoke_try",
      "TryCatchFinallyValveTests#invoke_try_finally",
      "TryCatchFinallyValveTests#invoke_try_catch",
      "TryCatchFinallyValveTests#invoke_try_catch_failed",
      "TryCatchFinallyValveTests#invoke_try_catch_customized_exceptionName",
      "TryCatchFinallyValveTests#invoke_try_catch_finally",
      "WhileLoopValveTests#loop_conditionNotSatisfied",
      "WhileLoopValveTests#config",
      "WhileLoopValveTests#init_",
      "WhileLoopValveTests#loop_exceedsMax",
      "WhileLoopValveTests#loop_notInited",
      "JspEngineTests#contextRoot_getResourceOfRoot",
      "JspEngineTests#contextRoot_failed",
      "JspEngineTests#createEngineDirectly",
      "JspEngineTests#contextRoot_getResourceOfWebXml",
      "AbstractLoopValveTests#loop_notInited",
      "AbstractLoopValveTests#init_",
      "AbstractLoopValveTests#loop_exceedsMax",
      "BreakUnlessTests#init_",
      "BreakIfValveTests#init_",
      "SubPipelineValveTests#init_"
    ]
  },
  "org.codelibs.elasticsearch.module:lang-painless": {
    "immutables": [
      "ElasticPersonTest#regex_forElastic",
      "ElasticAggregationTest#no_groupBy",
      "ElasticAggregationTest#agg1",
      "ElasticAggregationTest#agg2",
      "ElasticAggregationTest#empty",
      "ScrollingTest#withLimit",
      "ScrollingTest#noLimit",
      "ElasticIntegrationTests#projection",
      "ElasticIntegrationTests#nullable",
      "ElasticIntegrationTests#comparison",
      "ElasticIntegrationTests#optional",
      "ElasticIntegrationTests#empty",
      "ElasticIntegrationTests#equality",
      "ElasticIntegrationTests#basic",
      "ElasticIntegrationTests#startsWith",
      "ElasticIntegrationTests#contains",
      "ElasticIntegrationTests#fetch",
      "ElasticIntegrationTests#whitespace",
      "ElasticIntegrationTests#endsWith"
    ],
    "Jest": [
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeWithCIDRMaskAggregation",
      "Ipv4RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeAggregation",
      "FlushIntegrationTest#testFlushWithWaitifOngoing",
      "FlushIntegrationTest#testFlushSpecificIndices",
      "FlushIntegrationTest#testFlushWithForce",
      "FlushIntegrationTest#testFlushAll",
      "CatIntegrationTest#shouldDisplayRecoveryForSingleResult",
      "CatIntegrationTest#catNodes",
      "CatIntegrationTest#catAllShards",
      "CatIntegrationTest#shouldProperlyMapSingleResult",
      "CatIntegrationTest#shouldFilterResultsToASingleIndex",
      "CatIntegrationTest#catShardsSingleIndex",
      "CatIntegrationTest#shouldReturnEmptyPlainTextForIndices",
      "CatIntegrationTest#shouldDisplayAliasForSingleResult",
      "CatIntegrationTest#shouldChangeOrderOfColumnsByspecifyingParameters",
      "GetSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "CloseIndexIntegrationTest#testClose",
      "SearchScrollIntegrationTest#searchWithValidQuery",
      "SearchScrollIntegrationTest#clearScrollAll",
      "MultiSearchIntegrationTest#multipleSearchRequestsWithOneFaulty",
      "MultiSearchIntegrationTest#multipleSearchRequests",
      "RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "RangeAggregationIntegrationTest#testGetRangeAggregation",
      "GetSettingsIntegrationTest#testForNonexistentIndex",
      "GetSettingsIntegrationTest#testBasicFlow",
      "StatsAggregationIntegrationTest#testGetStatsAggregation",
      "StatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "CardinalityAggregationIntegrationTest#testBadAggregationQueryResult",
      "CardinalityAggregationIntegrationTest#testGetCardinalityAggregation",
      "SignificantTermsAggregationIntegrationTest#testGetSignificantTermsAggregation",
      "SignificantTermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "MissingAggregationIntegrationTest#testBadAggregationQueryResult",
      "MissingAggregationIntegrationTest#testGetMissingAggregation",
      "PendingClusterTasksIntegrationTest#pendingClusterTasks",
      "MultiGetIntegrationTest#getMultipleDocsWhenSomeIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getWithPartialSource",
      "MultiGetIntegrationTest#getMultipleDocsWhenAllIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenSomeIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getWithoutSource",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getMultipleDocsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenAllIndexedDocsAreRequested",
      "GetMappingIntegrationTest#testWithoutParameters",
      "GetMappingIntegrationTest#testWithSingleIndex",
      "GetMappingIntegrationTest#testWithMultipleIndices",
      "UpdateIntegrationTest#scriptedUpdateWithValidParameters",
      "UpdateIntegrationTest#partialDocUpdateWithInvalidVersion",
      "UpdateIntegrationTest#partialDocUpdateWithValidParameters",
      "UpdateIntegrationTest#partialDocUpdateWithValidVersion",
      "ValueCountAggregationIntegrationTest#testGetValueCountAggregation",
      "ValueCountAggregationIntegrationTest#testBadAggregationQueryResult",
      "DateRangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "DateRangeAggregationIntegrationTest#testGetDateRangeAggregation",
      "DeleteStoredScriptIntegrationTest#delete_a_stored_script_for_Painless",
      "PutMappingIntegrationTest#testPutMappingWithDocumentMapperBuilder",
      "PutMappingIntegrationTest#testPutMapping",
      "SumAggregationIntegrationTest#testGetSumAggregation",
      "SumAggregationIntegrationTest#testBadAggregationQueryResult",
      "CreateStoredScriptIntegrationTest#createAStoredScript",
      "HistogramAggregationIntegrationTest#testGetHistogramAggregation",
      "HistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "ModifyAliasesIntegrationTest#testAddAlias",
      "ModifyAliasesIntegrationTest#testAddAliasForMultipleIndex",
      "ModifyAliasesIntegrationTest#testRemoveAlias",
      "ModifyAliasesIntegrationTest#testAddAliasWithRouting",
      "ModifyAliasesIntegrationTest#testAddAndRemoveAlias",
      "UpdateSettingsIntegrationTest#testWithEmptySource",
      "UpdateSettingsIntegrationTest#testWithEmptyJsonSource",
      "UpdateSettingsIntegrationTest#testWithNullSource",
      "UpdateSettingsIntegrationTest#testBasicFlowForAllIndices",
      "UpdateSettingsIntegrationTest#testBasicFlowForNonExistingIndex",
      "UpdateSettingsIntegrationTest#testBasicFlowForTargetedIndex",
      "IndicesExistsIntegrationTest#multiIndexExists",
      "IndicesExistsIntegrationTest#indexNotExists",
      "IndicesExistsIntegrationTest#multiIndexNotExists",
      "IndicesExistsIntegrationTest#indexExists",
      "ExplainIntegrationTest#explain",
      "DeleteIntegrationTest#deleteRealDocument",
      "DeleteIntegrationTest#deleteDocumentAsynchronously",
      "DeleteIntegrationTest#deleteNonExistingDocument",
      "HealthIntegrationTest#healthWithTimeout",
      "HealthIntegrationTest#healthWaitForStatus",
      "HealthIntegrationTest#healthWaitForNoRelocatingShards",
      "HealthIntegrationTest#healthOnlyLocal",
      "HealthIntegrationTest#healthWithIndex",
      "HealthIntegrationTest#healthLevelShards",
      "HealthIntegrationTest#health",
      "FiltersAggregationIntegrationTest#testGetFiltersAggregation",
      "FiltersAggregationIntegrationTest#testGetAnonymousFiltersAggregation",
      "MinAggregationIntegrationTest#testGetMinAggregation",
      "MinAggregationIntegrationTest#testBadAggregationQueryResult",
      "PercentileRanksAggregationIntegrationTest#testBadAggregationQueryResult",
      "PercentileRanksAggregationIntegrationTest#testGetPercentileRanksAggregation",
      "OpenIndexIntegrationTest#testOpen",
      "RolloverIntegrationTest#testRollover",
      "StatsIntegrationTest#clusterStats",
      "StatsIntegrationTest#clusterStatsWithSpecificNodes",
      "TermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "TermsAggregationIntegrationTest#testGetTermsAggregation",
      "SortIntegrationTest#searchWithCustomSort",
      "SortIntegrationTest#searchWithSimpleFieldSort",
      "SortIntegrationTest#searchWithMultiIndexSortFieldUnmapped",
      "StatsIntegrationTest#testDefaultStats",
      "StatsIntegrationTest#testStatsWithOptions",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreads",
      "NodesHotThreadsIntegrationTest#allNodesHotThreads",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreadsWithCustomInterval",
      "FilterAggregationIntegrationTest#testGetFilterAggregation",
      "NodesStatsIntegrationTest#nodesStatsWithIndicesAndJvm",
      "NodesStatsIntegrationTest#nodesStatsWithIndices",
      "NodesStatsIntegrationTest#nodesStats",
      "NodesStatsIntegrationTest#nodesStatsAll",
      "RefreshIntegrationTest#testFlushAll",
      "RefreshIntegrationTest#testFlushSpecificIndices",
      "PercentilesAggregationIntegrationTest#testBadAggregationQueryResult",
      "PercentilesAggregationIntegrationTest#testGetPercentilesAggregation",
      "SearchTemplateIntegrationTest#searchTemplateInlineScript",
      "SearchTemplateIntegrationTest#searchTemplateInlineScriptWithSort",
      "SearchTemplateIntegrationTest#searchWithValidQuery",
      "SearchTemplateIntegrationTest#searchTemplateIdScriptWithSort",
      "DateHistogramAggregationIntegrationTest#testGetDateHistogramAggregation",
      "DateHistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "AvgAggregationIntegrationTest#testBadAggregationQueryResult",
      "AvgAggregationIntegrationTest#testGetAvgAggregation",
      "GeoDistanceAggregationTest#testBadAggregationQueryResult",
      "GeoDistanceAggregationTest#testGetGeoDistanceAggregationWithProperName",
      "BulkIntegrationTest#bulkOperationWithSourceList",
      "BulkIntegrationTest#bulkOperationWithIndexCreateOpType",
      "BulkIntegrationTest#bulkOperationWithCustomGson",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingLineBreak",
      "BulkIntegrationTest#bulkOperationWithIndex",
      "BulkIntegrationTest#bulkOperationWithMultipleIndex",
      "BulkIntegrationTest#bulkOperationWithDefaultIndexAndDefaultType",
      "BulkIntegrationTest#bulkOperationWithSingleDelete",
      "BulkIntegrationTest#bulkOperationWithIndexJsonSource",
      "BulkIntegrationTest#bulkOperationWithIndexWithParam",
      "BulkIntegrationTest#bulkOperationWithMultipleDelete",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingWhitespace",
      "BulkIntegrationTest#bulkOperationWithMultipleIndexAndDelete",
      "BulkIntegrationTest#bulkOperationWithIndexAndUpdate",
      "CountIntegrationTest#countWithValidTermQueryOnSingleIndex",
      "CountIntegrationTest#countWithMultipleIndices",
      "CountIntegrationTest#countWithValidTermQueryOnAllIndices",
      "GeoHashGridAggregationIntegrationTest#testGetGeoDistanceAggregationWithProperName",
      "GeoHashGridAggregationIntegrationTest#testBadAggregationQueryResult",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAlias",
      "AliasExistsIntegrationTest#testIndexDoesNotExist",
      "AliasExistsIntegrationTest#testAliasDoesNotExist",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificIndex",
      "AliasExistsIntegrationTest#testAliasesExists",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAliasAndIndex",
      "AliasExistsIntegrationTest#testAliasAndIndexDoesNotExist",
      "AliasExistsIntegrationTest#testAliasesExistsForMultipleIndices",
      "DeleteIndexIntegrationTest#deleteNonExistingIndex",
      "DeleteIndexIntegrationTest#deleteIndex",
      "TypeExistIntegrationTest#indexTypeExists",
      "TypeExistIntegrationTest#indexTypeNotExists",
      "ValidateIntegrationTest#validateQueryWithIndexAndType",
      "ValidateIntegrationTest#validateQueryWithIndex",
      "ReindexIntegrationTest#testWithScriptString",
      "ReindexIntegrationTest#testReindex",
      "ReindexIntegrationTest#documentShouldNotBeTransferredWithQuery",
      "ReindexIntegrationTest#documentShouldBeTransferredWithQuery",
      "ExtendedStatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "ExtendedStatsAggregationIntegrationTest#testGetExtendedStatsAggregation",
      "GetAliasesIntegrationTest#testGetAliases",
      "GetAliasesIntegrationTest#testGetAliasesForSpecificIndex",
      "GetAliasesIntegrationTest#testGetAliasesForMultipleSpecificIndices",
      "FieldCapabilitiesIntegrationTest#testFieldStats",
      "StateIntegrationTest#clusterState",
      "StateIntegrationTest#clusterStateWithMetadata",
      "ScriptedMetricAggregationIntegrationTest#testBadAggregationQueryResult",
      "ScriptedMetricAggregationIntegrationTest#testGetScriptedMetricAggregation",
      "UpdateByQueryIntegrationTest#update",
      "MaxAggregationIntegrationTest#testBadAggregationQueryResult",
      "MaxAggregationIntegrationTest#testGetMaxAggregation",
      "GetIntegrationTest#getAsynchronously",
      "GetIntegrationTest#getWithType",
      "GetIntegrationTest#getAsClass",
      "GetIntegrationTest#get",
      "GetIntegrationTest#getWithoutType",
      "GetIntegrationTest#getWithSpecialCharacterInDocId",
      "CreateIndexIntegrationTest#createIndexWithSettingsMapAndMappingsString",
      "CreateIndexIntegrationTest#createIndexWithMapSettings",
      "CreateIndexIntegrationTest#createIndexWithDefaultSettings",
      "AnalyzeIntegrationTest#testWithCustomTransientAnalyzer",
      "AnalyzeIntegrationTest#testWithAnalyzer",
      "AnalyzeIntegrationTest#testWithAnalyzerWithTextFormat",
      "PingIntegrationTest#simplePing",
      "TaskInformationIntegrationTest#shouldReturnTaskInformation",
      "SearchShardsIntegrationTest#testBasicFlow",
      "UpdateSettingsIntegrationTest#transientSettingShouldBeUpdated",
      "UpdateSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "GeoBoundsAggregationIntegrationTest#testBadAggregationQueryResult",
      "GeoBoundsAggregationIntegrationTest#testGeoBoundsAggregation",
      "RerouteIntegrationTest#move",
      "GetStoredScriptIntegrationTest#createStoredScript",
      "NodesInfoIntegrationTest#nodesInfoWithNodeAndWithInfo",
      "NodesInfoIntegrationTest#nodesInfoWithNodeWithoutInfo",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeAndInfo",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndWithoutInfo",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndMultipleInfo",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeWithInfo",
      "SearchIntegrationTest#searchAndGetFirstHitWithSource",
      "SearchIntegrationTest#searchWithValidQuery",
      "SearchIntegrationTest#searchWithValidQueryAndExplain",
      "SearchIntegrationTest#searchWithValidTermQuery",
      "SearchIntegrationTest#suggestQuery",
      "SearchIntegrationTest#testWithEncodedURI",
      "SearchIntegrationTest#searchWithSourceFilterByParam",
      "SearchIntegrationTest#searchWithSort",
      "SearchIntegrationTest#searchWithPercolator",
      "SearchIntegrationTest#searchInnerHits",
      "SearchIntegrationTest#searchIndexWithTypeWithNullJestId",
      "SearchIntegrationTest#searchWithNoHits",
      "SearchIntegrationTest#searchWithMultipleHits",
      "SearchIntegrationTest#searchWithQueryBuilder",
      "SearchIntegrationTest#searchWithSourceFilterByQuery",
      "SearchIntegrationTest#searchAndGetFirstHitWithoutSource",
      "IndexIntegrationTest#automaticIdGeneration",
      "IndexIntegrationTest#indexDocumentWithValidParametersAndWithoutSettings",
      "IndexIntegrationTest#indexDocumentWithDateField",
      "PutTemplateIntegrationTest#testPutTemplate"
    ]
  },
  "org.hibernate:hibernate-entitymanager": {
    "querydsl": [
      "HibernateDomainExporterTest#test",
      "JPADomainExporterTest#test",
      "AntJPADomainExporterTest#test"
    ],
    "ddd-leaven-v2": [
      "OrderingTest#canNotPurchaseIfOfferChanged",
      "OrderingTest#shouldPurchaseProducts"
    ]
  },
  "org.reflections:reflections": {
    "querydsl": [
      "JDOExporterMojoTest#execute",
      "TemplatesTest#default_instance",
      "GenericExporterMojoTest#execute",
      "TemplatesTest#test",
      "SerializationTest#expressions",
      "ClassPathUtilsTest#scanPackage",
      "ClassPathUtilsTest#scanPackage_check_initialized",
      "GenericExporterTest#export_useFieldTypes",
      "GenericExporterTest#export_with_keywords",
      "GenericExporterTest#export_serializerConfig",
      "GenericExporterTest#export",
      "GenericExporterTest#export_handle_no_methods_nor_fields",
      "GenericExporterTest#export_domain_package",
      "GenericExporterTest#export_package_as_string",
      "GenericExporterTest#export_propertyHandling",
      "GenericExporterTest#override_serializer",
      "GenericExporterTest#export_with_stopClass",
      "GenericExporterTest#export_with_package_suffix",
      "JPAExporterMojoTest#execute",
      "GenericExporterTest#execute",
      "GenericExporterTest#execute2"
    ],
    "isis": [
      "SortedSetsContractTestAll#searchAndTest",
      "BidirectionalRelationshipContractTestAll#searchAndTest",
      "InjectServiceMethodMustBeFinalContractTestAll#searchAndTest"
    ]
  },
  "commons-configuration:commons-configuration": {
    "incubator-pinot": [
      "AdminConsoleIntegrationTest",
      "UploadRefreshDeleteIntegrationTest",
      "StarTreeV2ClusterIntegrationTest",
      "PinotURIUploadIntegrationTest",
      "PinotOutputFormatTest#verifyRawIndex",
      "PinotOutputFormatTest#verifyStarIndex",
      "FlakyConsumerRealtimeClusterIntegrationTest",
      "TableSizeResourceTest",
      "LLCRealtimeClusterSplitCommitIntegrationTest",
      "LLCRealtimeClusterIntegrationTest",
      "PurgeTaskExecutorTest",
      "SegmentStatusCheckerIntegrationTest",
      "MultiNodesOfflineClusterIntegrationTest",
      "HybridClusterIntegrationTest",
      "ConvertToRawIndexMinionClusterIntegrationTest",
      "SimpleMinionClusterIntegrationTest",
      "MetadataAndDictionaryAggregationPlanClusterIntegrationTest",
      "OfflineClusterIntegrationTest",
      "StarTreeClusterIntegrationTest",
      "HadoopSegmentBuildPushOfflineClusterIntegrationTest",
      "BalanceNumSegmentAssignmentStrategyIntegrationTest",
      "DeleteAPIHybridClusterIntegrationTest",
      "RealtimeClusterIntegrationTest",
      "TablesResourceTest"
    ],
    "jsprit": [
      "VrpXMLWriterTest#whenWritingServices_itWritesThemCorrectly",
      "VrpXMLWriterTest#whenWritingShipments_readingThemAgainMustReturnTheWrittenLocationIdOfS1",
      "VrpXMLWriterTest#whenWritingShipments_readingThemAgainMustReturnTheWrittenDeliveryTimeWindowsOfS1",
      "VrpXMLWriterTest#whenWritingShipments_readingThemAgainMustReturnTheWrittenDeliveryServiceTimeOfS1",
      "VrpXMLWriterTest#whenWritingVehicleV2_readingAgainAssignsCorrectType",
      "VrpXMLWriterTest#solutionWithoutUnassignedJobsShouldBeWrittenCorrectly",
      "VrpXMLWriterTest#whenWritingVehicleWithSeveralCapacityDimensions_itShouldBeWrittenAndRereadCorrectly",
      "VrpXMLWriterTest#whenWritingVehicles_vehShouldHave0Skills",
      "VrpXMLWriterTest#shouldWriteNameOfService",
      "VrpXMLWriterTest#whenWritingVehicleV1_itsStartLocationMustBeWrittenCorrectly",
      "VrpXMLWriterTest#shouldWriteNameOfShipment",
      "VrpXMLWriterTest#whenWritingShipments_readingThemAgainMustReturnTheWrittenPickupTimeWindowsOfS1",
      "VrpXMLWriterTest#t",
      "VrpXMLWriterTest#whenWritingShipments_readingThemAgainMustReturnTheWrittenLocationCoordinateOfS1",
      "VrpXMLWriterTest#whenWritingVehicleV2_readingItsLocationsAgainReturnsCorrectLocations",
      "VrpXMLWriterTest#whenWritingServicesWithSeveralCapacityDimensions_itWritesThemCorrectly",
      "VrpXMLWriterTest#whenWritingVehicleWithSeveralCapacityDimensions_itShouldBeWrittenAndRereadCorrectlyV2",
      "VrpXMLWriterTest#whenWritingVehicleV1_readingAgainAssignsCorrectType",
      "VrpXMLWriterTest#whenWritingShipments_readingThemAgainMustReturnTheWrittenLocationIdsOfS1",
      "VrpXMLWriterTest#whenWritingVehicles_vehShouldContain_skill1",
      "VrpXMLWriterTest#whenWritingVehicles_vehShouldContain_skill2",
      "VrpXMLWriterTest#whenWritingVehicles_vehShouldContain_skill5",
      "VrpXMLWriterTest#whenWritingService_itShouldHaveTheCorrectNuSkills",
      "VrpXMLWriterTest#whenWritingVehicleV2_readingItsLocationsCoordsAgainReturnsCorrectLocationsCoords",
      "VrpXMLWriterTest#whenWritingVehicles_vehShouldHave2Skills",
      "VrpXMLWriterTest#whenWritingShipmentWithSeveralCapacityDimension_itShouldWriteAndReadItCorrectly",
      "VrpXMLWriterTest#solutionWithUnassignedJobsShouldBeWrittenCorrectly",
      "VrpXMLWriterTest#whenWritingShipments_shipmentShouldHaveCorrectNuSkills",
      "VrpXMLWriterTest#whenWritingService_itShouldContain_skill1",
      "VrpXMLWriterTest#whenWritingService_itShouldContain_skill2",
      "VrpXMLWriterTest#whenWritingVehicleV1_itDoesNotReturnToDepotMustBeWrittenCorrectly",
      "VrpXMLWriterTest#whenWritingShipments_shipmentShouldContain_skill1",
      "VrpXMLWriterTest#whenWritingShipments_shipmentShouldContain_skill2",
      "VrpXMLWriterTest#whenWritingShipments_shipmentShouldContain_skill3",
      "InitialRoutesTest#whenReading_thereShouldBeOnlyOneActAssociatedToJob2",
      "InitialRoutesTest#whenReading_thereShouldBeTwoActsAssociatedToShipment4",
      "InitialRoutesTest#whenReading_thereShouldBeOnlyOneActAssociatedToJob2_v2",
      "InitialRoutesTest#whenReading_jobMapShouldContain_shipment4",
      "InitialRoutesTest#whenReadingProblem2_jobMapShouldContain_service2",
      "InitialRoutesTest#whenReading_jobMapShouldOnlyContainJob2",
      "VrpXMLReaderTest#whenReadingService1_skill2ShouldBeAssigned",
      "VrpXMLReaderTest#whenReadingJobs_nuOfJobsIsReadThemCorrectly",
      "VrpXMLReaderTest#whenReadingJobs_deliveryServiceTimeOfShipment4IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingVrp_vehicleTypesAreReadCorrectly",
      "VrpXMLReaderTest#whenReadingShipments_itReadsThemCorrectly",
      "VrpXMLReaderTest#whenReadingJobs_deliveryTimeWindowOfShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingVrp_problemTypeIsReadCorrectly",
      "VrpXMLReaderTest#whenReadingFile_v3HasTheCorrectEndLocationCoordinate",
      "VrpXMLReaderTest#whenReadingVehicles_skill2ShouldBeAssigned",
      "VrpXMLReaderTest#whenReadingVrp_vehiclesAreReadCorrectly",
      "VrpXMLReaderTest#whenReadingServices_twOfService1IsReadCorrectly",
      "VrpXMLReaderTest#testRead_ifReaderIsCalled_itReadsSuccessfully",
      "VrpXMLReaderTest#testRead_ifReaderIsCalled_itReadsSuccessfullyV2",
      "VrpXMLReaderTest#whenReadingJobs_deliveryServiceTimeOfShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingJobs_pickupServiceTimeOfShipment4IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingFile_v2MustNotReturnToDepot",
      "VrpXMLReaderTest#whenReadingService2_nuSkillsOfV2ShouldBeCorrect",
      "VrpXMLReaderTest#whenReadingServices_capOfService1IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingJobs_pickupServiceTimeOfShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingFile_v4HasTheCorrectEndLocation",
      "VrpXMLReaderTest#whenReadingInitialRoute_nuActivitiesShouldBeCorrect",
      "VrpXMLReaderTest#unassignedJobShouldBeRead",
      "VrpXMLReaderTest#whenReadingJobs_pickupCoordShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingFile_v3HasTheCorrectStartLocationCoordinate",
      "VrpXMLReaderTest#whenReadingShipment4_nuSkillsOfV2ShouldBeCorrect",
      "VrpXMLReaderTest#whenReadingFile_v4HasTheCorrectLocationCoordinate",
      "VrpXMLReaderTest#whenReadingFile_v4HasTheCorrectEndLocationCoordinate",
      "VrpXMLReaderTest#whenReadingShipment3_skill1ShouldBeAssigned",
      "VrpXMLReaderTest#whenReadingInitialRouteWithShipment4_thisShipmentShouldNotAppearInJobMap",
      "VrpXMLReaderTest#whenReadingShipment3_nuSkillsShouldBeCorrect",
      "VrpXMLReaderTest#whenReadingJobs_capOfShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingServices_typeOfService1IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingFile_v4HasTheCorrectStartLocationCoordinate",
      "VrpXMLReaderTest#whenReadingFile_v4HasTheCorrectLocationId",
      "VrpXMLReaderTest#whenReadingFile_v5AndItsTypeHasTheCorrectCapacityDimensionValues",
      "VrpXMLReaderTest#whenReadingFile_v3HasTheCorrectLocationId",
      "VrpXMLReaderTest#whenReadingInitialRoute_nuInitialRoutesShouldBeCorrect",
      "VrpXMLReaderTest#whenReadingServices_durationOfService1IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingVehicles_nuSkillsShouldBeCorrect",
      "VrpXMLReaderTest#whenReadingFile_v3HasTheCorrectStartLocation",
      "VrpXMLReaderTest#whenReadingService1_skill1ShouldBeAssigned",
      "VrpXMLReaderTest#whenReadingService1_nuSkillsShouldBeCorrect",
      "VrpXMLReaderTest#whenReadingJobs_deliveryLocationIdShipment4IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingFile_v3HasTheCorrectEndLocation",
      "VrpXMLReaderTest#whenReadingVehicles_skill1ShouldBeAssigned",
      "VrpXMLReaderTest#whenReadingJobs_pickupTimeWindowOfShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingJobs_pickupLocationIdShipment4IsReadCorrectly",
      "VrpXMLReaderTest#shouldReadNameOfService",
      "VrpXMLReaderTest#whenReadingShipment3_skill2ShouldBeAssigned",
      "VrpXMLReaderTest#whenReadingVehicles_nuSkillsOfV2ShouldBeCorrect",
      "VrpXMLReaderTest#whenReadingJobs_deliveryCoordShipment3IsReadCorrectly",
      "VrpXMLReaderTest#shouldReadNameOfShipment",
      "VrpXMLReaderTest#whenReadingServices_itReadsThemCorrectly",
      "VrpXMLReaderTest#whenReadingFile_v4HasTheCorrectStartLocation",
      "VrpXMLReaderTest#whenReadingJobs_deliveryIdShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingInitialRouteWithDepTime10_departureTimeOfRouteShouldBeReadCorrectly",
      "VrpXMLReaderTest#whenReadingVrp_vehiclesAreReadCorrectly2",
      "VrpXMLReaderTest#whenReadingFile_v3HasTheCorrectLocationCoordinate",
      "VrpXMLReaderTest#whenReadingJobs_pickupIdShipment3IsReadCorrectly",
      "VrpXMLReaderTest#whenReadingVrpWithInfiniteSize_itReadsCorrectly",
      "TestAlgorithmReader#itShouldReadMaxIterations",
      "TestAlgorithmReader#whenCreatingAlgorithm_nOfIterationsIsReadCorrectly",
      "TestAlgorithmReader#whenCreatingAlgorithm_nOfStrategiesIsCorrect",
      "TestAlgorithmReader#whenCreatingAlgorithm_nOfStrategyModulesIsCorrect",
      "TestAlgorithmReader#itShouldReadTermination",
      "TestAlgorithmReader#testTypedMap",
      "TestAlgorithmReader#readerTest_whenReadingAlgoWithSchemaValidation_itReadsCorrectly",
      "TestAlgorithmReader#readerTest_whenReadingAlgoWithSchemaValidationWithoutIterations_itReadsCorrectly",
      "TestAlgorithmReader#initialiseConstructionAlgoCorrectly",
      "TestAlgorithmReader#testTypedMap2",
      "TestAlgorithmReader#testTypedMap3",
      "TestAlgorithmReader#testTypedMap4",
      "TestAlgorithmReader#whenSettingPrematureBreak_itShouldReadTermination"
    ]
  },
  "org.glassfish.jersey.media:jersey-media-multipart": {
    "incubator-pinot": [
      "ControllerInstanceToggleTest",
      "ControllerPeriodicTaskStarterTest#testHelixResourceManagerDuringControllerStart",
      "AdminConsoleIntegrationTest",
      "UploadRefreshDeleteIntegrationTest",
      "StarTreeV2ClusterIntegrationTest",
      "PinotSchemaRestletResourceTest",
      "PinotURIUploadIntegrationTest",
      "ReplicaGroupRebalanceStrategyTest",
      "FlakyConsumerRealtimeClusterIntegrationTest",
      "HelixHelperTest",
      "PinotInstanceRestletResourceTest",
      "PinotSegmentRestletResourceTest",
      "LLCRealtimeClusterSplitCommitIntegrationTest",
      "LLCRealtimeClusterIntegrationTest",
      "SegmentStatusCheckerIntegrationTest",
      "MultiNodesOfflineClusterIntegrationTest",
      "HybridClusterIntegrationTest",
      "PinotHelixResourceManagerTest",
      "ConvertToRawIndexMinionClusterIntegrationTest",
      "SimpleMinionClusterIntegrationTest",
      "PinotTableRestletResourceTest",
      "MetadataAndDictionaryAggregationPlanClusterIntegrationTest",
      "FileUploadPathProviderTest",
      "OfflineClusterIntegrationTest",
      "PinotFileUploadTest",
      "StarTreeClusterIntegrationTest",
      "HadoopSegmentBuildPushOfflineClusterIntegrationTest",
      "PinotTenantRestletResourceTest",
      "BalanceNumSegmentAssignmentStrategyIntegrationTest",
      "DeleteAPIHybridClusterIntegrationTest",
      "ControllerTenantTest",
      "RealtimeClusterIntegrationTest",
      "TableViewsTest",
      "AccessControlTest"
    ],
    "openscoring": [
      "ModelResourceTest#linearRegressionAuto",
      "ModelResourceTest#associationRulesShopping",
      "ModelResourceTest#decisionTreeIris"
    ]
  },
  "com.google.code.gson:gson": {
    "Jest": [
      "StatsIntegrationTest#clusterStatsWithSpecificNodes",
      "StatsIntegrationTest#clusterStats"
    ],
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser",
      "AlertServiceTest#testCountSharedAlertsMetaPaged"
    ]
  },
  "org.slf4j:slf4j-simple": {
    "servicecomb-pack": [
      "SagaLoadBalancedSenderTest#stopSendingWhenClusterIsDown"
    ],
    "takes": [
      "TkSlf4jTest#logsEmptyMessage"
    ]
  },
  "io.netty:netty-transport": {
    "servicecomb-java-chassis": [
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent6",
      "TestVertxMetersInitializer#init",
      "TestAbstractTransport#testMyAbstractTransport",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaNormalNotEncode",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceNewSC",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceOldSC",
      "TestAbstractTransport#testMyAbstractTransportException",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaAlreadyHaveQuery",
      "TestTcpClientConnection#connect_success",
      "TestTcpClientConnection#onClosed",
      "TestVertxRestTransport#testCanInitNullAddress",
      "TestVertxRestTransport#testGetOrder",
      "TestVertxRestTransport#testCanInitListened",
      "TestVertxRestTransport#testInit",
      "TestVertxRestTransport#testSendException",
      "TestVertxRestTransport#testGetName",
      "TestVertxRestTransport#testCanInitNotListened",
      "TestVertxRestTransport#testGetInstance",
      "TestReadStreamPart#saveToWriteStream",
      "TestReadStreamPart#saveToWrite_readException",
      "TestReadStreamPart#constructFromHttpClientResponse_noContentType",
      "TestReadStreamPart#saveAsString",
      "TestReadStreamPart#saveAsBytes",
      "TestReadStreamPart#saveToFile",
      "TestReadStreamPart#saveToWriteStream_writeException",
      "TestReadStreamPart#constructFromHttpClientResponse_hasContentType",
      "TestReadStreamPart#saveToFile_notExist_notCreate",
      "AbortFaultTest#injectFaultError",
      "AbortFaultTest#injectFaultNoPercentageConfig",
      "AbortFaultTest#injectFaultNoErrorCodeConfig",
      "AbortFaultTest#injectFaultNoError",
      "TestHighwayVerticle#testHighwayVerticle",
      "TestWebsocketClientPool#createHttpClientOptions_notHttp2",
      "TestWebsocketClientPool#createHttpClientOptions_http2",
      "TestHighwayServerConnection#testRequestError",
      "TestHighwayServerConnection#testRequestNormal",
      "TestHighwayServerConnection#testSetParameterNormal",
      "TestHighwayServerConnection#testInvalidMsgType",
      "TestHighwayServerConnection#testSetParameterError",
      "TestHighwayServerConnection#testReqeustHeaderError",
      "TestTransportVertxFactory#getTransportVertx",
      "TestServletRestTransport#testInitNotPublish",
      "TestServletRestTransport#testCanInitNullAddress",
      "TestServletRestTransport#testGetOrder",
      "TestServletRestTransport#testCanInitListened",
      "TestServletRestTransport#testInitPublishWithUrlPrefix",
      "TestServletRestTransport#testCanInitNotListened",
      "TestServletRestTransport#testInitPublishNoUrlPrefix",
      "TestVertxUtils#testVertxUtilsInitNullOptions",
      "TestVertxUtils#testGetOrCreateVertx",
      "TestVertxUtils#testCreateVertxWithFileCPResolving",
      "TestVertxUtils#testVertxUtilsInitWithOptions",
      "TestTcpServer#testConnectionLimit",
      "TestConfigCenterClient#testConnectServer",
      "TestHighwayTransport#testInit",
      "TestHighwayTransport#testSendException",
      "TestHighwayTransport#testHighway",
      "TestHighwayTransport#testGetInstance",
      "TestTcpServerConnection#test",
      "TestSCBEngine#test",
      "DelayFaultTest#injectFaultNoPercentageConfig",
      "DelayFaultTest#injectFaultNoDelayMsConfig",
      "DelayFaultTest#injectFaultNotDelay",
      "DelayFaultTest#injectFaultVertxDelay",
      "TestInspectorImpl#urlPrefix"
    ],
    "aws-sdk-java-v2": [
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsInvalid_ThrowException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_ExtraData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsValid",
      "ResourceManagementTest#executorFromBuilderNotShutdown",
      "MultipartUploadTest#createMultipartUpload_overrideContentType",
      "MultipartUploadTest#asyncCreateMultipartUpload_shouldHaveUploadsQueryParam",
      "MultipartUploadTest#syncCreateMultipartUpload_shouldHaveUploadsQueryParam",
      "ExecutionInterceptorTest#async_interceptorException_failureInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingInput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingOutput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_serviceException_failureInterceptorMethodsCalled",
      "AsyncTimeoutTest#attemptsTimeout_shouldThrowApiCallAttemptTimeoutException",
      "AsyncTimeoutTest#attemptFinishWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_slowTransformer_shouldThrowApiCallAttemptTimeoutException",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime500_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#allAttemtsNotFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncAwsJsonRetryTest#retryPolicyNone_shouldNotRetry",
      "AsyncAwsJsonRetryTest#shouldRetryOnRetryableAwsErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOnAwsThrottlingErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOn500",
      "AsyncResponseThreadingTest#completionWithNioThreadWorksCorrectly",
      "EndpointOverrideTest#getObject_shouldNotThrowNPE",
      "EndpointOverrideTest#getObjectAsync_shouldNotThrowNPE",
      "XmlMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "XmlMetadataTest#requestIdNotInXmlOrHeader_responseMetadataShouldBeUnknown",
      "AsyncResponseTransformerTest#jsonClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "AsyncResponseTransformerTest#xmlClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "QueryMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "QueryMetadataTest#asyncResponse_shouldContainResponseMetadata",
      "QueryMetadataTest#syncResponse_shouldContainResponseMetadata",
      "QueryMetadataTest#requestIdNotInXmlOrHeader_responseMetadataShouldBeUnknown",
      "ChecksumResetsOnRetryTest#syncPutObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#asyncPutObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#syncGetObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#asyncGetObject_resetsChecksumOnRetry",
      "AsyncFaultTest#subscriberCancel_correctExceptionThrown",
      "SdkHttpResponseTest#asyncStreamingMethodShouldContainSdkHttpDate",
      "SdkHttpResponseTest#syncStreamingShouldContainSdkHttpDate",
      "SdkHttpResponseTest#syncNonStreamingShouldContainSdkHttpDate",
      "SdkHttpResponseTest#asyncNonStreamingShouldContainsSdkHttpData",
      "ClockSkewAdjustmentTest#clockSkewDoesNotAdjustOnNonClockSkewErrors",
      "ClockSkewAdjustmentTest#clockSkewAdjustsOnClockSkewErrors",
      "ClockSkewAdjustmentTest#clientClockSkewAdjustsWithoutRetries",
      "CustomResponseMetadataTest#asyncStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#syncNonStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#headerNotAvailable_responseMetadataShouldBeUnknown",
      "CustomResponseMetadataTest#syncStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#asyncNonStreaming_shouldContainResponseMetadata",
      "AsyncApiCallTimeoutTest#increaseTimeoutInRequestOverrideConfig_shouldTakePrecedence",
      "AsyncApiCallTimeoutTest#streamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retrySucceeded_FinishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retryWouldSucceed_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowBeforeRequestRequestHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowAfterErrorRequestHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#slowApiAttempt_ThrowsApiCallAttemptTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowResponseHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowErrorResponseHandler_ThrowsApiCallTimeoutException",
      "PaginatorInUserAgentTest#asyncPaginator_shouldHavePaginatorUserAgent",
      "PaginatorInUserAgentTest#syncPaginator_shouldHavePaginatorUserAgent"
    ]
  },
  "io.vertx:vertx-web": {
    "servicecomb-java-chassis": [
      "VertxRestInvocationTest#testCreateInvocation"
    ],
    "vertx-web": [
      "ApolloWSHandlerTest#testQueryWsCall",
      "ApolloWSHandlerTest#testQueryHttpCall",
      "ApolloWSHandlerTest#testWsKeepAlive",
      "ApolloWSHandlerTest#testSubscriptionWsCall",
      "VertxDataFetcherTest#testSimplePost",
      "VertxDataFetcherTest#testSimpleGet",
      "BatchRequestsTest#testSimpleBatch",
      "BatchRequestsTest#testEmptyBatch",
      "BatchRequestsTest#testMissingQuery",
      "BatchLoaderTest#testSimplePost",
      "PostRequestsWithBodyHandlerTest#testSimplePost",
      "PostRequestsWithBodyHandlerTest#testSimplePostNoContentType",
      "PostRequestsWithBodyHandlerTest#testSimplePostQueryInParam",
      "PostRequestsWithBodyHandlerTest#testUnsupportedMediaType",
      "PostRequestsWithBodyHandlerTest#testSimplePostQueryAsBody",
      "PostRequestsWithBodyHandlerTest#testContentTypeWithCharset",
      "PostRequestsWithBodyHandlerTest#testPostInvalidJson",
      "PostRequestsWithBodyHandlerTest#testSimplePostWithVariable",
      "PostRequestsWithBodyHandlerTest#testPostWithInvalidVariableParam",
      "PostRequestsWithBodyHandlerTest#testMultipleQueriesWithOperationName",
      "PostRequestsWithBodyHandlerTest#testPostNoQuery",
      "UnsupportedMethodTest#testUnsupportedMethod",
      "QueryContextTest#testCustomQueryContext",
      "QueryContextTest#testDefaultQueryContext",
      "JsonResultsTest#testSimplePost",
      "JsonResultsTest#testSimpleGet",
      "PostRequestsTest#testSimplePost",
      "PostRequestsTest#testSimplePostNoContentType",
      "PostRequestsTest#testSimplePostQueryInParam",
      "PostRequestsTest#testUnsupportedMediaType",
      "PostRequestsTest#testSimplePostQueryAsBody",
      "PostRequestsTest#testContentTypeWithCharset",
      "PostRequestsTest#testPostInvalidJson",
      "PostRequestsTest#testSimplePostWithVariable",
      "PostRequestsTest#testPostWithInvalidVariableParam",
      "PostRequestsTest#testMultipleQueriesWithOperationName",
      "PostRequestsTest#testPostNoQuery",
      "GetRequestsTest#testGetNoQuery",
      "GetRequestsTest#testSimpleGet",
      "GetRequestsTest#testSimpleGetWithVariable",
      "GetRequestsTest#testGetInvalidVariable",
      "GetRequestsTest#testMultipleQueriesWithOperationName"
    ]
  },
  "io.netty:netty-codec-http": {
    "servicecomb-java-chassis": [
      "ApolloClientTest#refreshApolloConfig",
      "TestVertxServerResponseToHttpServletResponse#sendPart_succ",
      "TestVertxServerResponseToHttpServletResponse#sendPart_inputStreamBreak",
      "TestVertxServerResponseToHttpServletResponse#prepareSendPartHeader_notUpdate",
      "TestVertxServerResponseToHttpServletResponse#prepareSendPartHeader_update",
      "TestVertxServerResponseToHttpServletResponse#sendPart_ReadStreamPart",
      "TestVertxServerResponseToHttpServletResponse#sendPart_openInputStreamFailed",
      "TestVertxMetersInitializer#init",
      "TestServiceRegistryClientImpl#syncHandler_failed",
      "TestVertxServerRequestToHttpServletRequest#testGetCookies",
      "TestStandardHttpServletResponseEx#sendPart_succ",
      "TestStandardHttpServletResponseEx#sendPart_failed",
      "TestConfigCenterClient#testConfigRefreshModeZero",
      "TestConfigCenterClient#testConfigRefreshException",
      "TestConfigCenterClient#testConnectServer",
      "TestConfigCenterClient#testConfigRefreshModeOne",
      "TestSimpleBodyHandler#testValidContentType"
    ],
    "aws-sdk-java-v2": [
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsInvalid_ThrowException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_ExtraData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsValid",
      "MultipartUploadTest#asyncCreateMultipartUpload_shouldHaveUploadsQueryParam",
      "ExecutionInterceptorTest#async_interceptorException_failureInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingInput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingOutput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_serviceException_failureInterceptorMethodsCalled",
      "AsyncTimeoutTest#attemptsTimeout_shouldThrowApiCallAttemptTimeoutException",
      "AsyncTimeoutTest#attemptFinishWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_slowTransformer_shouldThrowApiCallAttemptTimeoutException",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime500_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#allAttemtsNotFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncAwsJsonRetryTest#retryPolicyNone_shouldNotRetry",
      "AsyncAwsJsonRetryTest#shouldRetryOnRetryableAwsErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOnAwsThrottlingErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOn500",
      "AsyncResponseThreadingTest#completionWithNioThreadWorksCorrectly",
      "EndpointOverrideTest#getObjectAsync_shouldNotThrowNPE",
      "XmlMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "AsyncResponseTransformerTest#jsonClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "AsyncResponseTransformerTest#xmlClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "QueryMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "QueryMetadataTest#asyncResponse_shouldContainResponseMetadata",
      "ChecksumResetsOnRetryTest#asyncPutObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#asyncGetObject_resetsChecksumOnRetry",
      "AsyncFaultTest#subscriberCancel_correctExceptionThrown",
      "SdkHttpResponseTest#asyncStreamingMethodShouldContainSdkHttpDate",
      "SdkHttpResponseTest#asyncNonStreamingShouldContainsSdkHttpData",
      "ClockSkewAdjustmentTest#clockSkewDoesNotAdjustOnNonClockSkewErrors",
      "ClockSkewAdjustmentTest#clockSkewAdjustsOnClockSkewErrors",
      "ClockSkewAdjustmentTest#clientClockSkewAdjustsWithoutRetries",
      "CustomResponseMetadataTest#asyncStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#asyncNonStreaming_shouldContainResponseMetadata",
      "AsyncApiCallTimeoutTest#increaseTimeoutInRequestOverrideConfig_shouldTakePrecedence",
      "AsyncApiCallTimeoutTest#streamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retrySucceeded_FinishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retryWouldSucceed_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowBeforeRequestRequestHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowAfterErrorRequestHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#slowApiAttempt_ThrowsApiCallAttemptTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowResponseHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowErrorResponseHandler_ThrowsApiCallTimeoutException",
      "PaginatorInUserAgentTest#asyncPaginator_shouldHavePaginatorUserAgent"
    ]
  },
  "io.netty:netty-buffer": {
    "servicecomb-java-chassis": [
      "TestMicroserviceManager#getOrCreateMicroserviceVersionRule",
      "TestMicroserviceManager#onMicroserviceNotExistEvent_normal",
      "TestMicroserviceManager#onMicroserviceNotExistEvent_otherApp",
      "TestMicroserviceManager#testCreateRuleServiceNotExists",
      "TestMicroserviceVersionRuleLatest#update_v1",
      "TestMicroserviceVersionRuleLatest#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleLatest#update_all_then_empty",
      "TestMicroserviceVersionRuleLatest#update_v1_then_v2",
      "TestMicroserviceVersionRuleLatest#update_all_then_v3",
      "TestMicroserviceVersionRuleLatest#update_empty",
      "TestMicroserviceVersionRuleLatest#update_all",
      "TestMicroserviceVersionRuleLatest#getVersionRule",
      "TestMicroserviceVersionRuleLatest#update_v1_then_all",
      "TestPropertiesLoader#testMicroservicePropertiesLoader",
      "TestPropertiesLoader#testCanNotAssignExtendedClass",
      "TestPropertiesLoader#testInvalidExtendedClass",
      "TestPropertiesLoader#testInstancePropertiesLoader",
      "TestPropertiesLoader#testEmptyExtendedClass",
      "TestPropertiesLoader#testExtendedClassCompatible",
      "TestRestClientInvocation#handleResponse",
      "TestAbstractTransportDiscoveryFilter#createDiscoveryTree_ignoreInvalid",
      "TestAppManager#getOrCreateMicroserviceVersionRule",
      "TestAppManager#getOrCreateMicroserviceVersions",
      "TestAppManager#getStaticMicroserviceVersionFactory",
      "TestConfigurePropertyUtils#testGetPropertiesWithPrefix",
      "TestVertxMetersInitializer#init",
      "TestServiceRegistryClientImpl#syncHandler_failed",
      "TestServiceRegistryClientImpl#testRegisterSchemaErrorResponse",
      "TestServiceRegistryClientImpl#findServiceInstances_microserviceNotExist",
      "TestServiceRegistryClientImpl#testPrivateMethodCreateHttpClientOptions",
      "TestAbstractServiceRegistry#initAppManagerSpecialMicroserviceVersionFactoryFailed",
      "TestAbstractServiceRegistry#initAppManagerSpecialMicroserviceVersionFactoryNormal",
      "TestAbstractServiceRegistry#registryMicroserviceMapping",
      "TestAbstractServiceRegistry#registryMicroserviceMappingByEndpoints",
      "TestAbstractServiceRegistry#initAppManagerDefault",
      "TestDiscoveryTree#sort",
      "TestMicroserviceVersionRuleStartFrom#update_v1",
      "TestMicroserviceVersionRuleStartFrom#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleStartFrom#update_all_then_empty",
      "TestMicroserviceVersionRuleStartFrom#update_v1_then_v2",
      "TestMicroserviceVersionRuleStartFrom#update_all_then_v3",
      "TestMicroserviceVersionRuleStartFrom#update_empty",
      "TestMicroserviceVersionRuleStartFrom#update_all",
      "TestMicroserviceVersionRuleStartFrom#getVersionRule",
      "TestMicroserviceVersionRuleStartFrom#update_v1_then_all",
      "TestHighwayCodec#testEncodeResponse",
      "TestHighwayCodec#testEncodeRequest",
      "TestHighwayCodec#testReadRequestHeader",
      "TestHighwayCodec#testDecodeResponse",
      "TestAbstractRegisterTask#testHeartbeatFailed",
      "TestMicroserviceWatchTask#testWatchInstanceChanged",
      "TestInstanceCacheChecker#check_findInstances_serviceNotExist",
      "TestInstanceCacheChecker#check_appManager_empty",
      "TestInstanceCacheChecker#check_findInstances_revisionNotMatch",
      "TestInstanceCacheChecker#check_findInstances_cacheNotMatch",
      "TestInstanceCacheChecker#check_findInstances_failed",
      "TestInstanceCacheChecker#check_StaticMicroservice",
      "TestInstanceCacheChecker#check_microserviceManager_empty",
      "TestMicroserviceInstanceRegisterTask#registerIpSuccess",
      "TestMicroserviceInstanceRegisterTask#registerHostSuccess",
      "TestMicroserviceInstanceRegisterTask#registerIpFailed",
      "TestDefaultHttpClientFilter#extractResult_decodeError",
      "TestDefaultHttpClientFilter#testAfterReceiveResponseNullProduceProcessor",
      "TestDefaultHttpClientFilter#extractResult_decodeError200",
      "TestHighwayServerInvoke#test",
      "TestHighwayServerInvoke#testFlowControlQps",
      "TestServiceCenterTask#testLifeCycleException",
      "TestServiceCenterTask#testLifeCycleSuccess",
      "TestWebsocketClientPool#createHttpClientOptions_notHttp2",
      "TestWebsocketClientPool#createHttpClientOptions_http2",
      "TestHighwayServerConnection#testRequestError",
      "TestHighwayServerConnection#testRequestNormal",
      "TestHighwayServerConnection#testSetParameterNormal",
      "TestHighwayServerConnection#testInvalidMsgType",
      "TestHighwayServerConnection#testSetParameterError",
      "TestHighwayServerConnection#testReqeustHeaderError",
      "TestMicroserviceVersionRuleRange#update_v1",
      "TestMicroserviceVersionRuleRange#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleRange#update_all_then_empty",
      "TestMicroserviceVersionRuleRange#update_v1_then_v2",
      "TestMicroserviceVersionRuleRange#update_all_then_v3",
      "TestMicroserviceVersionRuleRange#update_empty",
      "TestMicroserviceVersionRuleRange#update_all",
      "TestMicroserviceVersionRuleRange#getVersionRule",
      "TestMicroserviceVersionRuleRange#update_v1_then_all",
      "TestMicroserviceRegisterTask#testLocalSchemaAndServiceCenterSchemaDiff",
      "TestMicroserviceRegisterTask#testAlreadyRegisteredSchemaIdSetMatch",
      "TestMicroserviceRegisterTask#testAlreadyRegisteredGetSchemaIdSetFailed",
      "TestMicroserviceRegisterTask#testFirstRegisterForProd",
      "TestMicroserviceRegisterTask#testReRegisterForProductAndLocalSchemasAreLess",
      "TestMicroserviceRegisterTask#testReRegisterForDevAndLocalSchemasAreLess",
      "TestMicroserviceRegisterTask#testReRegisteredSetForProd",
      "TestMicroserviceRegisterTask#testNewRegisterSuccess",
      "TestMicroserviceRegisterTask#testRegisterSchemaFailed",
      "TestMicroserviceRegisterTask#testAlreadyRegisteredSchemaIdSetNotMatch",
      "TestMicroserviceRegisterTask#testReRegisteredSetForDev",
      "TestMicroserviceRegisterTask#testNewRegisterFailed",
      "TestMicroserviceRegisterTask#testRegisterSchemaSuccess",
      "TestHighwayClient#testCreateLogin",
      "TestRemoteServiceRegistry#onPullMicroserviceVersionsInstancesEvent",
      "TestRemoteServiceRegistry#testLifeCycle",
      "TestMicroserviceVersions#submitPull",
      "TestMicroserviceVersions#onMicroserviceInstanceChangedNameNotMatch",
      "TestMicroserviceVersions#getOrCreateMicroserviceVersionRule",
      "TestMicroserviceVersions#submitPullProtection",
      "TestMicroserviceVersions#pullInstances_notExists",
      "TestMicroserviceVersions#onMicroserviceInstanceChangedAppNotMatch",
      "TestMicroserviceVersions#setInstancesMatch",
      "TestMicroserviceVersions#safeSetInstances",
      "TestMicroserviceVersions#construct",
      "TestMicroserviceVersions#testIsEventAccept",
      "TestMicroserviceVersions#onMicroserviceInstanceChangedMatch",
      "TestMicroserviceVersions#createAndInitMicroserviceVersionRule",
      "TestMicroserviceVersions#pullInstancesCancel",
      "TestMicroserviceVersions#pullInstancesNull",
      "TestMicroserviceInstanceHeartbeatTask#testHeartbeatNotRegistered",
      "TestMicroserviceInstanceHeartbeatTask#testHeartbeatDisconnect",
      "TestInstanceCacheCheckTask#autoTask_normal",
      "TestInstanceCacheCheckTask#manualTask",
      "TestInstanceCacheCheckTask#autoTask_invalidIntervalZero",
      "TestInstanceCacheCheckTask#autoTask_clearOldTask",
      "TestInstanceCacheCheckTask#autoTask_invalidIntervalLessThanZero",
      "TestMicroserviceVersionRuleFixed#update_v1",
      "TestMicroserviceVersionRuleFixed#update_v1_then_v2_then_v1",
      "TestMicroserviceVersionRuleFixed#update_all_then_empty",
      "TestMicroserviceVersionRuleFixed#update_v1_then_v2",
      "TestMicroserviceVersionRuleFixed#update_all_then_v3",
      "TestMicroserviceVersionRuleFixed#update_empty",
      "TestMicroserviceVersionRuleFixed#update_all",
      "TestMicroserviceVersionRuleFixed#getVersionRule",
      "TestMicroserviceVersionRuleFixed#update_v1_then_all",
      "TestLocalServiceRegistry#testLifeCycle",
      "TestLocalServiceRegistry#registerMicroservice",
      "TestLocalServiceRegistry#testUpdateProperties",
      "TestLocalServiceRegistry#testSchema",
      "TestServiceRegistryFactory#testGetRemoteRegistryClient"
    ],
    "aws-sdk-java-v2": [
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsInvalid_ThrowException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_ExtraData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsValid",
      "MultipartUploadTest#asyncCreateMultipartUpload_shouldHaveUploadsQueryParam",
      "ExecutionInterceptorTest#async_interceptorException_failureInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingInput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingOutput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_serviceException_failureInterceptorMethodsCalled",
      "AsyncTimeoutTest#attemptsTimeout_shouldThrowApiCallAttemptTimeoutException",
      "AsyncTimeoutTest#attemptFinishWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_slowTransformer_shouldThrowApiCallAttemptTimeoutException",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime500_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#allAttemtsNotFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncAwsJsonRetryTest#retryPolicyNone_shouldNotRetry",
      "AsyncAwsJsonRetryTest#shouldRetryOnRetryableAwsErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOnAwsThrottlingErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOn500",
      "AsyncResponseThreadingTest#completionWithNioThreadWorksCorrectly",
      "EndpointOverrideTest#getObjectAsync_shouldNotThrowNPE",
      "XmlMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "AsyncResponseTransformerTest#jsonClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "AsyncResponseTransformerTest#xmlClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "QueryMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "QueryMetadataTest#asyncResponse_shouldContainResponseMetadata",
      "ChecksumResetsOnRetryTest#asyncPutObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#asyncGetObject_resetsChecksumOnRetry",
      "AsyncFaultTest#subscriberCancel_correctExceptionThrown",
      "SdkHttpResponseTest#asyncStreamingMethodShouldContainSdkHttpDate",
      "SdkHttpResponseTest#asyncNonStreamingShouldContainsSdkHttpData",
      "ClockSkewAdjustmentTest#clockSkewDoesNotAdjustOnNonClockSkewErrors",
      "ClockSkewAdjustmentTest#clockSkewAdjustsOnClockSkewErrors",
      "ClockSkewAdjustmentTest#clientClockSkewAdjustsWithoutRetries",
      "CustomResponseMetadataTest#asyncStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#asyncNonStreaming_shouldContainResponseMetadata",
      "AsyncApiCallTimeoutTest#increaseTimeoutInRequestOverrideConfig_shouldTakePrecedence",
      "AsyncApiCallTimeoutTest#streamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retrySucceeded_FinishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retryWouldSucceed_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowResponseHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowErrorResponseHandler_ThrowsApiCallTimeoutException",
      "PaginatorInUserAgentTest#asyncPaginator_shouldHavePaginatorUserAgent"
    ]
  },
  "io.dropwizard:dropwizard-core": {
    "BitHub": [
      "GithubControllerTest#testInvalidAuthUser",
      "GithubControllerTest#testInvalidAuthPassword",
      "GithubControllerTest#testOptOutCommit",
      "GithubControllerTest#testValidMultipleCommitsMultipleAuthors",
      "GithubControllerTest#testNoOptInCommit",
      "GithubControllerTest#testInvalidOrigin",
      "GithubControllerTest#testMissingAuth",
      "GithubControllerTest#testNonMaster",
      "GithubControllerTest#testOptInCommit",
      "GithubControllerTest#testValidCommit",
      "GithubControllerTest#testInvalidRepository"
    ],
    "map-matching": [
      "MapMatchingResourceTest#testGPX",
      "MapMatchingResourceTest#testGPX10",
      "MapMatchingResourceTest#testEmptyGPX",
      "MapMatchingResource2Test#testGPX"
    ]
  },
  "org.apache.maven:maven-plugin-api": {
    "pitest": [
      "PitMojoTest#testThrowsMojoFailureExceptionWhenCoverageBelowThreshold",
      "PitMojoTest#testEmptyFeatureIsIgnored",
      "PitMojoTest#testEmptyExcludedMethodIsIgnored",
      "PitMojoTest#testEmptyExcludedRunnerIsIgnored",
      "PitMojoTest#testEmptyExcludedGroupIsIgnored",
      "PitMojoTest#testAllowsSurvivingMutantsThresholdToBeZero",
      "PitMojoTest#testEmptyJvmArgIsIgnored",
      "PitMojoTest#testEmptyExcludedClassIsIgnored",
      "PitMojoTest#testDoesNotAnalyseProjectsWithSkipFlagSet",
      "PitMojoTest#testEmptyOutputFormatIsIgnored",
      "PitMojoTest#testEmptyExcludedTestClassIsIgnored",
      "PitMojoTest#testRunsAMutationReportWhenMutationCoverageGoalTrigered",
      "PitMojoTest#testConfigureEnvironmentVariable",
      "PitMojoTest#testEmptyAdditionalClasspathElementIsIgnored",
      "PitMojoTest#testEmptyMutatorIsIgnored",
      "PitMojoTest#testDoesNotThrowsMojoFailureExceptionWhenMutationScoreOnThreshold",
      "PitMojoTest#testEmptyTargetTestIsIgnored",
      "PitMojoTest#testThrowsMojoFailureExceptionWhenMutationScoreBelowThreshold",
      "PitMojoTest#testEmptyClasspathDependencyExcludeIsIgnored",
      "PitMojoTest#testDoesNotAnalysePomProjects",
      "PitMojoTest#testEmptyIncludedGroupIsIgnored",
      "PitMojoTest#testEmptyIncludedTestMethodIsIgnored",
      "PitMojoTest#testThrowsMojoFailureExceptionWhenSurvivingMutantsAboveThreshold",
      "PitMojoTest#testDoesNotThrowMojoFailureExceptionWhenCoverageOnThreshold",
      "PitMojoTest#testEmptyTargetClassIsIgnored",
      "PitMojoTest#testDoesNotThrowsMojoFailureExceptionWhenSurvivingMutantsOnThreshold",
      "PitMojoTest#testEmptyAvoidCallsToValueIsIgnored",
      "MojoToReportOptionsConverterTest#testParsesCustomProperties",
      "MojoToReportOptionsConverterTest#testUsesSourceDirectoriesFromProject",
      "MojoToReportOptionsConverterTest#testParsesDetectInlineCodeFlag",
      "MojoToReportOptionsConverterTest#testParsesSurefireConfigWhenFlagSet",
      "MojoToReportOptionsConverterTest#testParsesMutationUnitSize",
      "MojoToReportOptionsConverterTest#testParsesTimeOutConstant",
      "MojoToReportOptionsConverterTest#testParsesHistoryInputFile",
      "MojoToReportOptionsConverterTest#testParsesExcludedClasspathElements",
      "MojoToReportOptionsConverterTest#testParsesListOfJVMArgs",
      "MojoToReportOptionsConverterTest#testObeysFailWhenNoMutationsFlagWhenPackagingTypeIsNotPOM",
      "MojoToReportOptionsConverterTest#testParsesMaxDependencyDistance",
      "MojoToReportOptionsConverterTest#testParsesHistoryOutputFile",
      "MojoToReportOptionsConverterTest#testParsesListOfExcludedTestClassGlobs",
      "MojoToReportOptionsConverterTest#testParsesTestGroupsToInclude",
      "MojoToReportOptionsConverterTest#testParsesTimeStampedReports",
      "MojoToReportOptionsConverterTest#testCreatesPredicateFromListOfTargetClassGlobs",
      "MojoToReportOptionsConverterTest#testParsesTestPlugin",
      "MojoToReportOptionsConverterTest#testParsesFullMutationMatrix",
      "MojoToReportOptionsConverterTest#testParsesTestMethodsToInclude",
      "MojoToReportOptionsConverterTest#testParsesTimeOutFactor",
      "MojoToReportOptionsConverterTest#testParsesListOfTargetTestClassGlobs",
      "MojoToReportOptionsConverterTest#testParsesLineCoverageExportFlagWhenNotSet",
      "MojoToReportOptionsConverterTest#testParsesLineCoverageExportFlagWhenSet",
      "MojoToReportOptionsConverterTest#testIgnoreSurefireConfigWhenFlagNotSet",
      "MojoToReportOptionsConverterTest#testParsesTestGroupsToExclude",
      "MojoToReportOptionsConverterTest#testParsesVerboseFlag",
      "MojoToReportOptionsConverterTest#testParsesListOfMutationOperators",
      "MojoToReportOptionsConverterTest#testObeysSkipFailingTestsFlagWhenPackagingTypeIsNotPOM",
      "MojoToReportOptionsConverterTest#testParsesCommaListOfExcludedMethods",
      "MojoToReportOptionsConverterTest#testParsesNumberOfThreads",
      "MojoToReportOptionsConverterTest#testParsesExcludedRunners",
      "MojoToReportOptionsConverterTest#testParsesUseClasspathJar",
      "MojoToReportOptionsConverterTest#testDefaultsToHtmlReportWhenNoOutputFormatsSpecified",
      "MojoToReportOptionsConverterTest#testParsesListOfFeatures",
      "MojoToReportOptionsConverterTest#testParsesJavaExecutable",
      "MojoToReportOptionsConverterTest#testParsesListOfOutputFormatsWhenSupplied",
      "MojoToReportOptionsConverterTest#testDefaultsLoggingPackagesToDefaultsDefinedByDefaultMutationConfigFactory",
      "MojoToReportOptionsConverterTest#testParsesEngineWhenSet",
      "MojoToReportOptionsConverterTest#testParsesLocalHistoryFlag",
      "MojoToReportOptionsConverterTest#testParsesListOfClassesToAvoidCallTo",
      "MojoToReportOptionsConverterTest#testDefaultsJavaExecutableToNull",
      "MojoToReportOptionsConverterTest#testDefaultsMutationUnitSizeToCorrectValue",
      "MojoToReportOptionsConverterTest#testParsesListOfExcludedClassGlobsAndApplyTheseToTargets",
      "MojoToReportOptionsConverterTest#testMaintainsOrderOfClassPath",
      "MojoToReportOptionsConverterTest#testDoesNotUseClasspathJarByDefault",
      "MojoToReportOptionsConverterTest#testsParsesReportDir",
      "ScmMojoTest#testThrowsAnExceptionWhenNoScmConfigured",
      "ScmMojoTest#testLastCommitIsMutationTested",
      "ScmMojoTest#testUsesCorrectConnectionWhenDeveloperConnectionSet",
      "ScmMojoTest#testClassesAddedToScmAreMutationTested",
      "ScmMojoTest#testUnknownAndDeletedClassesAreNotMutationTested",
      "ScmMojoTest#testDoesNotAnalysePomProjects",
      "ScmMojoTest#testCanOverrideInspectedStatus",
      "ScmMojoTest#testModifiedClassesAreMutationTested",
      "ScmMojoTest#testUsesCorrectConnectionWhenNonDeveloperConnectionSet"
    ],
    "maven-plugins": [
      "ClientCredentialsTest#noServerUsernameAndPassword",
      "ClientCredentialsTest#noPassword",
      "ClientCredentialsTest#noConfigurationWithSettings",
      "ClientCredentialsTest#validOAuth2Token",
      "ClientCredentialsTest#validOAuth2TokenWithUsername",
      "ClientCredentialsTest#validServerUsernameAndPassword",
      "ClientCredentialsTest#missingServerNoMatching",
      "ClientCredentialsTest#validUserNameAndPassword",
      "ClientCredentialsTest#missingServerEmptyServers",
      "ClientCredentialsTest#noConfiguration",
      "ClientCredentialsTest#noUserName",
      "ClientCredentialsTest#missingServerNoSettings",
      "ClientCredentialsTest#missingServerNullServers",
      "ClientCredentialsTest#validServerToken"
    ]
  },
  "javax.servlet:javax.servlet-api": {
    "spring-hateoas": [
      "RenderHypermediaForDefaultAcceptHeadersTest#browserBasedDefaultAcceptHeadersShouldProduceHalJson",
      "RenderHypermediaForDefaultAcceptHeadersTest#curlBasedDefaultAcceptHeadersShouldProduceHalJson",
      "CollectionJsonWebMvcIntegrationTest#createNewEmployee",
      "CollectionJsonWebMvcIntegrationTest#singleEmployee",
      "CollectionJsonWebMvcIntegrationTest#collectionOfEmployees",
      "MultiMediaTypeWebMvcIntegrationTest#singleEmployeeCollectionJson",
      "MultiMediaTypeWebMvcIntegrationTest#collectionOfEmployeesHalForms",
      "MultiMediaTypeWebMvcIntegrationTest#singleEmployeeHalForms",
      "MultiMediaTypeWebMvcIntegrationTest#collectionOfEmployeesUber",
      "MultiMediaTypeWebMvcIntegrationTest#createNewEmployeeUber",
      "MultiMediaTypeWebMvcIntegrationTest#createNewEmployeeCollectionJson",
      "MultiMediaTypeWebMvcIntegrationTest#collectionOfEmployeesCollectionJson",
      "MultiMediaTypeWebMvcIntegrationTest#createNewEmployeeHalForms",
      "MultiMediaTypeWebMvcIntegrationTest#singleEmployeeUber",
      "CustomHypermediaWebMvcTest#getUsingCustomMediaType",
      "UberWebMvcIntegrationTest#createNewEmployee",
      "UberWebMvcIntegrationTest#singleEmployee",
      "UberWebMvcIntegrationTest#collectionOfEmployees",
      "HalFormsWebMvcIntegrationTest#createNewEmployee",
      "HalFormsWebMvcIntegrationTest#usesRegisteredHalConfiguration",
      "HalFormsWebMvcIntegrationTest#usesRegisteredHalFormsConfiguration",
      "HalFormsWebMvcIntegrationTest#singleEmployee",
      "HalFormsWebMvcIntegrationTest#collectionOfEmployees",
      "RepresentationModelProcessorIntegrationTest#wildcardProcessorShouldNotWork",
      "RepresentationModelProcessorIntegrationTest#collectionModelProcessorShouldWork",
      "RepresentationModelProcessorIntegrationTest#entityModelProcessorShouldWork",
      "EnableHypermediaSupportIntegrationTest#registersHalHttpMessageConvertersForRestTemplate",
      "EnableHypermediaSupportIntegrationTest#configuresDefaultObjectMapperForCollectionJsonToIgnoreUnknownProperties",
      "EnableHypermediaSupportIntegrationTest#defaultsEncodingOfMessageSourceToUtf8",
      "EnableHypermediaSupportIntegrationTest#bootstrapsCollectionJsonConfigurationForSubclass",
      "EnableHypermediaSupportIntegrationTest#configuresDefaultObjectMapperForHalFormsToIgnoreUnknownProperties",
      "EnableHypermediaSupportIntegrationTest#uberSetupIsAppliedToAllTransitiveComponentsInRequestMappingHandlerAdapter",
      "EnableHypermediaSupportIntegrationTest#registersHalLinkDiscoverers",
      "EnableHypermediaSupportIntegrationTest#bootstrapUberConfiguration",
      "EnableHypermediaSupportIntegrationTest#registersHalFormsHttpMessageConvertersForRestTemplate",
      "EnableHypermediaSupportIntegrationTest#halSetupIsAppliedToAllTransitiveComponentsInRequestMappingHandlerAdapter",
      "EnableHypermediaSupportIntegrationTest#halFormsSetupIsAppliedToAllTransitiveComponentsInRequestMappingHandlerAdapter",
      "EnableHypermediaSupportIntegrationTest#bootstrapsHalConfigurationForSubclass",
      "EnableHypermediaSupportIntegrationTest#bootstrapHalFormsConfiguration",
      "EnableHypermediaSupportIntegrationTest#configuresDefaultObjectMapperForUberToIgnoreUnknownProperties",
      "EnableHypermediaSupportIntegrationTest#collectionJsonSetupIsAppliedToAllTransitiveComponentsInRequestMappingHandlerAdapter",
      "EnableHypermediaSupportIntegrationTest#registersCollectionJsonHttpMessageConvertersForRestTemplate",
      "EnableHypermediaSupportIntegrationTest#registersHalFormsLinkDiscoverers",
      "EnableHypermediaSupportIntegrationTest#registersUberHttpMessageConvertersForRestTemplate",
      "EnableHypermediaSupportIntegrationTest#bootstrapJsonCollectionConfiguration",
      "EnableHypermediaSupportIntegrationTest#verifyDefaultHalConfigurationRendersSingleItemAsSingleItem",
      "EnableHypermediaSupportIntegrationTest#bootstrapsUberConfigurationForSubclass",
      "EnableHypermediaSupportIntegrationTest#bootstrapHalConfiguration",
      "EnableHypermediaSupportIntegrationTest#registersCollectionJsonLinkDiscoverers",
      "EnableHypermediaSupportIntegrationTest#bootstrapsHalFormsConfigurationForSubclass",
      "EnableHypermediaSupportIntegrationTest#configuresDefaultObjectMapperForHalToIgnoreUnknownProperties",
      "EnableHypermediaSupportIntegrationTest#verifyRenderSingleLinkAsArrayViaOverridingBean",
      "EnableHypermediaSupportIntegrationTest#registersUberLinkDiscoverers",
      "AlpsWebMvcIntegrationTest#profileEndpointReturnsAlps",
      "HypermediaWebMvcConfigurerTest#registeringHalAndCollectionJsonShouldAllowCreatingViaHalAndCollectionJson",
      "HypermediaWebMvcConfigurerTest#registeringHalShouldServeHal",
      "HypermediaWebMvcConfigurerTest#registeringHalAndHalFormsShouldAllowCreatingViaHalAndHalForms",
      "HypermediaWebMvcConfigurerTest#callingForUnregisteredMediaTypeShouldFallBackToDefaultHandler",
      "HypermediaWebMvcConfigurerTest#registeringAllHypermediaTypesShouldServerThemAll",
      "HypermediaWebMvcConfigurerTest#registeringHalFormsShouldServeHalForms",
      "HypermediaWebMvcConfigurerTest#registeringHalAndCollectionJsonShouldServerHalAndCollectionJson",
      "HypermediaWebMvcConfigurerTest#registeringHalAndHalFormsShouldServerHalAndHalForms",
      "HypermediaWebMvcConfigurerTest#registeringAllHypermediaTypesShouldAllowCreatingThroughAllFormats",
      "HypermediaWebMvcConfigurerTest#registeringUberShouldServerUber",
      "HypermediaWebMvcConfigurerTest#registeringCollectionJsonShouldServerCollectionJson"
    ],
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval"
    ]
  },
  "org.ow2.asm:asm-util": {
    "ea-async": [
      "TransformerTest#simpleAsyncMethod",
      "TransformerTest#withTwoFutures",
      "AConstNullTest#nullInTheStack",
      "AConstNullTest#nullInTheStack2",
      "NullThenBasicValueTest#nullThenBasicValueTest"
    ],
    "artemis-odb": [
      "EntitySystemOptimizerTest#validate_optimized_iterating_system_test",
      "EntitySystemOptimizerTest#validate_optimized_system_test",
      "ComponentTypeWeaverTest#pooled_weaver_test",
      "ComponentTypeWeaverTest#pooled_forced_weaving_test",
      "SystemOptimizerTest#validate_optimized_system_test"
    ]
  },
  "org.ow2.asm:asm-tree": {
    "ea-async": [
      "ConstructorReplacementTest#withMultipleInterleavedCopies",
      "ConstructorReplacementTest#withInterleavedCopies",
      "ConstructorReplacementTest#regularConstructorCall",
      "BasicTest#testBlockingWithStackAndLocal",
      "BasicTest#testDataFlow",
      "BasicTest#testBlockingAndException",
      "BasicTest#testBlocking",
      "TransformerTest#simpleAsyncMethod",
      "TransformerTest#withTwoFutures",
      "TransformerTest#withLocals",
      "AnalyserTest#uninitializedInTheStackCheckOrder",
      "AnalyserTest#branchAnalysisWithFrames",
      "AnalyserTest#exceptionTest",
      "AnalyserTest#uninitializedInTheStack",
      "AnalyserTest#uninitializedInTheLocals",
      "ErrorReportingTest#testErrorReporting",
      "TransformerMainTest#transformer",
      "InitRemovalTest#testAwaitInitRemoval",
      "TransformerMainErrorTest#transformerError"
    ],
    "artemis-odb": [
      "EntitySystemOptimizerTest#validate_optimized_iterating_system_test",
      "EntitySystemOptimizerTest#validate_optimized_system_test",
      "ComponentTypeWeaverTest#pooled_weaver_test",
      "ComponentTypeWeaverTest#pooled_forced_weaving_test",
      "SystemOptimizerTest#validate_optimized_system_test"
    ]
  },
  "org.springframework:spring-tx": {
    "citrus": [
      "PropertyPlaceholderTests#defaultValue"
    ],
    "ddd-leaven-v2": [
      "OrderingTest#shouldPurchaseProducts",
      "OrderingTest#canNotPurchaseIfOfferChanged"
    ]
  },
  "javax.mail:mail": {
    "citrus": [
      "PropertyPlaceholderTests#defaultValue"
    ],
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta"
    ]
  },
  "de.javakaffee:kryo-serializers": {
    "memcached-session-manager": [
      "TestSuite"
    ],
    "CorfuDB": [
      "StreamViewTest#canReadWriteFromStreamWithoutBackpointers",
      "StreamViewTest#streamWillHoleFill"
    ]
  },
  "com.google.protobuf:protobuf-java": {
    "phoenix": [
      "PhoenixRuntimeTest#testGetTenantIdExpression",
      "PhoenixRuntimeTest#testGetPkColsEncodeDecode",
      "QueryCompilerTest#testLocalIndexPruningInUinon",
      "QueryCompilerTest#testSkipScanLocalIndexPruning",
      "QueryCompilerTest#testIndexOnViewWithChildView",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery2",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery3",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery4",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery5",
      "QueryCompilerTest#testOnDupKeyWithGlobalIndex",
      "QueryCompilerTest#testLocalIndexPruningInSortMergeJoin",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery",
      "QueryCompilerTest#testSingleColLocalIndexPruning",
      "QueryCompilerTest#testNoLocalIndexPruning",
      "QueryCompilerTest#testRVCLocalIndexPruning",
      "QueryCompilerTest#testQueryPlanSourceRefsInSortMergeJoin",
      "QueryCompilerTest#testMultiColLocalIndexPruning",
      "QueryCompilerTest#testLocalIndexCreationWithDefaultFamilyOption",
      "QueryCompilerTest#testFuncIndexUsage",
      "QueryCompilerTest#testMinMaxRangeLocalIndexPruning",
      "QueryCompilerTest#testGroupByDescColumnBug3451",
      "QueryCompilerTest#testRVCLocalIndexPruning2",
      "QueryCompilerTest#testQueryPlanSourceRefsInUnion",
      "QueryCompilerTest#testQueryPlanSourceRefsInHashJoin",
      "IndexedKeyValueTest#testIndexedKeyValuePopulatesKVFields",
      "IndexMaintainerTest#tesIndexedExpressionSerialization",
      "IndexMaintainerTest#tesIndexWithDescBoolean",
      "IndexMaintainerTest#testVarFixedndex",
      "IndexMaintainerTest#testCompositeRowKeyVarFixedDescIndex",
      "IndexMaintainerTest#testCompositeRowKeyBytesIndex",
      "IndexMaintainerTest#tesIndexWithAscFalseBoolean",
      "IndexMaintainerTest#tesIndexWithAscNullBoolean",
      "IndexMaintainerTest#tesIndexWithBigInt",
      "IndexMaintainerTest#testCompositeDescRowKeyVarAscIndex",
      "IndexMaintainerTest#testMultiKeyValueCoveredIndex",
      "IndexMaintainerTest#testCompositeDescRowKeyVarDescIndex",
      "IndexMaintainerTest#testCompositeRowKeyTimeIndex",
      "IndexMaintainerTest#testMultiKeyValueIndex",
      "IndexMaintainerTest#testCompositeRowKeyVarFixedAtEndIndex",
      "IndexMaintainerTest#tesIndexWithDescFalseBoolean",
      "IndexMaintainerTest#testCompositeDescRowKeyVarFixedDescSaltedIndexSaltedTable",
      "IndexMaintainerTest#testCompositeDescRowKeyVarFixedDescSaltedIndex",
      "IndexMaintainerTest#testMultiKeyValueCoveredSaltedIndex",
      "IndexMaintainerTest#testSingleKeyValueDescIndex",
      "IndexMaintainerTest#testSingleKeyValueIndex",
      "IndexMaintainerTest#testCompositeDescRowKeyVarFixedDescIndex",
      "IndexMaintainerTest#testCompositeRowKeyVarFixedIndex",
      "IndexMaintainerTest#testRowKeyVarOnlyIndex",
      "IndexMaintainerTest#tesIndexWithAscBoolean",
      "QueryOptimizerTest#testQueryOptimizerShouldSelectThePlanWithMoreNumberOfPKColumns",
      "QueryOptimizerTest#testAssertQueryAgainstTenantSpecificViewGoesThroughIndex",
      "QueryOptimizerTest#testChooseIndexEvenWithSelectionStar",
      "QueryOptimizerTest#testDataTableOverIndexHint",
      "QueryOptimizerTest#testChooseIndexFromCaseSensitiveHint2",
      "QueryOptimizerTest#testChooseTableFromOrderByAsc",
      "QueryOptimizerTest#testChooseTableOverIndex",
      "QueryOptimizerTest#testDistinctPrefixOnIntIndex",
      "QueryOptimizerTest#testCharArrayLength",
      "QueryOptimizerTest#testDistinctPrefixOnVarcharIndex",
      "QueryOptimizerTest#testChooseIndexFromOrderBy",
      "QueryOptimizerTest#testIndexHintParsing",
      "QueryOptimizerTest#testChooseIndexFromOrderByAsc",
      "QueryOptimizerTest#testChooseIndexWithLongestRowKey",
      "QueryOptimizerTest#testChooseIndexFromCaseSensitiveHint",
      "QueryOptimizerTest#testViewUsedWithQueryMoreSalted",
      "QueryOptimizerTest#testRVCUsingPkColsReturnedByPlanShouldUseIndex",
      "QueryOptimizerTest#testAssertQueryAgainstTenantSpecificViewDoesNotGoThroughIndex",
      "QueryOptimizerTest#testChoosePointLookupOverOrderByDesc",
      "QueryOptimizerTest#testChooseIndexFromOrderByDesc",
      "QueryOptimizerTest#testRVCAllColsForTableWithSecondaryIndexBasic",
      "QueryOptimizerTest#testChooseIndexFromDoubleQuotedHint",
      "QueryOptimizerTest#testIgnoreIndexesBasedOnHint",
      "QueryOptimizerTest#testChooseTableForSelectionStar",
      "QueryOptimizerTest#testChooseSmallerTable",
      "QueryOptimizerTest#testChooseIndexOverTable",
      "QueryOptimizerTest#testChoosePointLookupOverOrderByRemoval",
      "QueryOptimizerTest#testChooseTableForDynCols",
      "QueryOptimizerTest#testRVCForTableWithSecondaryIndexBasic",
      "QueryOptimizerTest#testDelete",
      "QueryOptimizerTest#testChooseIndexFromHint",
      "QueryOptimizerTest#testViewUsedWithQueryMoreUnsalted",
      "QueryOptimizerTest#testAssertQueryPlanDetails3",
      "QueryOptimizerTest#testAssertQueryPlanDetails4",
      "QueryOptimizerTest#testAssertQueryPlanDetails7",
      "QueryOptimizerTest#testAssertQueryPlanDetails8",
      "QueryOptimizerTest#testChooseTableForSelection",
      "QueryOptimizerTest#testTableUsedWithQueryMore",
      "PostIndexDDLCompilerTest#testHintInSubquery",
      "PostIndexDDLCompilerTest#testCompile",
      "NonTxIndexBuilderTest#testManyVersions",
      "NonTxIndexBuilderTest#testGetMutableIndexUpdate",
      "NonTxIndexBuilderTest#testRebuildMultipleVersionRow",
      "TenantSpecificViewIndexCompileTest#testOrderByOptimizedOut",
      "TenantSpecificViewIndexCompileTest#testViewConstantsOptimizedOutOnReadOnlyView",
      "TenantSpecificViewIndexCompileTest#testViewConstantsOptimizedOut",
      "ReadWriteKeyValuesWithCodecTest#testWithoutCompression",
      "ReadWriteKeyValuesWithCodecTest#testWithCompression",
      "PhoenixRuntimeTest#testGetTenantIdExpression",
      "PhoenixRuntimeTest#testGetPkColsEncodeDecode",
      "QueryCompilerTest#testLocalIndexPruningInUinon",
      "QueryCompilerTest#testSkipScanLocalIndexPruning",
      "QueryCompilerTest#testIndexOnViewWithChildView",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery2",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery3",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery4",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery5",
      "QueryCompilerTest#testOnDupKeyWithGlobalIndex",
      "QueryCompilerTest#testLocalIndexPruningInSortMergeJoin",
      "QueryCompilerTest#testQueryPlanSourceRefsInSubquery",
      "QueryCompilerTest#testSingleColLocalIndexPruning",
      "QueryCompilerTest#testNoLocalIndexPruning",
      "QueryCompilerTest#testRVCLocalIndexPruning",
      "QueryCompilerTest#testQueryPlanSourceRefsInSortMergeJoin",
      "QueryCompilerTest#testMultiColLocalIndexPruning",
      "QueryCompilerTest#testLocalIndexCreationWithDefaultFamilyOption",
      "QueryCompilerTest#testFuncIndexUsage",
      "QueryCompilerTest#testMinMaxRangeLocalIndexPruning",
      "QueryCompilerTest#testGroupByDescColumnBug3451",
      "QueryCompilerTest#testRVCLocalIndexPruning2",
      "QueryCompilerTest#testQueryPlanSourceRefsInUnion",
      "QueryCompilerTest#testQueryPlanSourceRefsInHashJoin",
      "IndexedKeyValueTest#testIndexedKeyValuePopulatesKVFields",
      "IndexMaintainerTest#tesIndexedExpressionSerialization",
      "IndexMaintainerTest#tesIndexWithDescBoolean",
      "IndexMaintainerTest#testVarFixedndex",
      "IndexMaintainerTest#testCompositeRowKeyVarFixedDescIndex",
      "IndexMaintainerTest#testCompositeRowKeyBytesIndex",
      "IndexMaintainerTest#tesIndexWithAscFalseBoolean",
      "IndexMaintainerTest#tesIndexWithAscNullBoolean",
      "IndexMaintainerTest#tesIndexWithBigInt",
      "IndexMaintainerTest#testCompositeDescRowKeyVarAscIndex",
      "IndexMaintainerTest#testMultiKeyValueCoveredIndex",
      "IndexMaintainerTest#testCompositeDescRowKeyVarDescIndex",
      "IndexMaintainerTest#testCompositeRowKeyTimeIndex",
      "IndexMaintainerTest#testMultiKeyValueIndex",
      "IndexMaintainerTest#testCompositeRowKeyVarFixedAtEndIndex",
      "IndexMaintainerTest#tesIndexWithDescFalseBoolean",
      "IndexMaintainerTest#testCompositeDescRowKeyVarFixedDescSaltedIndexSaltedTable",
      "IndexMaintainerTest#testCompositeDescRowKeyVarFixedDescSaltedIndex",
      "IndexMaintainerTest#testMultiKeyValueCoveredSaltedIndex",
      "IndexMaintainerTest#testSingleKeyValueDescIndex",
      "IndexMaintainerTest#testSingleKeyValueIndex",
      "IndexMaintainerTest#testCompositeDescRowKeyVarFixedDescIndex",
      "IndexMaintainerTest#testCompositeRowKeyVarFixedIndex",
      "IndexMaintainerTest#testRowKeyVarOnlyIndex",
      "IndexMaintainerTest#tesIndexWithAscBoolean",
      "QueryOptimizerTest#testQueryOptimizerShouldSelectThePlanWithMoreNumberOfPKColumns",
      "QueryOptimizerTest#testAssertQueryAgainstTenantSpecificViewGoesThroughIndex",
      "QueryOptimizerTest#testChooseIndexEvenWithSelectionStar",
      "QueryOptimizerTest#testDataTableOverIndexHint",
      "QueryOptimizerTest#testChooseIndexFromCaseSensitiveHint2",
      "QueryOptimizerTest#testChooseTableFromOrderByAsc",
      "QueryOptimizerTest#testChooseTableOverIndex",
      "QueryOptimizerTest#testDistinctPrefixOnIntIndex",
      "QueryOptimizerTest#testCharArrayLength",
      "QueryOptimizerTest#testDistinctPrefixOnVarcharIndex",
      "QueryOptimizerTest#testChooseIndexFromOrderBy",
      "QueryOptimizerTest#testIndexHintParsing",
      "QueryOptimizerTest#testChooseIndexFromOrderByAsc",
      "QueryOptimizerTest#testChooseIndexWithLongestRowKey",
      "QueryOptimizerTest#testChooseIndexFromCaseSensitiveHint",
      "QueryOptimizerTest#testViewUsedWithQueryMoreSalted",
      "QueryOptimizerTest#testRVCUsingPkColsReturnedByPlanShouldUseIndex",
      "QueryOptimizerTest#testAssertQueryAgainstTenantSpecificViewDoesNotGoThroughIndex",
      "QueryOptimizerTest#testChoosePointLookupOverOrderByDesc",
      "QueryOptimizerTest#testChooseIndexFromOrderByDesc",
      "QueryOptimizerTest#testRVCAllColsForTableWithSecondaryIndexBasic",
      "QueryOptimizerTest#testChooseIndexFromDoubleQuotedHint",
      "QueryOptimizerTest#testIgnoreIndexesBasedOnHint",
      "QueryOptimizerTest#testChooseTableForSelectionStar",
      "QueryOptimizerTest#testChooseSmallerTable",
      "QueryOptimizerTest#testChooseIndexOverTable",
      "QueryOptimizerTest#testChoosePointLookupOverOrderByRemoval",
      "QueryOptimizerTest#testChooseTableForDynCols",
      "QueryOptimizerTest#testRVCForTableWithSecondaryIndexBasic",
      "QueryOptimizerTest#testDelete",
      "QueryOptimizerTest#testChooseIndexFromHint",
      "QueryOptimizerTest#testViewUsedWithQueryMoreUnsalted",
      "QueryOptimizerTest#testAssertQueryPlanDetails3",
      "QueryOptimizerTest#testAssertQueryPlanDetails4",
      "QueryOptimizerTest#testAssertQueryPlanDetails7",
      "QueryOptimizerTest#testAssertQueryPlanDetails8",
      "QueryOptimizerTest#testChooseTableForSelection",
      "QueryOptimizerTest#testTableUsedWithQueryMore",
      "PostIndexDDLCompilerTest#testHintInSubquery",
      "PostIndexDDLCompilerTest#testCompile",
      "NonTxIndexBuilderTest#testManyVersions",
      "NonTxIndexBuilderTest#testGetMutableIndexUpdate",
      "NonTxIndexBuilderTest#testRebuildMultipleVersionRow",
      "TenantSpecificViewIndexCompileTest#testOrderByOptimizedOut",
      "TenantSpecificViewIndexCompileTest#testViewConstantsOptimizedOutOnReadOnlyView",
      "TenantSpecificViewIndexCompileTest#testViewConstantsOptimizedOut",
      "ReadWriteKeyValuesWithCodecTest#testWithoutCompression",
      "ReadWriteKeyValuesWithCodecTest#testWithCompression"
    ],
    "jprotobuf": [
      "RequrieRepeatedTypeTest#testDecodeListFields2",
      "RequrieRepeatedTypeTest#testEncodeListFields2",
      "RequrieRepeatedTypeTest#testDecodeListFields3",
      "RequrieRepeatedTypeTest#testEncodeListFields3",
      "RequrieRepeatedTypeTest#testDecodeListFields",
      "RequrieRepeatedTypeTest#testEncodeListFields",
      "RequrieRepeatedNumberType2Test#testEncodeDecode",
      "AllTypesTest#testRequiredMutliTypeEncode2",
      "RequrieRepeatedNumberType3Test#testEncodeDecode",
      "StringSetTest#testStringSetPOJO",
      "StringSetTest#testStringSetPOJO2",
      "TestInnerRef#testInnerRefClass",
      "ProtobufIDLProxyTest#testInnerIncludingServiceIDLGenerateSource2",
      "ProtobufIDLProxyTest#testMultiDecode",
      "ProtobufIDLProxyTest#testInnerIncludingServiceIDLGenerateSource",
      "RequrieRepeatedNumberTypeTest#testEncodeDecode",
      "DescritporTest#testPOJODescriptorWorksWell",
      "DescritporTest#testGetDescriptor",
      "IDLProxyObjectTest#testComplexPOJO",
      "RequrieRepeatedDojoClassWithLargeIndexTest#testListStringWithLargeIndex",
      "RequrieRepeatedDojoClassWithLargeIndexTest#testListStringWithLargeIndex2",
      "ProtobufIDLProxyPressureTest#testPressureWithCached",
      "ProtobufIDLProxyPressureTest#testPressureWithoutCached",
      "ComplextIncludeTest#testEncodeDecode",
      "ComplextListIncludeTest#testEncodeDecode",
      "ComplextListIncludeTest#testEmptyListCase"
    ]
  },
  "com.google.appengine:appengine-api-1.0-sdk": {
    "objectify": [
      "TestSuite#testEmbeddedMap",
      "TestSuite#tearDownGAE",
      "TestSuite#setUpExtra"
    ],
    "togglz": [
      "DatastoreStateRepositoryTest#customKindName",
      "DatastoreStateRepositoryTest#shouldNotAddNewEntityGroupToCurrentCrossGroupTransaction",
      "DatastoreStateRepositoryTest#shouldNotStartNewTransaction",
      "DatastoreStateRepositoryTest#shouldWorkInsideRunningTransaction",
      "DatastoreStateRepositoryTest#testShouldSaveStateWithoutStrategyOrParameters",
      "DatastoreStateRepositoryTest#testShouldSaveStateStrategyAndParameters",
      "DatastoreStateRepositoryTest#shouldReturnNullWhenStateDoesntExist",
      "DatastoreStateRepositoryTest#testShouldReadStateWithoutStrategyAndParameters",
      "DatastoreStateRepositoryTest#testShouldReadStateWithStrategyAndParameters",
      "DatastoreStateRepositoryTest#testShouldUpdateExistingDatabaseEntry",
      "MemcacheStateRepositoryTest#testCachingOfReadOperationsWithTimeToLife",
      "MemcacheStateRepositoryTest#testStateModifyExpiresCache",
      "MemcacheStateRepositoryTest#testCacheExpiryBecauseOfTimeToLife",
      "MemcacheStateRepositoryTest#testNullCaching",
      "FixedNamespaceStateRepositoryTest#shouldAcceptEmptyNamespace",
      "FixedNamespaceStateRepositoryTest#shouldNotAcceptNullNamespace",
      "FixedNamespaceStateRepositoryTest#shouldNotAcceptNullDecorated",
      "FixedNamespaceStateRepositoryTest#getFeatureStateShouldRunWithinGivenNamespace",
      "FixedNamespaceStateRepositoryTest#getFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
      "FixedNamespaceStateRepositoryTest#setFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
      "FixedNamespaceStateRepositoryTest#setFeatureStateShouldRunWithinGivenNamespace",
      "FixedNamespaceStateRepositoryTest#shouldFallbackToOriginalNamespace"
    ]
  },
  "com.google.appengine:appengine-api-stubs": {
    "objectify": [
      "TestSuite#queryByKindWithFilterWorks",
      "TestSuite#queryByKindWorks",
      "TestSuite#simpleQueryWorks",
      "TestSuite#testChunking",
      "TestSuite#filterWithLowLevelFilterObject",
      "TestSuite#testCount",
      "TestSuite#testEmptySingleResult",
      "TestSuite#testFiltering",
      "TestSuite#testFilteringByAncestor",
      "TestSuite#testFilteringByEntityField",
      "TestSuite#testFilteringByKeyField",
      "TestSuite#testFilteringByNull",
      "TestSuite#testIN",
      "TestSuite#testINfilteringWithKeyField",
      "TestSuite#testINfilteringWithKeySpecial",
      "TestSuite#testKeyReverseSorting",
      "TestSuite#testKeySorting",
      "TestSuite#testKeysOnly",
      "TestSuite#testLimit",
      "TestSuite#testNormalReverseSorting",
      "TestSuite#testNormalSorting",
      "TestSuite#deferredSaveWithinOnSaveMethodSaves",
      "TestSuite#testTargetsExist",
      "TestSuite#mandatoryTransactionsWorkingForDelete",
      "TestSuite#mandatoryTransactionsWorkingForSave",
      "TestSuite#simpleOrder",
      "TestSuite#testCursorAtEveryStep",
      "TestSuite#testCursorAtEveryStepWithChunk",
      "TestSuite#testCursorAtEveryStepWithLimit",
      "TestSuite#testLimitAndCursorUsingIterator",
      "TestSuite#hybridOff",
      "TestSuite#hybridOn",
      "TestSuite#hybridQueryWithSortAndIN",
      "TestSuite#hybridQueryWithSortAndNOT",
      "TestSuite#properLoadBehaviorInTransactions",
      "TestSuite#distinctWorks",
      "TestSuite#projectBooleanPrimitiveFields",
      "TestSuite#projectionDoesNotContaminateSession",
      "TestSuite#projectionOfNumbersWorks",
      "TestSuite#simpleProjectionWorks",
      "TestSuite#testRawCaching",
      "TestSuite#testRawTransactionalCaching",
      "TestSuite#refsFilterAsKeys",
      "TestSuite#testBadlyNamedUserFiltering",
      "TestSuite#testDateFiltering",
      "TestSuite#testFromThruDateFiltering",
      "TestSuite#testUserFiltering",
      "TestSuite#testUnindexed",
      "TestSuite#testUnindexedPolymorphic",
      "TestSuite#testChunkIterator",
      "TestSuite#testEmbeddedGraph",
      "TestSuite#testEmbeddedIndexedPojo",
      "TestSuite#queryForStringInList",
      "TestSuite#executeMethodWorks",
      "TestSuite#executeWithRequiresNewCreatesNewTransaction",
      "TestSuite#listenerIsOnlyCalledOnceIfTransactionRetries",
      "TestSuite#listenerIsOnlyCalledOnceIfTransactionRetriesFromOrganicConcurrencyFailure",
      "TestSuite#testAsyncDelete",
      "TestSuite#testConcurrencyFailure",
      "TestSuite#testInAndOutOfTransaction",
      "TestSuite#testListenerNotCalledWithOrganicConcurrencyFailure",
      "TestSuite#testSimpleTransaction",
      "TestSuite#testTransactWork",
      "TestSuite#testTransactionRollback",
      "TestSuite#testTransactionless",
      "TestSuite#transactionListeners",
      "TestSuite#transactionalObjectifyInheritsCacheSetting",
      "TestSuite#testQuery",
      "TestSuite#testManyToOne",
      "TestSuite#queryingOnCollectionWorks",
      "TestSuite#queryingOnIndexedPropertiesWorks",
      "TestSuite#testSimpleParentChild",
      "TestSuite#batchSaveDoesNotCrossContaminateIndexes",
      "TestSuite#indexFormatIsCorrect",
      "TestSuite#testDefaultIndexedChildFromUnindexedPojo",
      "TestSuite#testDefaultIndexedGrandChildFromUnindexedPojo",
      "TestSuite#testDefaultIndexedPojo",
      "TestSuite#testDerivedAndIndexed",
      "TestSuite#testDerivedAndUnindexed",
      "TestSuite#testIndexedPojo",
      "TestSuite#testUnindexedPojo",
      "TestSuite#deferredSaveAndDeleteProcessedAtEndOfTransaction",
      "TestSuite#queryListCanBeSerialized",
      "TestSuite#deleteAllWorks",
      "TestSuite#deleteWorks",
      "TestSuite#reloadingOutsideOfATransaction",
      "TestSuite#reloadingOutsideOfATransaction2",
      "TestSuite#upgradingOutsideOfATransaction",
      "TestSuite#testFilterByEnum",
      "TestSuite#testUnindexedOnOtherField",
      "TestSuite#testUnindexedWhenFalse",
      "TestSuite#testEmptyCollection",
      "TestSuite#testNullCollection",
      "TestSuite#cursorReverses",
      "TestSuite#testCursorEnd",
      "TestSuite#testCursorEndLowLevelBehavior",
      "TestSuite#testCursorOneFetchToEnd",
      "TestSuite#testFilterOnProperty",
      "TestSuite#testQueryAll",
      "TestSuite#testQueryCat",
      "TestSuite#testQueryMammal",
      "TestSuite#testQueryWithUnindexedPoly"
    ],
    "togglz": [
      "DatastoreStateRepositoryTest#shouldNotAddNewEntityGroupToCurrentCrossGroupTransaction",
      "DatastoreStateRepositoryTest#shouldNotStartNewTransaction",
      "DatastoreStateRepositoryTest#shouldWorkInsideRunningTransaction",
      "DatastoreStateRepositoryTest#testShouldSaveStateWithoutStrategyOrParameters",
      "DatastoreStateRepositoryTest#testShouldSaveStateStrategyAndParameters",
      "DatastoreStateRepositoryTest#shouldReturnNullWhenStateDoesntExist",
      "DatastoreStateRepositoryTest#testShouldReadStateWithoutStrategyAndParameters",
      "DatastoreStateRepositoryTest#testShouldReadStateWithStrategyAndParameters",
      "DatastoreStateRepositoryTest#testShouldUpdateExistingDatabaseEntry"
    ]
  },
  "com.github.fakemongo:fongo": {
    "ff4j": [
      "FeatureStoreMongoCollectionCore1Test#testDeteleFeatureDoesnotExist",
      "FeatureStoreMongoCollectionCore1Test#testEnableEmpty",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroup",
      "FeatureStoreMongoCollectionCore1Test#testStoreHasBeenInitialized",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupFeatureEmpty",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleEmptyFeature",
      "FeatureStoreMongoCollectionCore1Test#testDonotUpdateNullFeature",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFeatureMoreAutorisation",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleToFeatureFeatureDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateRemoveFlippingStrategy",
      "FeatureStoreMongoCollectionCore1Test#testReadGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testUpdateRemoveProperty",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditFlippingStrategy",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleNullRole",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleNullFeature",
      "FeatureStoreMongoCollectionCore1Test#testClear",
      "FeatureStoreMongoCollectionCore1Test#testUpdateAddProperty",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupFeatureNull",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupFeatureEmpty",
      "FeatureStoreMongoCollectionCore1Test#testUpdateNull",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFlipMoreAutorisationNotExist",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleToFeatureRoleDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testExistGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testEnableFeatureDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testReadAllFeatures",
      "FeatureStoreMongoCollectionCore1Test#testExistNull",
      "FeatureStoreMongoCollectionCore1Test#testDisableFeature",
      "FeatureStoreMongoCollectionCore1Test#testExistEmpty",
      "FeatureStoreMongoCollectionCore1Test#testExistGroup",
      "FeatureStoreMongoCollectionCore1Test#testReadEmpty",
      "FeatureStoreMongoCollectionCore1Test#testReadGroup",
      "FeatureStoreMongoCollectionCore1Test#testDonotDeleteEmpty",
      "FeatureStoreMongoCollectionCore1Test#testFeatureDoesNotExit",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleNullFeature",
      "FeatureStoreMongoCollectionCore1Test#testReadNull",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroup",
      "FeatureStoreMongoCollectionCore1Test#testDisableEmpty",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroup",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testReadGroupDoesnotExist",
      "FeatureStoreMongoCollectionCore1Test#testAddFeature",
      "FeatureStoreMongoCollectionCore1Test#testUpdateAddFlippingStrategy",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testGrantRoleEmptyRole",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroupDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testDeleteRoleFeatureDoesNotExit",
      "FeatureStoreMongoCollectionCore1Test#testDeleteRoleToFeature",
      "FeatureStoreMongoCollectionCore1Test#testCreateNull",
      "FeatureStoreMongoCollectionCore1Test#testEnableGroupDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testDonotDeleteNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveLastFeatureOfGroupDeleteGroup",
      "FeatureStoreMongoCollectionCore1Test#testDisableNull",
      "FeatureStoreMongoCollectionCore1Test#testDeleteFeature",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditPropertyValue",
      "FeatureStoreMongoCollectionCore1Test#testReadGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testDeleteNull",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupEmpty",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupFeatureDoeNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditPropertyAddFixedValues",
      "FeatureStoreMongoCollectionCore1Test#testDisableFeatureDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testReadNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFeatureCoreData",
      "FeatureStoreMongoCollectionCore1Test#testEnableNull",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupFeatureNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroupIfNotInGroup",
      "FeatureStoreMongoCollectionCore1Test#testReadAllGroup",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleNullRole",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroupDoesNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateEditPropertyRemoveFixedValues",
      "FeatureStoreMongoCollectionCore1Test#testReadFullFeature",
      "FeatureStoreMongoCollectionCore1Test#testAddToGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroupFeatureDoeNotExist",
      "FeatureStoreMongoCollectionCore1Test#testUpdateFlipLessAutorisation",
      "FeatureStoreMongoCollectionCore1Test#testRemoveToGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveFromGroup",
      "FeatureStoreMongoCollectionCore1Test#testAddFeatureAlreadyExis",
      "FeatureStoreMongoCollectionCore1Test#testEnableFeature",
      "FeatureStoreMongoCollectionCore1Test#testExistGroupNull",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleEmptyRole",
      "FeatureStoreMongoCollectionCore1Test#testRemoveRoleEmptyFeature",
      "FeatureStoreMongoCollectionCore1Test#testDisableGroupEmpty",
      "PropertyStoreMongoCollectionCore1Test#testInit",
      "PropertyStoreMongoCollectionCore1Test#updateKOdoesnotExist",
      "PropertyStoreMongoCollectionCore1Test#addPropertyOKLogLevel",
      "PropertyStoreMongoCollectionCore1Test#deleteKOempty",
      "PropertyStoreMongoCollectionCore1Test#updateKOnull",
      "PropertyStoreMongoCollectionCore1Test#deleteKOdoesnotexist",
      "PropertyStoreMongoCollectionCore1Test#existKOEmpty",
      "PropertyStoreMongoCollectionCore1Test#deleteKOnull",
      "PropertyStoreMongoCollectionCore1Test#readOK",
      "PropertyStoreMongoCollectionCore1Test#updateKOInvalidValue",
      "PropertyStoreMongoCollectionCore1Test#updateKOPropertyNotFound",
      "PropertyStoreMongoCollectionCore1Test#readKOnull",
      "PropertyStoreMongoCollectionCore1Test#updateOKProperties",
      "PropertyStoreMongoCollectionCore1Test#clear",
      "PropertyStoreMongoCollectionCore1Test#addPropertyKONull",
      "PropertyStoreMongoCollectionCore1Test#existfalse",
      "PropertyStoreMongoCollectionCore1Test#readAllProperties",
      "PropertyStoreMongoCollectionCore1Test#addPropertyOKDate",
      "PropertyStoreMongoCollectionCore1Test#deleteOK",
      "PropertyStoreMongoCollectionCore1Test#listPropertyNames",
      "PropertyStoreMongoCollectionCore1Test#existKONull",
      "PropertyStoreMongoCollectionCore1Test#updateKONullBis",
      "PropertyStoreMongoCollectionCore1Test#readOKFixed",
      "PropertyStoreMongoCollectionCore1Test#updateOK",
      "PropertyStoreMongoCollectionCore1Test#updateKOempty",
      "PropertyStoreMongoCollectionCore1Test#addPropertyKOAlreadyExist",
      "PropertyStoreMongoCollectionCore1Test#existfilled",
      "PropertyStoreMongoCollectionCore1Test#readKOnotExist",
      "PropertyStoreMongoCollectionCore1Test#addPropertyOKsimple",
      "PropertyStoreMongoCollectionCore1Test#valueFixed",
      "PropertyStoreMongoCollectionCore1Test#readKOempty"
    ],
    "togglz": [
      "MongoStateRepositoryTest#testInsertAndUpdate"
    ]
  },
  "com.yammer.metrics:metrics-core": {
    "uReplicator": [
      "TestSourceKafkaClusterValidationManager",
      "TestAutoTopicWhitelistingManager",
      "TestKafkaBrokerTopicObserver",
      "ControllerStarterTest",
      "TestValidationManager"
    ],
    "Argus": [
      "AbstractSchemaServiceTest#testPutNothingCached",
      "AbstractSchemaServiceTest#testPutEverythingCached",
      "AbstractSchemaServiceTest#testNumHoursUntilNextFlushBloomFilter",
      "AbstractSchemaServiceTest#testPutPartialCached",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndInertiaOne",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForMoreThanOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStampsReturnNull",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_Scenario1",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTime",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndZeroInertia",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeriesMultipleTriggers",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ClearNotification",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_OnCooldown",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_AlertWithMultipleMetricsNotificationSentForEach",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWehnNoDatapoints",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps2",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps3",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps4",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps5",
      "SystemConfiguratorTest#testLifecycle",
      "WardenServiceTest#testAssertSubsystemUsePermitted_AdminUser",
      "WardenServiceTest#testServiceIsSingleton",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
      "WardenServiceTest#testEnableWarden",
      "WardenServiceTest#testSuspendAdminUser",
      "WardenServiceTest#testAssertSubsystemUsePermitted_ExpiredSuspension",
      "WardenServiceTest#testSuspendUser",
      "WardenServiceTest#testDisableWarden",
      "WardenServiceTest#testModifyPolicyCounterEnablesAlert",
      "WardenServiceTest#testSubSystemSuspensionLevels",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NoSuspension",
      "WardenServiceTest#testUpdatePolicyCounterEnablesAlert",
      "WardenServiceTest#testWardenDashboard",
      "WardenServiceTest#testWardenAlertUsesUpdatedPolicyLimitForUser",
      "NamespaceServiceTest#testUserIsPermitted",
      "NamespaceServiceTest#testCreateNamespace",
      "NamespaceServiceTest#testFindNamespaceByPrimaryKey",
      "NamespaceServiceTest#testAdditionalUserIsPermitted",
      "NamespaceServiceTest#testNamespaceUnique",
      "NamespaceServiceTest#testAddAdditionalUsersToNamespace",
      "GlobalInterlockServiceTest#testObtainReleaseLock",
      "GlobalInterlockServiceTest#testObtainOnExpiredScheduleLock",
      "GlobalInterlockServiceTest#testLockExclusivity",
      "GlobalInterlockServiceTest#testObtainRefreshLock",
      "GlobalInterlockServiceTest#testReleaseNonexistentScheduleLock",
      "AlertServiceTest#testFindSharedAlertsByOwner",
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#testUpdateNotification",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#testAlertDelete",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testfindAlertsByOwner",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindAlertByNameAndOwner",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#findAlertsModifiedAfterDate",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testAlertDeleteCreateAnotherAlertWithSameName",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testFindAlertsByOwnerPaged",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser",
      "AlertServiceTest#testCountSharedAlertsMetaPaged",
      "AlertServiceTest#testFindPrivateAlertsPagedForNonPrivilegedUser",
      "AlertServiceTest#testAlertsCountContext",
      "AlertServiceTest#testCountAlertsByOwner",
      "AlertServiceTest#testfindAlertsByOwnerMeta",
      "AlertServiceTest#testDeletedTriggersInNotifications",
      "AlertServiceTest#testAlertEnqueue",
      "DashboardServiceTest#testFindSharedDashboardsByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsByOwner",
      "DashboardServiceTest#testFindDashboardsMetaByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwner",
      "DashboardServiceTest#testFindDashboardsMeta",
      "DashboardServiceTest#testDashboard_FindShareDelete",
      "DashboardServiceTest#testFindDashboardsByOwnerMeta",
      "DashboardServiceTest#testFindSharedDashboardsMetaByVersion",
      "DashboardServiceTest#testFindDashboardsByOwnerMetaAndByVersion",
      "DashboardServiceTest#testDashboardCrud",
      "DashboardServiceTest#testDashboard_FindShareDeleteByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMeta",
      "ManagementServiceTest#testPrivilegeGrant",
      "AuditServiceTest#testUpdateAudit",
      "AuditServiceTest#testFindAll",
      "AuditServiceTest#testCreateAudit",
      "AuditServiceTest#testFindByMessage",
      "AuditServiceTest#testFindByJPAEntity",
      "AuditServiceTest#testFindByHostName",
      "OAuthServiceTest#testAcceptOauthModifiedParams",
      "OAuthServiceTest#testAcceptOauth",
      "OAuthServiceTest#testCreateAuthorizationCode",
      "OAuthServiceTest#testAcceptOauthInvalidParams",
      "SchedulingServiceTest#testAlertSchedulingWithGlobalInterlock",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinMaxDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithTag",
      "MetricFederationTest#testEndPointFederationForkJoinMinDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsampler",
      "MetricFederationTest#testTimeFederationFork",
      "MonitorServiceTest#testAlertsCreatedOnStartMonitoring",
      "MonitorServiceTest#testConcurrentUpdates",
      "MonitorServiceTest#test_getCounterFromMetricName",
      "MonitorServiceTest#testServiceIsSingleton",
      "MonitorServiceTest#testEnableDisableMonitoring",
      "MonitorServiceTest#test_MonitoringDashboardNotNull",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithDownsampling",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags",
      "DefaultDiscoveryServiceTest#testWildcardQueriesNoMatch",
      "DefaultDiscoveryServiceTest#testNonWildcardQuery",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchExceedingLimit",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags1",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithinLimit",
      "UserServiceTest#testDefaultUserExistence",
      "UserServiceTest#testAdminUserExistence",
      "UserServiceTest#testUserCrud",
      "UserServiceTest#testUniqueUserCount",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricTagvRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutCreateUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutUpdateUsingScopeAndMetricSchemaIndex",
      "ChartServiceTest#testDeleteChartById",
      "ChartServiceTest#testDeleteChart",
      "ChartServiceTest#testGetChartsForEntity",
      "ChartServiceTest#testCreateChart",
      "ChartServiceTest#testGetChartByPrimaryKey",
      "ChartServiceTest#testGetChartsByOwner",
      "CallbackServiceTest#testCallbackNotifier",
      "MQServiceTest#testServiceIsSingleton",
      "MQServiceTest#testBulkPutAndGetMessages",
      "MQServiceTest#testPutAndBulkGetMessages",
      "MQServiceTest#testPutAndBulkGetMessagesMultiThredaing",
      "AbstractTSDBServiceTest#testCyclingIterator",
      "NotifierTest#testUpdatingTriggerName",
      "NotifierTest#testDBNotifier",
      "NotifierTest#testAbsoluteTimeStampsInExpression",
      "NotifierTest#testTemplateNaming",
      "CachedDiscoveryServiceTest#testWildcardExpansionWithinLimit",
      "CachedDiscoveryServiceTest#testWildcardExpansionExceedingLimit"
    ]
  },
  "org.apache.curator:curator-framework": {
    "dble": [
      "IncrSequenceZKHandlerTest#testCorrectnessAndEfficiency"
    ],
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval"
    ]
  },
  "com.squareup.wire:wire-runtime": {
    "retrofit": [
      "WireConverterFactoryTest#serializeAndDeserialize"
    ]
  },
  "com.squareup.moshi:moshi": {
    "retrofit": [
      "MoshiConverterFactoryTest#failOnUnknown"
    ]
  },
  "com.ctrip.framework.apollo:apollo-client": {
    "apollo": [
      "ApolloMockServerSpringIntegrationTest#testPropertyInject",
      "ApolloMockServerSpringIntegrationTest#shouldNotifyOnInterestedPatterns",
      "ApolloMockServerSpringIntegrationTest#testListenerTriggeredByAdd",
      "ApolloMockServerSpringIntegrationTest#testListenerTriggeredByDel",
      "ApolloMockServerSpringIntegrationTest#shouldNotNotifyOnUninterestedPatterns"
    ]
  },
  "com.github.tschuchortdev:kotlin-compile-testing": {
    "moshi": [
      "JsonClassCodegenProcessorTest#privateProperties",
      "JsonClassCodegenProcessorTest#privateConstructor",
      "JsonClassCodegenProcessorTest#requiredTransientConstructorParameterFails",
      "JsonClassCodegenProcessorTest#objectDeclarationsNotSupported",
      "JsonClassCodegenProcessorTest#nonPropertyConstructorParameter",
      "JsonClassCodegenProcessorTest#enumClassesNotSupported",
      "JsonClassCodegenProcessorTest#nonRuntimeQualifier",
      "JsonClassCodegenProcessorTest#interfacesNotSupported",
      "JsonClassCodegenProcessorTest#extendJavaType",
      "JsonClassCodegenProcessorTest#badGeneratedAnnotation",
      "JsonClassCodegenProcessorTest#nonFieldApplicableQualifier",
      "JsonClassCodegenProcessorTest#objectExpressionsNotSupported",
      "JsonClassCodegenProcessorTest#multipleErrors",
      "JsonClassCodegenProcessorTest#abstractClassesNotSupported",
      "JsonClassCodegenProcessorTest#privateConstructorParameter",
      "JsonClassCodegenProcessorTest#extendPlatformType",
      "JsonClassCodegenProcessorTest#interfacesDoNotErrorWhenGeneratorNotSet",
      "JsonClassCodegenProcessorTest#sealedClassesNotSupported",
      "JsonClassCodegenProcessorTest#innerClassesNotSupported"
    ]
  },
  "com.google.testing.compile:compile-testing": {
    "error-prone": [
      "AssertThrowsMultipleStatementsTest#ignoreInThrowingRunnables",
      "UnusedTest#variableKeepingSideEffects",
      "UnusedTest#fixPrivateMethod_varArgs",
      "UnusedTest#fixPrivateMethod_usagesToo",
      "UnusedTest#variableRemovingSideEffects",
      "UnusedTest#unusedEnhancedForLoop",
      "UnusedTest#refactoring",
      "UnusedTest#fixPrivateMethod_parameterLocations",
      "ParameterCommentTest#noParams",
      "ClassNewInstanceTest#negativeThrows",
      "ClassNewInstanceTest#catchAndThrows",
      "ClassNewInstanceTest#throwsIndividual",
      "ClassNewInstanceTest#positiveUnion",
      "ClassNewInstanceTest#freshVar",
      "ClassNewInstanceTest#mixedMulticatch",
      "ClassNewInstanceTest#throwsROE",
      "ClassNewInstanceTest#overlap",
      "ClassNewInstanceTest#additionalCatchClause",
      "ClassNewInstanceTest#throwsException",
      "ClassNewInstanceTest#mergeWhitespace",
      "ClassNewInstanceTest#positiveROE",
      "ClassNewInstanceTest#withFinally",
      "ClassNewInstanceTest#catchesDoesntThrow",
      "ClassNewInstanceTest#differentHandles",
      "ClassNewInstanceTest#positive",
      "ClassNewInstanceTest#negative",
      "ClassNewInstanceTest#inCatchRepeated",
      "ClassNewInstanceTest#inCatch",
      "ClassNewInstanceTest#existingRoeCase",
      "UnnecessaryDefaultInEnumSwitchTest#completes_noUnassignedVars_priorCaseDoesntExit",
      "UnnecessaryDefaultInEnumSwitchTest#defaultAboveCaseUnrecognized",
      "UnnecessaryDefaultInEnumSwitchTest#defaultBreak",
      "UnnecessaryDefaultInEnumSwitchTest#emptyDefaultUnrecognized",
      "UnnecessaryDefaultInEnumSwitchTest#completes_noUnassignedVars_priorCaseDoesntExitUnrecognized",
      "UnnecessaryDefaultInEnumSwitchTest#notExhaustive2",
      "UnnecessaryDefaultInEnumSwitchTest#emptyDefault",
      "UnnecessaryDefaultInEnumSwitchTest#notExhaustive2Unrecognized",
      "UnnecessaryDefaultInEnumSwitchTest#defaultBreakUnrecognized",
      "UnnecessaryDefaultInEnumSwitchTest#completes_noUnassignedVars_priorCaseExits",
      "LockNotBeforeTryTest#refactorUnlockOutsideTry",
      "LockNotBeforeTryTest#refactorIntermediate",
      "LockNotBeforeTryTest#refactorToBefore",
      "WakelockReleasedDangerouslyTest#dangerousWakelockRelease_lambda_refactoring",
      "WakelockReleasedDangerouslyTest#doesNotRemoveIsHeldOnDifferentSymbol",
      "WakelockReleasedDangerouslyTest#dangerousWakelockRelease_refactoring",
      "IntLongMathTest#refactoring",
      "UngroupedOverloadsTest#ungroupedOverloadsRefactoringBelowCutoffLimit",
      "UngroupedOverloadsTest#ungroupedOverloadsRefactoring_fiveMethods",
      "UngroupedOverloadsTest#ungroupedOverloadsRefactoringInterleaved",
      "UngroupedOverloadsTest#ungroupedOverloadsRefactoringComments",
      "UngroupedOverloadsTest#ungroupedOverloadsRefactoringMultiple",
      "UnsafeReflectiveConstructionCastTest#testPositiveCaseWithErasure",
      "UnsafeReflectiveConstructionCastTest#testPositiveCase",
      "EqualsUnsafeCastTest#fixes",
      "EqualsUnsafeCastTest#fixesInlineCheck",
      "PrivateConstructorForUtilityClassTest#subClassesGetLeftAlone",
      "PrivateConstructorForUtilityClassTest#utilityClassesGetAPrivateConstructor_onlyMethods",
      "PrivateConstructorForUtilityClassTest#otherClassesGetLeftAlone_method",
      "PrivateConstructorForUtilityClassTest#privateScopedClassesGetLeftAlone",
      "PrivateConstructorForUtilityClassTest#utilityClassesGetAPrivateConstructor_onlyNestedClasses",
      "PrivateConstructorForUtilityClassTest#otherClassesGetLeftAlone_initializer",
      "PrivateConstructorForUtilityClassTest#emptyClassesGetLeftAlone",
      "PrivateConstructorForUtilityClassTest#utilityClassesGetAPrivateConstructor_onlyStaticInitializer",
      "PrivateConstructorForUtilityClassTest#utilityClassesGetAPrivateConstructor_onlyFields",
      "PrivateConstructorForUtilityClassTest#privateClassesGetLeftAlone",
      "PrivateConstructorForUtilityClassTest#otherClassesGetLeftAlone_interface",
      "PrivateConstructorForUtilityClassTest#otherClassesGetLeftAlone_constructor",
      "PrivateConstructorForUtilityClassTest#otherClassesGetLeftAlone_enum",
      "PrivateConstructorForUtilityClassTest#otherClassesGetLeftAlone_field",
      "PrivateConstructorForUtilityClassTest#utilityClassesWithAConstructorGetLeftAlone",
      "PrivateConstructorForUtilityClassTest#otherClassesGetLeftAlone_innerClass",
      "PrivateConstructorForUtilityClassTest#implementingClassesGetLeftAlone",
      "TestExceptionCheckerTest#positive_markerException",
      "TestExceptionCheckerTest#positive",
      "TestExceptionCheckerTest#negative",
      "TypeNameShadowingTest#refactorMultiple",
      "TypeNameShadowingTest#refactorSingle",
      "TypeNameShadowingTest#fixOnlyWellNamedVariables",
      "InjectOnMemberAndConstructorTest#testPositiveCase",
      "WildcardImportTest#positiveClassSelect",
      "WildcardImportTest#enumTest",
      "WildcardImportTest#dontImportSelfNested",
      "WildcardImportTest#dontImportSelfPrivate",
      "WildcardImportTest#memberImport",
      "WildcardImportTest#chainOffStatic",
      "WildcardImportTest#classLiteral",
      "WildcardImportTest#positive",
      "WildcardImportTest#importSamePackage",
      "WildcardImportTest#doublePrefix",
      "WildcardImportTest#staticMethod",
      "WildcardImportTest#positiveInnerClass",
      "WildcardImportTest#sameUnitWithSpuriousWildImport",
      "WildcardImportTest#dontImportSelf",
      "WildcardImportTest#qualifyMembersFix",
      "WildcardImportTest#dontImportRuntime",
      "WildcardImportTest#nonCanonical",
      "JUnit4SetUpNotRunTest#customBefore_refactoring",
      "TryFailRefactoringTest#emptyCatch",
      "TryFailRefactoringTest#catchBlock",
      "JdkObsoleteTest#stringBufferRefactoringTest",
      "UndefinedEqualsTest#charSequenceFix",
      "AnnotateFormatMethodTest#refactoring",
      "BugCheckerRefactoringTestHelperTest#testReplaceFail",
      "BugCheckerRefactoringTestHelperTest#testReplace",
      "BugCheckerRefactoringTestHelperTest#testNoMatch",
      "CatchFailTest#positive_otherCatch",
      "CatchFailTest#positive_failFail",
      "CatchFailTest#useException",
      "CatchFailTest#testExpected",
      "CatchFailTest#positive_finally",
      "CatchFailTest#positive",
      "CatchFailTest#negative_nonTest",
      "LambdaFunctionalInterfaceTest#testRefactoringTwo",
      "LambdaFunctionalInterfaceTest#testRefactoringGenericToPrimitive",
      "LambdaFunctionalInterfaceTest#testRefactoringPrimitiveToGeneric",
      "LambdaFunctionalInterfaceTest#testRefactoringInteger",
      "DoubleBraceInitializationTest#statement",
      "DoubleBraceInitializationTest#collection",
      "DoubleBraceInitializationTest#positiveNoFix",
      "DoubleBraceInitializationTest#lambda",
      "DoubleBraceInitializationTest#returned",
      "DoubleBraceInitializationTest#map",
      "DoubleBraceInitializationTest#set",
      "DoubleBraceInitializationTest#list",
      "DoubleBraceInitializationTest#nulls",
      "BadInstanceofTest#refactoring",
      "ConstantOverflowTest#longOverflow",
      "ConstantOverflowTest#onlyFixIntegers",
      "QualifierOrScopeOnInjectMethodTest#testPositiveCase_InjectConstructor",
      "OverrideThrowableToStringTest#testFixes",
      "MethodCanBeStaticTest#positiveChain",
      "MethodCanBeStaticTest#positiveCycle",
      "MethodCanBeStaticTest#methodReference",
      "MethodCanBeStaticTest#positiveRecursive",
      "FloatingPointLiteralPrecisionTest#positive",
      "PrivateConstructorForNoninstantiableModuleTest#onlyStaticMethods_withConstructorGetsLeftAlone",
      "PrivateConstructorForNoninstantiableModuleTest#abstractClassWithStaticAndAbstractMethods_withConstructorGetsLeftAlone",
      "PrivateConstructorForNoninstantiableModuleTest#emptyModuleGetsLeftAlone",
      "PrivateConstructorForNoninstantiableModuleTest#onlyAbstractMethods_withConstructorGetsLeftAlone",
      "PrivateConstructorForNoninstantiableModuleTest#onlyAbstractMethods",
      "PrivateConstructorForNoninstantiableModuleTest#onlyStaticMethods",
      "PrivateConstructorForNoninstantiableModuleTest#interfaceModuleGetsLeftAlone",
      "PrivateConstructorForNoninstantiableModuleTest#abstractClassWithStaticAndAbstractMethods",
      "OperatorPrecedenceTest#leftAndParenthesis",
      "OperatorPrecedenceTest#aLotOfParenthesis",
      "OperatorPrecedenceTest#extraParenthesis",
      "OperatorPrecedenceTest#positiveNotSpecialParenthesisCase",
      "OperatorPrecedenceTest#rightAndParenthesis",
      "LogicalAssignmentTest#positive_equalityFix",
      "LogicalAssignmentTest#positive",
      "ReferenceEqualityTest#positive_equalWithOr_objectsEquals",
      "ReferenceEqualityTest#positive_equalWithOr",
      "ImmutableRefactoringTest#positive",
      "ImmutableRefactoringTest#negative",
      "UnnecessaryParenthesesTest#anonymousClass",
      "UnnecessaryParenthesesTest#test",
      "AutoValueFinalMethodsTest#testFinalAdditionToEqHcTs",
      "ProvidesFixCheckerTest#addsArgument",
      "ProvidesFixCheckerTest#replacesExistingInPlace",
      "FloatingPointAssertionWithinEpsilonTest#testFixes",
      "StringSplitterTest#escape",
      "StringSplitterTest#b72088500",
      "StringSplitterTest#immediateArrayAccess",
      "UnusedExceptionTest#anonymousClass",
      "UnusedExceptionTest#refactoring",
      "UnusedExceptionTest#replacementNotVisible",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameInLambdaDefinitionToFieldCase",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameToFieldCaseAndQualifiesNestedClassField",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameToFieldCaseAndQualifiesField",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameInConstructorDefinitionWithMultipleOccurrencesToFieldCase",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameInConstructorDefinitionToFieldCase",
      "InconsistentCapitalizationTest#clash",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameToFieldCaseInAnonymousClassAndQualifiesNestedChildClassField",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameInMethodDefinitionToFieldCase",
      "InconsistentCapitalizationTest#correctsInconsistentVariableNameToFieldCaseAndQualifiesNestedChildClassField",
      "ThrowsUncheckedExceptionTest#deleteRight",
      "ThrowsUncheckedExceptionTest#preserveOrder",
      "ThrowsUncheckedExceptionTest#deleteLeft",
      "TypeParameterShadowingTest#typesWithBounds",
      "TypeParameterShadowingTest#refactorUnderneathStuff",
      "TypeParameterShadowingTest#lambdaParameterDesugaring",
      "TypeParameterShadowingTest#refactorCheckForExisting",
      "TypeParameterShadowingTest#refactorWithNestedTypeParameterDeclaration",
      "TypeParameterShadowingTest#renameRecursiveBound",
      "TypeParameterShadowingTest#refactorMultipleVars",
      "TypeParameterShadowingTest#refactorMethodInnerInner",
      "ExtendingJUnitAssertTest#positiveWithImplements",
      "ExtendingJUnitAssertTest#positive",
      "ExtendingJUnitAssertTest#positiveWithGenerics",
      "TestExceptionRefactoringTest#positive",
      "FieldMissingNullableTest#testSuggestNonJsr305Nullable",
      "FieldMissingNullableTest#testNonAnnotationNullable",
      "MultipleParallelOrSequentialCallsTest#testFixes",
      "StaticQualifiedUsingExpressionTest#expr",
      "StaticQualifiedUsingExpressionTest#clash",
      "StaticQualifiedUsingExpressionTest#superAccess",
      "AssertionFailureIgnoredTest#refactoringStatements",
      "AssertionFailureIgnoredTest#refactoring",
      "ExpectedExceptionRefactoringTest#noThrowingStatements",
      "ExpectedExceptionRefactoringTest#positive",
      "ScopeOnModuleTest#customScope",
      "ScopeOnModuleTest#removeScope",
      "ScopeOnModuleTest#notAScope",
      "ReturnMissingNullableTest#testSuggestNonJsr305Nullable",
      "ReturnMissingNullableTest#testNonAnnotationNullable",
      "ConstantFieldTest#renameUsages",
      "TypeParameterNamingTest#refactoring_single_number",
      "TypeParameterNamingTest#refactoring_trailing",
      "TypeParameterNamingTest#refactoring_newNames",
      "TypeParameterNamingTest#refactoring_TSuffixes",
      "TypeParameterNamingTest#refactoring_single_number_enclosing",
      "TypeParameterNamingTest#refactoring_single_number_many_ok",
      "TypeParameterNamingTest#refactoring_single",
      "TypeParameterNamingTest#refactoring_single_number_within_scope",
      "TypeParameterNamingTest#refactoring_single_number_ok_after",
      "TemplateIntegrationTest#samePackageImports",
      "TemplateIntegrationTest#nestedClass",
      "TemplateIntegrationTest#tryMultiCatch",
      "TemplateIntegrationTest#binary",
      "TemplateIntegrationTest#inferLambdaBodyType",
      "TemplateIntegrationTest#wildcard",
      "TemplateIntegrationTest#oneLineToTwo",
      "TemplateIntegrationTest#topLevel",
      "TemplateIntegrationTest#emitCommentBefore",
      "TemplateIntegrationTest#expressionPlaceholderAllowsIdentity",
      "TemplateIntegrationTest#twoLinesToOne",
      "TemplateIntegrationTest#multipleReferencesToIdentifier",
      "TemplateIntegrationTest#repeated",
      "TemplateIntegrationTest#returnPlaceholder",
      "TemplateIntegrationTest#variableDecl",
      "TemplateIntegrationTest#isInstance",
      "TemplateIntegrationTest#comparisonChain",
      "TemplateIntegrationTest#anonymousClass",
      "TemplateIntegrationTest#ifTemplate",
      "TemplateIntegrationTest#placeholderAllowedVars",
      "TemplateIntegrationTest#importClassDirectly",
      "TemplateIntegrationTest#autoboxing",
      "TemplateIntegrationTest#anyOf",
      "TemplateIntegrationTest#array",
      "TemplateIntegrationTest#literal",
      "TemplateIntegrationTest#explicitTypesPreserved",
      "TemplateIntegrationTest#methodInvocation",
      "TemplateIntegrationTest#parenthesesOptional",
      "TemplateIntegrationTest#inferLambdaType",
      "TemplateIntegrationTest#blockPlaceholder",
      "TemplateIntegrationTest#unnecessaryLambdaParens",
      "TemplateIntegrationTest#precedenceSensitive",
      "TemplateIntegrationTest#mayOptionallyUse",
      "TemplateIntegrationTest#genericPlaceholder",
      "TemplateIntegrationTest#staticField",
      "TemplateIntegrationTest#ifFallthrough",
      "TemplateIntegrationTest#labeledStatements",
      "TemplateIntegrationTest#emitComment",
      "TemplateIntegrationTest#asVarargs",
      "TemplateIntegrationTest#multibound",
      "TemplateIntegrationTest#lambdaImplicitType",
      "TemplateIntegrationTest#implicitTypesInlined",
      "TemplateIntegrationTest#freeIdentWildcardCapture",
      "TemplateIntegrationTest#diamond",
      "TemplateIntegrationTest#tryCatch",
      "TemplateIntegrationTest#expressionPlaceholder",
      "TemplateIntegrationTest#inferredThis",
      "TemplateIntegrationTest#assertions",
      "RemoveUnusedImportsTest#qualifiedJavadoc",
      "RemoveUnusedImportsTest#useInJavadocLink",
      "RemoveUnusedImportsTest#b69984547",
      "RemoveUnusedImportsTest#useInJavadocSeeSelect",
      "RemoveUnusedImportsTest#atSee",
      "RemoveUnusedImportsTest#useInJavadocLinkSelect",
      "RemoveUnusedImportsTest#parameterErasure",
      "RemoveUnusedImportsTest#useInSelect",
      "RemoveUnusedImportsTest#useInJavadocSee",
      "RemoveUnusedImportsTest#useInJavadocParameter",
      "RemoveUnusedImportsTest#b70690930",
      "RemoveUnusedImportsTest#useInJavadocLink_selfReferenceDoesNotBreak",
      "RemoveUnusedImportsTest#basicUsageTest",
      "MathRoundIntLongTest#deleteRoundMethodIntClass",
      "MathRoundIntLongTest#replaceRoundMethodAddParenthesis",
      "MathRoundIntLongTest#removeMathRoundLeaveParenthesisIfUnary",
      "MathRoundIntLongTest#deleteRoundMethodInt",
      "MathRoundIntLongTest#roundingFloatNegative",
      "MathRoundIntLongTest#replaceRoundMethodLong",
      "MathRoundIntLongTest#roundingDoubleNegative",
      "MathRoundIntLongTest#replaceRoundMethodLongClass",
      "ModifiedButNotUsedTest#sideEffectFreeRefactoring",
      "EqualsGetClassTest#fixes_inline",
      "EqualsGetClassTest#fixes_separateNullCheck",
      "EqualsGetClassTest#fixes_extraParens",
      "JUnit4TestNotRunTest#makePrivateFix",
      "JUnit4TestNotRunTest#testFix",
      "JUnit4TestNotRunTest#ignoreFix",
      "JUnit4TestNotRunTest#ignoreFixComesFirstWhenTestNamedDisabled",
      "ExpectedExceptionCheckerTest#noExpectations",
      "ExpectedExceptionCheckerTest#removeExplicitFail",
      "ExpectedExceptionCheckerTest#expect",
      "ExpectedExceptionCheckerTest#noExceptionType",
      "ExpectedExceptionCheckerTest#nonExpressionStatement",
      "ExpectedExceptionCheckerTest#nothingButAsserts",
      "ExpectedExceptionCheckerTest#isA_hasCauseThat",
      "ExpectedExceptionCheckerTest#typedMatcher",
      "ConditionalExpressionNumericPromotionTest#positive",
      "ConditionalExpressionNumericPromotionTest#negative",
      "UnnecessarySetDefaultTest#refactoring",
      "DefaultCharsetTest#guavaWriterImportAppend",
      "DefaultCharsetTest#variableFix",
      "DefaultCharsetTest#variableFixAtADistance",
      "DefaultCharsetTest#scannerDefaultCharset",
      "DefaultCharsetTest#androidReader",
      "DefaultCharsetTest#androidWriter",
      "DefaultCharsetTest#byteStringDefaultCharset",
      "DefaultCharsetTest#printWriter",
      "DefaultCharsetTest#byteString",
      "DefaultCharsetTest#guavaReader",
      "DefaultCharsetTest#guavaWriter",
      "SwitchDefaultTest#refactoring_fallthrough",
      "SwitchDefaultTest#refactoring_case",
      "SwitchDefaultTest#refactoring_group",
      "SwitchDefaultTest#refactoring_groupAndCase",
      "SwitchDefaultTest#refactoring_fallthroughEmpty",
      "UseCorrectAssertInTestsTest#wrongAssertInTestWithoutParentheses",
      "UseCorrectAssertInTestsTest#wrongAssertInTestWithDetailString",
      "UseCorrectAssertInTestsTest#wrongAssertEqualsNullCase",
      "UseCorrectAssertInTestsTest#noAssertInTestsFound",
      "UseCorrectAssertInTestsTest#wrongAssertReferenceSameCaseWithDetailCase",
      "UseCorrectAssertInTestsTest#wrongAssertReferenceWithParensCase",
      "UseCorrectAssertInTestsTest#wrongAssertInTestWithDetailNonStringVariable",
      "UseCorrectAssertInTestsTest#wrongAssertEqualsCase",
      "UseCorrectAssertInTestsTest#correctAssertInTest",
      "UseCorrectAssertInTestsTest#wrongAssertReferenceSameCase",
      "UseCorrectAssertInTestsTest#wrongAssertNotEqualsNullCase",
      "UseCorrectAssertInTestsTest#wrongAssertReferenceNotSameCase",
      "UseCorrectAssertInTestsTest#wrongAssertEqualsNullCaseWithDetail",
      "UseCorrectAssertInTestsTest#wrongAssertInTestWithDetailStringVariable",
      "UseCorrectAssertInTestsTest#wrongAssertInTestWithParentheses",
      "UseCorrectAssertInTestsTest#wrongAssertFalseCase",
      "UseCorrectAssertInTestsTest#assertInNonTestMethod",
      "UseCorrectAssertInTestsTest#wrongAssertEqualsNullCaseLeftSide",
      "DateFormatConstantTest#lowerCamelCaseFix",
      "DateFormatConstantTest#threadLocalFix",
      "StreamResourceLeakTest#fixVariable",
      "StreamResourceLeakTest#fix",
      "RedundantThrowsTest#transitiveSuper",
      "BadImportTest#test_nested_typeUseAnnotation",
      "BadImportTest#positive_static_locallyDefinedMethod",
      "BadImportTest#test_nested_fixes",
      "ObjectsHashCodePrimitiveTest#hashCodeBoolean",
      "ObjectsHashCodePrimitiveTest#hashCodeObjectNegative",
      "ObjectsHashCodePrimitiveTest#hashCodeBoxedPrimitiveNegative",
      "ObjectsHashCodePrimitiveTest#hashCodeFloat",
      "ObjectsHashCodePrimitiveTest#hashCodeShort",
      "ObjectsHashCodePrimitiveTest#hashCodeOtherMethodNegative",
      "ObjectsHashCodePrimitiveTest#hashCodeDouble",
      "ObjectsHashCodePrimitiveTest#hashCodeByte",
      "ObjectsHashCodePrimitiveTest#hashCodeChar",
      "ObjectsHashCodePrimitiveTest#hashCodeLong",
      "ObjectsHashCodePrimitiveTest#hashCodeIntLiteral",
      "ObjectsHashCodePrimitiveTest#hashCodeClassVariable",
      "ObjectsHashCodePrimitiveTest#hashCodeInt",
      "SuggestedFixesTest#deleteExceptionsRemoveFirstCheckerTest",
      "SuggestedFixesTest#qualifyType_nestedNullable",
      "SuggestedFixesTest#qualifyType_alreadyImported",
      "SuggestedFixesTest#qualifyType_nestedType",
      "SuggestedFixesTest#renameVariable_renamesLambdaParameter_notExplicitlyTyped",
      "SuggestedFixesTest#testSuppressWarningsFix",
      "SuggestedFixesTest#compilesWithFixTest",
      "SuggestedFixesTest#renameVariable_renamesLocalVariable_withNestedScope",
      "SuggestedFixesTest#renameVariable_renamesTryWithResourcesParameter",
      "SuggestedFixesTest#qualifyType_someOtherNullableSomeOtherPackage",
      "SuggestedFixesTest#qualifyType_someOtherNullable",
      "SuggestedFixesTest#renameVariable_ignoresMatchingNames_whenNotInScopeOfReplacement",
      "SuggestedFixesTest#prefixAddImport",
      "SuggestedFixesTest#renameVariable_renamesCatchParameter",
      "SuggestedFixesTest#qualifyTypeString_nestedType",
      "SuggestedFixesTest#qualifyType_typeVariable",
      "SuggestedFixesTest#renameVariable_renamesMethodParameter",
      "SuggestedFixesTest#removeAddModifier_rangesCompatible",
      "SuggestedFixesTest#renameVariable_renamesLambdaParameter_explicitlyTyped",
      "SuggestedFixesTest#qualifyTypeString_deeplyNestedType",
      "SuggestedFixesTest#qualifyType_deeplyNestedNullable",
      "SuggestedFixesTest#deleteExceptionsRemoveSecondCheckerTest",
      "SuggestedFixesTest#qualifyType_importType",
      "SuggestedFixesTest#qualifyType_deeplyNestedType",
      "ThreadJoinLoopTest#testFixes",
      "SubstringOfZeroTest#negativeJustVarsOneArg",
      "SubstringOfZeroTest#negativeJustVarsTwoArg",
      "SubstringOfZeroTest#positiveJustVars",
      "SubstringOfZeroTest#positiveVarsWithMethods",
      "SubstringOfZeroTest#positiveStringLiteral",
      "SubstringOfZeroTest#negativeVarsWithMethodsOneArg",
      "SubstringOfZeroTest#negativeVarsWithMethodsTwoArg",
      "SubstringOfZeroTest#negativeVarsWithDifferentMethod",
      "JUnit3TestNotRunTest#misspelledTest",
      "JUnit3TestNotRunTest#hasModifiersAndThrows",
      "JUnit3TestNotRunTest#substitutionShouldBeWellFormed",
      "JUnit3TestNotRunTest#noModifiers"
    ]
  },
  "org.hamcrest:hamcrest-core": {
    "error-prone": [
      "ExpectedExceptionCheckerTest#isA_hasCauseThat"
    ]
  },
  "com.google.truth.extensions:truth-java8-extension": {
    "error-prone": [
      "ErrorProneFlagsTest#parseAndGetInteger",
      "ErrorProneFlagsTest#parseAndGetImplicitTrue",
      "ErrorProneFlagsTest#parseAndGetList",
      "ErrorProneFlagsTest#parseAndGetBoolean",
      "ErrorProneFlagsTest#parseAndGetStringValue",
      "RegexesTest#positive",
      "RegexesTest#negative"
    ]
  },
  "com.google.truth:truth": {
    "error-prone": [
      "BugCheckerRefactoringTestHelperTest#testReplaceFail",
      "BugCheckerRefactoringTestHelperTest#testReplace",
      "BugCheckerRefactoringTestHelperTest#testNoMatch",
      "CompilationTestHelperTest#expectedResultDiffersFromActualResultFails",
      "CompilationTestHelperTest#fileWithSyntaxErrorFails",
      "CompilationTestHelperTest#expectNoDiagnoticsButDiagnosticsProducedFailsWithMatches",
      "CompilationTestHelperTest#expectNoDiagnoticsButDiagnosticsProducedFails"
    ]
  },
  "org.springframework:spring-webflux": {
    "rest-assured": [
      "AcceptTest#adds_accept_by_media_type",
      "AcceptTest#adds_accept_by_string_value",
      "AcceptTest#adds_accept_by_content_type",
      "WebTestClientNonStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "WebTestClientResponseStatusTest#can_use_spring_http_status_for_status_matching",
      "WebTestClientResponseStatusTest#can_use_integer_value_for_status_code_matching",
      "WebTestClientResponseStatusTest#can_use_hamcrest_matcher_for_status_code_matching",
      "WebTestClientPathParamTest#unnamed_path_param_works",
      "ResponseLoggingTest#logging_if_response_validation_fails_doesnt_log_anything_if_validation_succeeds",
      "ResponseLoggingTest#logging_if_response_validation_fails_works",
      "RequestLoggingTest#doesnt_log_if_request_validation_succeeds_when_request_logging_if_validation_fails_is_enabled",
      "RequestLoggingTest#logging_query_param_works",
      "RequestLoggingTest#logging_form_param_works",
      "RequestLoggingTest#logging_param_works",
      "RequestLoggingTest#logging_if_request_validation_fails_works",
      "RequestLoggingTest#base_path_is_prepended_to_path_when_logging",
      "RequestLoggingTest#can_supply_string_as_body_for_post",
      "WebTestClientStaticRequestAndResponseSpecTest#response_validation_fails_if_any_property_in_the_response_is_not_valid",
      "WebTestClientStaticRequestAndResponseSpecTest#response_validation_kicks_in_even_when_no_then_clause_is_specified",
      "WebTestClientStaticRequestAndResponseSpecTest#request_and_response_spec_can_be_defined_statically",
      "QueryParamTest#query_param",
      "QueryParamTest#param_with_int",
      "RestDocsTest#document_generation_is_executed",
      "RestDocsTest#path_parameters_are_automatically_supported",
      "WebTestClientResponseTimeTest#can_extract_response_time_in_web_test_client_extension",
      "WebTestClientResponseTimeTest#can_use_response_time_validation_in_web_test_client_extension",
      "GetCookiesTest#can_send_cookie_using_cookie_class",
      "GetCookiesTest#can_send_cookies_using_cookies_class",
      "GetCookiesTest#can_send_multiple_cookies",
      "GetCookiesTest#can_send_cookie_using_cookie_name_and_value",
      "GetCookiesTest#can_send_cookies_using_map",
      "ResultMatcherTest#unnamed_path_params_works",
      "ParserTest#using_static_parser_its_possible_to_parse_unknown_content_types",
      "ParserTest#using_non_static_parser_its_possible_to_parse_unknown_content_types",
      "SetCookiesTest#can_receive_cookies",
      "HeaderTest#can_send_header_using_header_name_and_value",
      "HeaderTest#can_send_multiple_headers",
      "HeaderTest#can_send_headers_using_headers_class",
      "HeaderTest#validate_may_fail_when_using_mapping_function_when_validating_header_value",
      "HeaderTest#can_send_headers_using_map",
      "HeaderTest#can_send_header_using_header_class",
      "HeaderTest#canUseResponseAwareMatchersForHeaderValidation",
      "HeaderTest#can_use_mapping_function_when_validating_header_value",
      "GreetingControllerRestAssuredTest#uses_predefined_web_test_client_instance",
      "GreetingControllerRestAssuredTest#param_with_int",
      "GreetingControllerRestAssuredTest#uses_predefined_standalone",
      "GreetingControllerRestAssuredTest#uses_static_web_test_client",
      "ExtractTest#can_extract_rest_assured_web_test_client_response",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_using_static_response_and_request_specs_declared_before_enable_logging",
      "LoggingIfValidationFailsTest#logging_of_both_request_with_uri_function_and_response_validation_works_when_test_fails",
      "LoggingIfValidationFailsTest#logging_is_applied_when_using_non_static_response_specifications",
      "LoggingIfValidationFailsTest#doesnt_log_if_request_or_response_when_validation_succeeds_when_request_and_response_logging_if_validation_fails_is_enabled",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails_when_configured_with_log_detail",
      "LoggingIfValidationFailsTest#logging_of_both_request_and_response_validation_works_when_test_fails",
      "ContentTypeTest#doesnt_add_default_charset_to_content_type_if_configured_not_to_do_so",
      "ContentTypeTest#adds_specific_charset_to_content_type_by_default",
      "ContentTypeTest#adds_default_charset_to_content_type_by_default",
      "ContentTypeTest#doesnt_add_default_charset_to_content_type_if_charset_is_defined_explicitly",
      "WebTestClientResponseAwareMatcherTest#can_use_predefined_matcher_for_response_aware_matching",
      "GetTest#simple_get_works",
      "GetTest#unnamed_path_params_works",
      "WebTestClientRequestMethodTest#request_method_accepts_string_verb",
      "WebTestClientRequestMethodTest#static_request_method_accepts_enum_verb_and_path_params",
      "WebTestClientRequestMethodTest#request_method_accepts_enum_verb_and_unnamed_path_params",
      "WebTestClientRequestMethodTest#static_request_method_accepts_string_verb",
      "WebTestClientRequestMethodTest#throws_iae_when_http_verb_is_not_supported_by_web_test_client",
      "WebTestClientRequestMethodTest#request_method_accepts_string_verb_and_unnamed_path_params",
      "WebTestClientRequestMethodTest#request_method_accepts_enum_verb",
      "BasePathTest#base_path_can_end_with_slash_and_path_doesnt_have_to_begin_with_slash",
      "BasePathTest#base_path_doesnt_have_to_end_with_slash_even_though_path_doesnt_begin_with_slash2",
      "BasePathTest#default_base_path_is_slash",
      "BasePathTest#base_path_is_prepended_to_path",
      "BasePathTest#double_slashes_are_prevented",
      "SecuredRequestTest#basic_authentication_filter_is_applied",
      "WebTestClientSpecificationMergingTest#logging_is_not_overwritten_when_not_defined_in_specification",
      "WebTestClientSpecificationMergingTest#logging_is_overwritten_when_defined_in_specification",
      "WebTestClientSpecificationMergingTest#web_test_client_factory_is_not_overwritten_when_not_defined_in_specification",
      "WebTestClientSpecificationMergingTest#web_test_client_instance_is_overwritten_when_defined_in_specification",
      "WebTestClientParamConfigTest#replaces_query_params_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_form_params_by_default",
      "WebTestClientParamConfigTest#replaces_request_params_when_configured_to_do_so",
      "WebTestClientParamConfigTest#replaces_form_params_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_query_params_by_default",
      "WebTestClientParamConfigTest#replaces_all_parameters_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_all_parameters_when_configured_to_do_so",
      "WebTestClientParamConfigTest#merges_request_params_by_default"
    ]
  },
  "org.codehaus.groovy:groovy-xml": {
    "rest-assured": [
      "XmlPathTest#xmlPathSupportsPrettifiyingTheXML",
      "XmlPathTest#xmlPathSupportsPeekingTheXML",
      "XmlPathTest#xmlPathSupportsPrettyPrintingTheXML",
      "XmlPathTest#xmlPathSupportsPrettyPeekingTheXML",
      "XmlPathObjectDeserializationTest#deserializes_xml_document_including_list_using_jaxb",
      "XmlPathObjectDeserializationTest#deserializes_another_sub_node_using_jaxb",
      "XmlPathObjectDeserializationTest#deserializes_root_node_using_jaxb",
      "XmlPathObjectDeserializationTest#deserializes_list_using_getList",
      "XmlPathObjectDeserializationTest#deserializes_single_sub_node_using_jaxb",
      "XmlPathObjectDeserializationTest#xml_path_supports_custom_deserializer_using_static_configuration",
      "XmlPathObjectDeserializationTest#xml_path_supports_custom_deserializer"
    ]
  },
  "org.codehaus.groovy:groovy": {
    "rest-assured": [
      "XmlPathSubPathTest#error_messages_on_invalid_subpath_looks_ok",
      "XmlPathErrorMessageTest#error_messages_on_invalid_subpath_with_root_name_less_than_six_characters_looks_ok",
      "XmlPathErrorMessageTest#error_messages_on_invalid_subpath_looks_ok_when_received_node_is_not_root",
      "XmlPathErrorMessageTest#error_messages_on_invalid_path_looks_ok"
    ]
  },
  "tech.units:indriya": {
    "languagetool": [
      "WordCoherencyRuleTest#testRuleCompleteTexts",
      "WordCoherencyRuleTest#testRule",
      "WordCoherencyRuleTest#testCallIndependence",
      "WordCoherencyRuleTest#testMatchPosition",
      "SwissGermanSpellerRuleTest#testGetSuggestionsFromSpellingTxt",
      "MorfologikCanadianSpellerRuleTest#testMorfologikSpeller",
      "MorfologikCanadianSpellerRuleTest#testSuggestions",
      "PortugueseWordRepeatRuleTest#testIgnore",
      "UnitConversionRuleTest#match",
      "HunspellRuleTest#testRuleWithAustrianGerman",
      "HunspellRuleTest#testRuleWithSwissGerman",
      "HunspellRuleTest#testRuleWithGerman",
      "WikipediaQuickCheckTest#testCheckWikipediaMarkup",
      "GermanSpellerRuleTest#testRuleWithAustrianGerman",
      "GermanSpellerRuleTest#testRuleWithSwissGerman",
      "GermanSpellerRuleTest#testRuleWithGermanyGerman",
      "GermanSpellerRuleTest#testDashAndHyphen",
      "GermanSpellerRuleTest#testGetAdditionalTopSuggestions",
      "GermanSpellerRuleTest#testMorfologikSuggestionsWorkaround",
      "GermanSpellerRuleTest#testGetSuggestionWithPunctuation",
      "GermanSpellerRuleTest#testAddIgnoreWords",
      "GermanSpellerRuleTest#testPosition",
      "SpellIgnoreTest#testIgnore",
      "PipelinePoolTest#testDifferentPipelineSettings",
      "PipelinePoolTest#testPipelineCreatedAndUsed",
      "PipelinePoolTest#testMaxPipelinePoolSize",
      "PipelinePoolTest#testPipelineMutation",
      "PipelinePoolTest#testPipelinePoolExpireTime",
      "HTTPServerLoadTest#testHTTPServer",
      "MissingCommaRelativeClauseRuleTest#testMatch",
      "GermanWrongWordInContextRuleTest#testRule",
      "SentenceWhitespaceRuleTest#testMatch",
      "CompoundRuleTest#testRule",
      "AtomFeedCheckerTest#testCheckToDatabase",
      "AtomFeedCheckerTest#testCheck",
      "FalseFriendRuleTest#testHintsForDemoLanguage",
      "FalseFriendRuleTest#testHintsForEnglishSpeakers",
      "HTTPSServerTest#testHTTPSServer",
      "HTTPSServerTest#runRequestLimitationTest",
      "CaseRuleTest#testRule",
      "CaseRuleTest#testSubstantivierteVerben",
      "CaseRuleTest#testRuleActivation",
      "CaseRuleTest#testPhraseExceptions",
      "CaseRuleTest#testCompareLists",
      "MorfologikBritishSpellerRuleTest#testVariantMessages",
      "MorfologikBritishSpellerRuleTest#testMorfologikSpeller",
      "MorfologikBritishSpellerRuleTest#testSuggestions",
      "GermanPatternRuleTest#testRules",
      "GermanPatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "MorfologikNewZealandSpellerRuleTest#testMorfologikSpeller",
      "MorfologikNewZealandSpellerRuleTest#testSuggestions",
      "RuleTest#testJavaRules",
      "DuUpperLowerCaseRuleTest#testRule",
      "PortugueseDisambiguationRuleTest#testDisambiguationRulesFromXML",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest",
      "AustrianGermanSpellerRuleTest#testGetSuggestionsFromSpellingTxt",
      "HTTPServerTest#testHTTPServer",
      "SpellingCheckRuleTest#testIgnorePhrases",
      "SpellingCheckRuleTest#testIgnoreSuggestionsWithMorfologik",
      "GermanWordRepeatRuleTest#testRule",
      "VerbAgreementRuleTest#testPositions",
      "VerbAgreementRuleTest#testWrongVerb",
      "VerbAgreementRuleTest#testWrongVerbSubject",
      "EnglishPatternRuleTest#testRules",
      "EnglishPatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "GermanDisambiguationRuleTest#testDisambiguationRulesFromXML",
      "EnglishDashRuleTest#testRule",
      "EnglishWrongWordInContextRuleTest#testRule",
      "NewZealandReplaceRuleTest#testRule",
      "SimpleGermanPatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "PortugueseWordRepeatBeginningRuleTest#testRule",
      "MissingVerbRuleTest#test",
      "JLanguageToolTest#testCache",
      "JLanguageToolTest#testCacheWithTextLevelRules",
      "GermanFillerWordsRuleTest#testRule",
      "CompoundInfinitivRuleTest#testRule",
      "GermanParagraphRepeatBeginningRuleTest#testRule",
      "OldSpellingRuleTest#test",
      "RemoteLanguageToolIntegrationTest#testClient",
      "PortuguesePatternRuleTest#testRules",
      "PortuguesePatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "CompoundCoherencyRuleTest#testRule",
      "SuggestionReplacerTest#testErrorAtTextBeginning",
      "SuggestionReplacerTest#testApplySuggestionToOriginalText",
      "SuggestionReplacerTest#testComplexText",
      "SuggestionReplacerTest#testKnownBug",
      "SuggestionReplacerTest#testCompleteText",
      "SuggestionReplacerTest#testReference1",
      "SuggestionReplacerTest#testReference2",
      "SuggestionReplacerTest#testErrorAtParagraphBeginning",
      "SuggestionReplacerTest#testNestedTemplates",
      "SuggestionReplacerTest#testCompleteText2",
      "PortugueseWikipediaRuleTest#testRule",
      "WordRepeatRuleTest#testRuleGerman",
      "GermanStyleRepeatedWordRuleTest#testRule",
      "PortugueseUnitConversionRuleTest#match",
      "DashRuleTest#testRule",
      "UppercaseSentenceStartRuleTest#testRule",
      "SpellingCheckRuleTest#testIgnoreSuggestionsWithHunspell",
      "TextCheckerTest#testInvalidAltLanguages",
      "LongSentenceRuleTest#testMatch",
      "GenericUnpairedBracketsRuleTest#testGermanRule",
      "ProhibitedCompoundRuleTest#testRule",
      "UnitConversionRuleUSTest#match",
      "WiederVsWiderRuleTest#testRule",
      "GermanWordRepeatBeginningRuleTest#testRule",
      "UnitConversionRuleImperialTest#match",
      "EnglishLearnerRulesTest#shortMessageIsLongerThanErrorMessage",
      "SpellingTest#testEnglishWords",
      "AgreementRuleTest#testDetAdjNounRule",
      "AgreementRuleTest#testDetNounRule",
      "AgreementRuleTest#testRegression",
      "AgreementRuleTest#testDetNounRuleErrorMessages",
      "AgreementRuleTest#testVieleWenige",
      "SimilarNameRuleTest#testRule",
      "UserDictTest#testHTTPServer",
      "BritishReplaceRuleTest#testRule",
      "MorfologikAustralianSpellerRuleTest#testMorfologikSpeller",
      "MorfologikAustralianSpellerRuleTest#testSuggestions",
      "GermanChunkerTest#testChunking",
      "GermanChunkerTest#testTemp",
      "GermanChunkerTest#testOpenNLPLikeChunking",
      "WordListValidatorTest#testWordListValidity",
      "PortugueseClicheRuleTest#testRule",
      "MainTest#testLangWithCountryVariant",
      "MainTest#testGermanFileWithURL"
    ]
  },
  "org.languagetool:language-fr": {
    "languagetool": [
      "ConfusionSetLoaderTest#testConfusionSetLoading",
      "RuleTest#testJavaRules",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest"
    ]
  },
  "org.languagetool:language-gl": {
    "languagetool": [
      "StandaloneBitextPatternRuleTest#testBitextPatternRuleTest",
      "RuleTest#testJavaRules",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest"
    ]
  },
  "org.languagetool:language-es": {
    "languagetool": [
      "RuleTest#testJavaRules",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest",
      "WordListValidatorTest#testWordListValidity"
    ]
  },
  "org.languagetool:language-uk": {
    "languagetool": [
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest"
    ]
  },
  "org.languagetool:language-ca": {
    "languagetool": [
      "MainTest#testVariants",
      "RuleTest#testJavaRules",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest",
      "WordListValidatorTest#testWordListValidity",
      "MainTest#testValencianCatalan",
      "MainTest#testCatalan",
      "MainTest#testCatalan2"
    ]
  },
  "org.languagetool:language-pt": {
    "languagetool": [
      "RuleTest#testJavaRules",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest"
    ]
  },
  "org.languagetool:languagetool-core": {
    "languagetool": [
      "WordCoherencyRuleTest#testRuleCompleteTexts",
      "WordCoherencyRuleTest#testRule",
      "WordCoherencyRuleTest#testCallIndependence",
      "WordCoherencyRuleTest#testMatchPosition",
      "SwissGermanSpellerRuleTest#testGetSuggestionsFromSpellingTxt",
      "MorfologikCanadianSpellerRuleTest#testMorfologikSpeller",
      "MorfologikCanadianSpellerRuleTest#testSuggestions",
      "PortugueseWordRepeatRuleTest#testIgnore",
      "UnitConversionRuleTest#match",
      "HunspellRuleTest#testRuleWithAustrianGerman",
      "HunspellRuleTest#testRuleWithSwissGerman",
      "HunspellRuleTest#testRuleWithGerman",
      "WikipediaQuickCheckTest#testCheckWikipediaMarkup",
      "GermanSpellerRuleTest#testRuleWithAustrianGerman",
      "GermanSpellerRuleTest#testRuleWithSwissGerman",
      "GermanSpellerRuleTest#testRuleWithGermanyGerman",
      "GermanSpellerRuleTest#testDashAndHyphen",
      "GermanSpellerRuleTest#testGetAdditionalTopSuggestions",
      "GermanSpellerRuleTest#testMorfologikSuggestionsWorkaround",
      "GermanSpellerRuleTest#testGetSuggestionWithPunctuation",
      "GermanSpellerRuleTest#testAddIgnoreWords",
      "GermanSpellerRuleTest#testPosition",
      "SpellIgnoreTest#testIgnore",
      "PatternRuleQueryBuilderTest#testOnlyInflected",
      "PatternRuleQueryBuilderTest#testIgnoreOptionalTokens",
      "PatternRuleQueryBuilderTest#testInflectedAndRegex",
      "PatternRuleQueryBuilderTest#testCaseSensitive",
      "PatternRuleQueryBuilderTest#testNumberRegex",
      "PatternRuleQueryBuilderTest#testSpecialRegexSyntax2",
      "PatternRuleQueryBuilderTest#testUnsupportedPatternRule",
      "PatternRuleQueryBuilderTest#testSpecialRegexSyntax",
      "PatternRuleQueryBuilderTest#testQueryBuilder",
      "PatternRuleQueryBuilderTest#testUnsupportedBackReferencePatternRule",
      "PatternRuleQueryBuilderTest#testSeveralElements",
      "PipelinePoolTest#testDifferentPipelineSettings",
      "PipelinePoolTest#testPipelineCreatedAndUsed",
      "PipelinePoolTest#testMaxPipelinePoolSize",
      "PipelinePoolTest#testPipelineMutation",
      "PipelinePoolTest#testPipelinePoolExpireTime",
      "HTTPServerLoadTest#testHTTPServer",
      "MissingCommaRelativeClauseRuleTest#testMatch",
      "GermanWrongWordInContextRuleTest#testRule",
      "MainTest#testVariants",
      "MainTest#testDoProofreading",
      "SentenceWhitespaceRuleTest#testMatch",
      "CompoundRuleTest#testRule",
      "AtomFeedCheckerTest#testCheckToDatabase",
      "AtomFeedCheckerTest#testCheck",
      "FalseFriendRuleTest#testHintsForDemoLanguage",
      "FalseFriendRuleTest#testHintsForEnglishSpeakers",
      "HTTPSServerTest#testHTTPSServer",
      "HTTPSServerTest#runRequestLimitationTest",
      "CaseRuleTest#testRule",
      "CaseRuleTest#testSubstantivierteVerben",
      "CaseRuleTest#testRuleActivation",
      "CaseRuleTest#testPhraseExceptions",
      "CaseRuleTest#testCompareLists",
      "MorfologikBritishSpellerRuleTest#testVariantMessages",
      "MorfologikBritishSpellerRuleTest#testMorfologikSpeller",
      "MorfologikBritishSpellerRuleTest#testSuggestions",
      "GermanPatternRuleTest#testRules",
      "GermanPatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "MorfologikNewZealandSpellerRuleTest#testMorfologikSpeller",
      "MorfologikNewZealandSpellerRuleTest#testSuggestions",
      "RuleTest#testJavaRules",
      "DuUpperLowerCaseRuleTest#testRule",
      "PortugueseDisambiguationRuleTest#testDisambiguationRulesFromXML",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest",
      "AustrianGermanSpellerRuleTest#testGetSuggestionsFromSpellingTxt",
      "HTTPServerTest#testHTTPServer",
      "SpellingCheckRuleTest#testIgnorePhrases",
      "SpellingCheckRuleTest#testIgnoreSuggestionsWithMorfologik",
      "GermanWordRepeatRuleTest#testRule",
      "VerbAgreementRuleTest#testPositions",
      "VerbAgreementRuleTest#testWrongVerb",
      "VerbAgreementRuleTest#testWrongVerbSubject",
      "EnglishPatternRuleTest#testRules",
      "EnglishPatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "GermanDisambiguationRuleTest#testDisambiguationRulesFromXML",
      "EnglishDashRuleTest#testRule",
      "EnglishWrongWordInContextRuleTest#testRule",
      "NewZealandReplaceRuleTest#testRule",
      "SimpleGermanPatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "PortugueseWordRepeatBeginningRuleTest#testRule",
      "MissingVerbRuleTest#test",
      "JLanguageToolTest#testCache",
      "JLanguageToolTest#testCacheWithTextLevelRules",
      "GermanFillerWordsRuleTest#testRule",
      "CompoundInfinitivRuleTest#testRule",
      "GermanParagraphRepeatBeginningRuleTest#testRule",
      "OldSpellingRuleTest#test",
      "RemoteLanguageToolIntegrationTest#testClientWithHTTPS",
      "RemoteLanguageToolIntegrationTest#testClient",
      "PortuguesePatternRuleTest#testRules",
      "PortuguesePatternRuleTest#shortMessageIsLongerThanErrorMessage",
      "CompoundCoherencyRuleTest#testRule",
      "ContextBuilderTest#testGetContext",
      "SuggestionReplacerTest#testErrorAtTextBeginning",
      "SuggestionReplacerTest#testApplySuggestionToOriginalText",
      "SuggestionReplacerTest#testComplexText",
      "SuggestionReplacerTest#testKnownBug",
      "SuggestionReplacerTest#testCompleteText",
      "SuggestionReplacerTest#testReference1",
      "SuggestionReplacerTest#testReference2",
      "SuggestionReplacerTest#testErrorAtParagraphBeginning",
      "SuggestionReplacerTest#testNestedTemplates",
      "SuggestionReplacerTest#testCompleteText2",
      "PortugueseWikipediaRuleTest#testRule",
      "WordRepeatRuleTest#testRuleGerman",
      "GermanStyleRepeatedWordRuleTest#testRule",
      "PortugueseUnitConversionRuleTest#match",
      "DashRuleTest#testRule",
      "UppercaseSentenceStartRuleTest#testRule",
      "SpellingCheckRuleTest#testIgnoreSuggestionsWithHunspell",
      "TextCheckerTest#testInvalidAltLanguages",
      "LongSentenceRuleTest#testMatch",
      "GenericUnpairedBracketsRuleTest#testGermanRule",
      "ProhibitedCompoundRuleTest#testRule",
      "UnitConversionRuleUSTest#match",
      "IndexerSearcherTest#testIndexerSearcherWithEnglish",
      "WiederVsWiderRuleTest#testRule",
      "GermanWordRepeatBeginningRuleTest#testRule",
      "UnitConversionRuleImperialTest#match",
      "EnglishLearnerRulesTest#shortMessageIsLongerThanErrorMessage",
      "SpellingTest#testEnglishWords",
      "AgreementRuleTest#testDetAdjNounRule",
      "AgreementRuleTest#testDetNounRule",
      "AgreementRuleTest#testRegression",
      "AgreementRuleTest#testDetNounRuleErrorMessages",
      "AgreementRuleTest#testVieleWenige",
      "SimilarNameRuleTest#testRule",
      "UserDictTest#testHTTPServer",
      "BritishReplaceRuleTest#testRule",
      "MorfologikAustralianSpellerRuleTest#testMorfologikSpeller",
      "MorfologikAustralianSpellerRuleTest#testSuggestions",
      "GermanChunkerTest#testChunking",
      "GermanChunkerTest#testTemp",
      "GermanChunkerTest#testOpenNLPLikeChunking",
      "WordListValidatorTest#testWordListValidity",
      "PortugueseClicheRuleTest#testRule",
      "MainTest#testLangWithCountryVariant",
      "MainTest#testGermanFileWithURL"
    ]
  },
  "org.languagetool:language-en": {
    "languagetool": [
      "FalseFriendsAsBitextLoaderTest#testHintsForPolishTranslators",
      "PatternRuleQueryBuilderTest#testNumberRegex",
      "PatternRuleQueryBuilderTest#testIgnoreOptionalTokens",
      "PatternRuleQueryBuilderTest#testUnsupportedPatternRule",
      "PatternRuleQueryBuilderTest#testUnsupportedBackReferencePatternRule",
      "PatternRuleQueryBuilderTest#testCaseSensitive",
      "PatternRuleQueryBuilderTest#testOnlyInflected",
      "PatternRuleQueryBuilderTest#testSeveralElements",
      "PatternRuleQueryBuilderTest#testQueryBuilder",
      "PatternRuleQueryBuilderTest#testSpecialRegexSyntax2",
      "PatternRuleQueryBuilderTest#testSpecialRegexSyntax",
      "PatternRuleQueryBuilderTest#testInflectedAndRegex",
      "PipelinePoolTest#testDifferentPipelineSettings",
      "PipelinePoolTest#testPipelineCreatedAndUsed",
      "PipelinePoolTest#testMaxPipelinePoolSize",
      "PipelinePoolTest#testPipelineMutation",
      "PipelinePoolTest#testPipelinePoolExpireTime",
      "HTTPServerLoadTest#testHTTPServer",
      "ToolsTest#testBitextCheck",
      "ConfusionSetLoaderTest#testConfusionSetLoading",
      "LanguageToolFilterTest#testFilter",
      "StandaloneBitextPatternRuleTest#testBitextPatternRuleTest",
      "FalseFriendRuleTest#testHintsForPolishSpeakers",
      "FalseFriendRuleTest#testHintsForDemoLanguage",
      "HTTPSServerTest#runReferrerLimitationTest",
      "HTTPSServerTest#testHTTPSServer",
      "RuleTest#testJavaRules",
      "ApiV2Test#testRuleExamples",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest",
      "HTTPServerTest#testHTTPServer",
      "MultiWordChunkerTest#testDisambiguate",
      "JLanguageToolTest#testAnnotateTextCheck",
      "JLanguageToolTest#testCache",
      "JLanguageToolTest#testStrangeInput",
      "JLanguageToolTest#testAnnotateTextCheckPlainText",
      "JLanguageToolTest#testMatchPositionsWithCache",
      "JLanguageToolTest#testAnnotateTextCheckMultipleSentences",
      "JLanguageToolTest#testAnnotateTextCheckMultipleSentences2",
      "JLanguageToolTest#testSentenceTokenize",
      "RemoteLanguageToolIntegrationTest#testClientWithHTTPS",
      "RemoteLanguageToolIntegrationTest#testClient",
      "ContextBuilderTest#testGetContext",
      "SuggestionReplacerTest#testErrorAtTextBeginning",
      "SuggestionReplacerTest#testApplySuggestionToOriginalText",
      "SuggestionReplacerTest#testComplexText",
      "SuggestionReplacerTest#testKnownBug",
      "SuggestionReplacerTest#testCompleteText",
      "SuggestionReplacerTest#testReference1",
      "SuggestionReplacerTest#testReference2",
      "SuggestionReplacerTest#testErrorAtParagraphBeginning",
      "SuggestionReplacerTest#testNestedTemplates",
      "SuggestionReplacerTest#testCompleteText2",
      "TextCheckerTest#testMaxTextLength",
      "TextCheckerTest#testJSONP",
      "TextCheckerTest#testInvalidAltLanguages",
      "IndexerSearcherTest#testWithOneElementWithException",
      "IndexerSearcherTest#testApostropheElement",
      "IndexerSearcherTest#testWithException",
      "IndexerSearcherTest#testIndexerSearcherWithEnglish",
      "IndexerSearcherTest#testWithNewRule",
      "IndexerSearcherTest#testNegatedMatchAtSentenceStart",
      "IndexerSearcherTest#testWithRegexRule",
      "EnglishLearnerRulesTest#testRules",
      "EnglishLearnerRulesTest#shortMessageIsLongerThanErrorMessage",
      "SpellingTest#testEnglishWords",
      "UserDictTest#testHTTPServer",
      "WordListValidatorTest#testWordListValidity",
      "MainTest#testEnglishFile",
      "MainTest#testXmlFiltering",
      "MainTest#testBitextModeApply",
      "MainTest#testLangWithCountryVariant",
      "MainTest#testBitextModeWithDisabledRule",
      "MainTest#testEnglishFileRuleEnabled",
      "MainTest#testBitextWithExternalRule",
      "MainTest#testBitextMode",
      "MainTest#testEnglishFileAutoDetect",
      "MainTest#testEnglishParaMode",
      "MainTest#testEnglishLineMode",
      "MainTest#testEnglishStdInAutoDetect",
      "MainTest#testEnglishFileApplySuggestions",
      "MainTest#testEnglishFileVerbose",
      "MainTest#testEnglishStdInJsonOutput",
      "MainTest#testEnglishFileFakeRuleEnabled",
      "MainTest#testBitextModeWithEnabledRule",
      "MainTest#testEnglishFileRuleDisabled",
      "MainTest#testEnglishStdIn1",
      "MainTest#testEnglishStdIn2",
      "MainTest#testEnglishStdIn3",
      "MainTest#testEnglishStdIn4",
      "MainTest#testEnglishTagger",
      "MainTest#testEnglishFileAPI",
      "MainTest#testNoXmlFilteringByDefault"
    ]
  },
  "org.apache.lucene:lucene-backward-codecs": {
    "languagetool": [
      "LuceneSingleIndexLanguageModelTest#testLanguageModel"
    ]
  },
  "org.languagetool:language-de": {
    "languagetool": [
      "WikipediaQuickCheckTest#testCheckWikipediaMarkup",
      "PipelinePoolTest#testDifferentPipelineSettings",
      "PipelinePoolTest#testMaxPipelinePoolSize",
      "HTTPServerLoadTest#testHTTPServer",
      "ConfusionSetLoaderTest#testConfusionSetLoading",
      "AtomFeedCheckerTest#testCheckToDatabase",
      "AtomFeedCheckerTest#testCheck",
      "FalseFriendRuleTest#testHintsForEnglishSpeakers",
      "HTTPSServerTest#testHTTPSServer",
      "RuleTest#testJavaRules",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest",
      "HTTPServerTest#testHTTPServer",
      "JLanguageToolTest#testCache",
      "JLanguageToolTest#testCacheWithTextLevelRules",
      "RemoteLanguageToolIntegrationTest#testClient",
      "SuggestionReplacerTest#testErrorAtTextBeginning",
      "SuggestionReplacerTest#testApplySuggestionToOriginalText",
      "SuggestionReplacerTest#testComplexText",
      "SuggestionReplacerTest#testKnownBug",
      "SuggestionReplacerTest#testCompleteText",
      "SuggestionReplacerTest#testReference1",
      "SuggestionReplacerTest#testReference2",
      "SuggestionReplacerTest#testErrorAtParagraphBeginning",
      "SuggestionReplacerTest#testNestedTemplates",
      "SuggestionReplacerTest#testCompleteText2",
      "SpellingTest#testEnglishWords",
      "UserDictTest#testHTTPServer",
      "WordListValidatorTest#testWordListValidity",
      "MainTest#testGermanFileWithURL"
    ]
  },
  "org.languagetool:language-pl": {
    "languagetool": [
      "FalseFriendsAsBitextLoaderTest#testHintsForPolishTranslators",
      "HTTPServerLoadTest#testHTTPServer",
      "ToolsTest#testBitextCheck",
      "MainTest#testDoProofreading",
      "StandaloneBitextPatternRuleTest#testBitextPatternRuleTest",
      "RuleTest#testJavaRules",
      "StandaloneDisambiguationRuleTest#testDisambiguationRuleTest",
      "HTTPServerTest#testHTTPServer",
      "MainTest#testBitextModeApply",
      "MainTest#testNoListUnknown",
      "MainTest#testPolishStdInDefaultOff",
      "MainTest#testBitextModeWithDisabledRule",
      "MainTest#testPolishApiStdInDefaultOffNoErrors",
      "MainTest#testListUnknown",
      "MainTest#testBitextWithExternalRule",
      "MainTest#testBitextMode",
      "MainTest#testPolishApiStdInDefaultOff",
      "MainTest#testPolishFileAPI",
      "MainTest#testBitextModeWithEnabledRule",
      "MainTest#testPolishLineNumbers"
    ]
  },
  "org.languagetool:language-nl": {
    "languagetool": [
      "RuleTest#testJavaRules"
    ]
  },
  "com.orientechnologies:orientdb-client": {
    "YCSB": [
      "OrientDBClientTest#scanTest",
      "OrientDBClientTest#readTest",
      "OrientDBClientTest#updateTest",
      "OrientDBClientTest#insertTest",
      "OrientDBClientTest#deleteTest"
    ]
  },
  "com.networknt:balance": {
    "light-4j": [
      "TestMergeStatusConfig#testAppStatus",
      "TestMergeStatusConfig#testEmptyAppStatus",
      "TestMergeStatusConfig#testWithoutAppStatus"
    ]
  },
  "com.networknt:monad-result": {
    "light-4j": [
      "AuditHandlerTest#testAuditWithTrace",
      "AuditHandlerTest#testAuditWithoutTrace"
    ]
  },
  "com.networknt:utility": {
    "light-4j": [
      "ResultTest#testResult",
      "HealthGetHandlerTest#testHealthJson",
      "HealthGetHandlerTest#testHealth"
    ]
  },
  "com.networknt:decryptor": {
    "light-4j": [
      "BasicAuthConfigTest#testDecryption",
      "ConsulHeartbeatManagerTest#testStart",
      "WhitelistConfigTest#testLoadConfig",
      "TlsUtilTest#testLoadInvalidTrustStore",
      "TlsUtilTest#testLoadValidKeyStore",
      "TlsUtilTest#testLoadTrustStore",
      "TlsUtilTest#testLoadInvalidKeyStore",
      "ConsulServiceTest#testToStringSingleTag",
      "ConsulServiceTest#testToStringMultipleTag",
      "ConsulRegistryTest#doRegisterAndAvailable",
      "ConsulRegistryTest#discoverService",
      "ConsulRegistryTest#subAndUnsubService",
      "TokenKeyRequestTest#testConstructor",
      "FingerPrintUtilTest#testGetCertFingerPrint",
      "ServerConfigTest#testInvalidServerOptions",
      "ServerConfigTest#testDefaultServerOptions",
      "ServerConfigTest#testValidServerOptions",
      "ServerConfigTest#testNullEnv",
      "ServerConfigEnvTest#testStringEnv",
      "TestMergeStatusConfig#testAppStatus",
      "TestMergeStatusConfig#testDuplicateStatus",
      "TestMergeStatusConfig#testEmptyAppStatus",
      "TestMergeStatusConfig#testWithoutAppStatus",
      "HandlerTest#validConfig_init_handlersCreated",
      "HandlerTest#validClassNameWithoutAt_split_returnsCorrect",
      "HandlerTest#validClassNameWithAt_split_returnsCorrect",
      "HandlerTest#mixedPathsAndSource",
      "HandlerTest#invalidMethod_init_throws",
      "HandlerTest#conflictingSourceAndPath_init_throws",
      "JwtHelperTest#testVerifySign",
      "JwtHelperTest#testVerifyJwtByJsonWebKeys",
      "JwtHelperTest#testVerifyJwt",
      "JwtHelperTest#testReadCertificate",
      "JwtHelperTest#testVerifyToken",
      "LightClusterTest#testServiceToUrl",
      "LightClusterTest#testServices",
      "ServiceConfigTest#testServiceConfig",
      "TokenResponseTest#testErrorStatus",
      "TokenResponseTest#testExactFields",
      "TokenResponseTest#testMissingFields",
      "TokenResponseTest#testExtraFields",
      "PathResourceConfigTest#testLoadConfig",
      "JwtIssuerTest#longLivedProductSubjectJwt",
      "JwtIssuerTest#longLivedTrainingJwt",
      "JwtIssuerTest#normalPetStoreJwt",
      "JwtIssuerTest#longLivedHelloWorldJwt",
      "JwtIssuerTest#longlivedTransferJwt",
      "JwtIssuerTest#longlivedTokenizationJwt",
      "JwtIssuerTest#longLivedProductAccessJwt",
      "JwtIssuerTest#longLivedAPIAJwt",
      "JwtIssuerTest#longLivedCodegenJwt",
      "JwtIssuerTest#longLivedReferenceJwt",
      "JwtIssuerTest#longLivedATMP1000Jwt",
      "JwtIssuerTest#longLivedPetStoreJwt",
      "JwtIssuerTest#longlivedTokenizationJwt73",
      "OauthHelperTest#testGetSignKey",
      "OauthHelperTest#testDerefToken",
      "OauthHelperTest#testGetToken",
      "OauthHelperTest#testGetTokenKey",
      "OauthHelperTest#testGetTokenResult",
      "VirtualHostConfigTest#testLoadConfig",
      "StatusDefaultTest#testToStringWithoutSeverity",
      "StatusDefaultTest#testToString",
      "StatusDefaultTest#testToStringWithAllArgs",
      "StatusDefaultTest#testConstructorMissingArgs",
      "StatusDefaultTest#testToStringWithArgs",
      "StatusDefaultTest#testJacksonPerf",
      "StatusDefaultTest#testToStringPerf",
      "StatusDefaultTest#testConstructor",
      "SignKeyRequestTest#testConstructor",
      "ConsulClientImplTest#testWaitProperty",
      "JwtVerifierTest#testVerifySign",
      "JwtVerifierTest#testVerifyJwtByJsonWebKeys",
      "JwtVerifierTest#testVerifyJwt",
      "JwtVerifierTest#testReadCertificate",
      "JwtVerifierTest#testVerifyToken",
      "GenericDataSourceTest#testGetMysqlDataSource",
      "GenericDataSourceTest#testGetDataSource",
      "GenericDataSourceTest#testGetH2DataSource",
      "ResultTest#testResult",
      "ResponseEncodeConfigTest#loadConfig",
      "MaskTest#testMaskRequestBody",
      "MaskTest#testMaskQueryParameter",
      "MaskTest#testMaskResponseBody",
      "MaskTest#testMaskString",
      "MaskTest#testMaskResponseHeader",
      "MaskTest#testMaskRequestHeader",
      "DirectRegistryTest#testDirectRegistry",
      "RequestDecodeConfigTest#loadConfig"
    ]
  },
  "com.networknt:switcher": {
    "light-4j": [
      "ConsulRegistryTest#doRegisterAndAvailable",
      "ConsulRegistryTest#discoverService",
      "ConsulRegistryTest#subAndUnsubService",
      "LightClusterTest#testServiceToUrl",
      "LightClusterTest#testServices"
    ]
  },
  "com.networknt:config": {
    "light-4j": [
      "LightClusterTest#testServiceToUrl",
      "LightClusterTest#testServices",
      "ResultTest#testResult",
      "DirectRegistryTest#testDirectRegistry"
    ]
  },
  "com.networknt:service": {
    "light-4j": [
      "ExceptionHandlerTest#testRuntimeException",
      "ExceptionHandlerTest#testApiException",
      "BodyHandlerTest#testPostInvalidJson",
      "BodyHandlerTest#testPostNonJson",
      "WhitelistHandlerTest#testInvalidIp",
      "ServerInfoDisabledTest#testServerInfo",
      "BasicAuthHandlerTest#testInvalidUsername",
      "BasicAuthHandlerTest#testInvalidBasicHeaderCredentialInfo",
      "BasicAuthHandlerTest#testInvalidBasicHeaderPrefixText",
      "BasicAuthHandlerTest#testInvalidPassword",
      "BasicAuthHandlerTest#testMissingToken",
      "ResultTest#testResult"
    ]
  },
  "com.networknt:status": {
    "light-4j": [
      "ConsulRegistryTest#doRegisterAndAvailable",
      "ConsulRegistryTest#discoverService",
      "ConsulRegistryTest#subAndUnsubService",
      "LightClusterTest#testServiceToUrl",
      "LightClusterTest#testServices"
    ]
  },
  "org.immutables:value-processor": {
    "immutables": [
      "CriteriaModelProcessorTest#havingCriteria"
    ]
  },
  "org.elasticsearch:elasticsearch": {
    "immutables": [
      "ElasticPersonTest#regex_forElastic",
      "ElasticAggregationTest#no_groupBy",
      "ElasticAggregationTest#agg1",
      "ElasticAggregationTest#agg2",
      "ElasticAggregationTest#empty",
      "ScrollingTest#withLimit",
      "ScrollingTest#noLimit",
      "ElasticIntegrationTests#projection",
      "ElasticIntegrationTests#nullable",
      "ElasticIntegrationTests#comparison",
      "ElasticIntegrationTests#optional",
      "ElasticIntegrationTests#empty",
      "ElasticIntegrationTests#equality",
      "ElasticIntegrationTests#basic",
      "ElasticIntegrationTests#startsWith",
      "ElasticIntegrationTests#contains",
      "ElasticIntegrationTests#fetch",
      "ElasticIntegrationTests#whitespace",
      "ElasticIntegrationTests#endsWith"
    ]
  },
  "org.immutables:criteria-common": {
    "immutables": [
      "MongoAggregationTest#no_groupBy",
      "MongoAggregationTest#agg1",
      "MongoAggregationTest#agg2",
      "MongoAggregationTest#empty",
      "MongoIntegrationTest#projection",
      "MongoIntegrationTest#nullable",
      "MongoIntegrationTest#comparison",
      "MongoIntegrationTest#optional",
      "MongoIntegrationTest#empty",
      "MongoIntegrationTest#equality",
      "MongoIntegrationTest#basic",
      "MongoIntegrationTest#startsWith",
      "MongoIntegrationTest#specialChars",
      "MongoIntegrationTest#contains",
      "MongoIntegrationTest#doubleQuoteEscape",
      "MongoIntegrationTest#fetch",
      "MongoIntegrationTest#whitespace",
      "MongoIntegrationTest#quoteEscape",
      "MongoIntegrationTest#endsWith",
      "GeodePersonTest#projection_ofContainers",
      "GeodePersonTest#orderBy",
      "GeodePersonTest#comparison",
      "GeodePersonTest#intComparison",
      "GeodePersonTest#projection_basic",
      "GeodePersonTest#projection_nulls",
      "GeodePersonTest#projection_tuple",
      "GeodePersonTest#between",
      "GeodePersonTest#basic",
      "GeodePersonTest#empty",
      "GeodePersonTest#limit",
      "GeodePersonTest#notLogic",
      "InMemoryIntegrationTest#projection",
      "InMemoryIntegrationTest#nullable",
      "InMemoryIntegrationTest#comparison",
      "InMemoryIntegrationTest#optional",
      "InMemoryIntegrationTest#empty",
      "InMemoryIntegrationTest#equality",
      "InMemoryIntegrationTest#basic",
      "InMemoryIntegrationTest#startsWith",
      "InMemoryIntegrationTest#specialChars",
      "InMemoryIntegrationTest#contains",
      "InMemoryIntegrationTest#doubleQuoteEscape",
      "InMemoryIntegrationTest#fetch",
      "InMemoryIntegrationTest#whitespace",
      "InMemoryIntegrationTest#quoteEscape",
      "InMemoryIntegrationTest#endsWith",
      "GeodeIntegrationTest#projection",
      "GeodeIntegrationTest#nullable",
      "GeodeIntegrationTest#comparison",
      "GeodeIntegrationTest#empty",
      "GeodeIntegrationTest#equality",
      "GeodeIntegrationTest#basic",
      "GeodeIntegrationTest#specialChars",
      "GeodeIntegrationTest#doubleQuoteEscape",
      "GeodeIntegrationTest#fetch",
      "GeodeIntegrationTest#whitespace",
      "GeodeIntegrationTest#quoteEscape",
      "IdAttributeTest#idAttribute",
      "GeodeAggregationTest#no_groupBy",
      "GeodeAggregationTest#agg1",
      "GeodeAggregationTest#agg2",
      "GeodeAggregationTest#empty",
      "InMemoryPersonTest#stringContains",
      "InMemoryPersonTest#emptyNotEmptyIterable",
      "InMemoryPersonTest#projection_ofContainers",
      "InMemoryPersonTest#orderBy",
      "InMemoryPersonTest#iterableHasSize",
      "InMemoryPersonTest#nested",
      "InMemoryPersonTest#comparison",
      "InMemoryPersonTest#intComparison",
      "InMemoryPersonTest#iterableContains",
      "InMemoryPersonTest#projection_basic",
      "InMemoryPersonTest#projection_nulls",
      "InMemoryPersonTest#projection_tuple",
      "InMemoryPersonTest#between",
      "InMemoryPersonTest#stringLength",
      "InMemoryPersonTest#basic",
      "InMemoryPersonTest#empty",
      "InMemoryPersonTest#limit",
      "InMemoryPersonTest#regex",
      "InMemoryPersonTest#startsOrEndsWith",
      "InMemoryPersonTest#stringEmptyNotEmpty",
      "InMemoryPersonTest#notLogic",
      "MongoPersonTest#stringContains",
      "MongoPersonTest#emptyNotEmptyIterable",
      "MongoPersonTest#projection_ofContainers",
      "MongoPersonTest#orderBy",
      "MongoPersonTest#iterableHasSize",
      "MongoPersonTest#nested",
      "MongoPersonTest#comparison",
      "MongoPersonTest#intComparison",
      "MongoPersonTest#iterableContains",
      "MongoPersonTest#projection_basic",
      "MongoPersonTest#projection_nulls",
      "MongoPersonTest#projection_tuple",
      "MongoPersonTest#between",
      "MongoPersonTest#stringLength",
      "MongoPersonTest#basic",
      "MongoPersonTest#empty",
      "MongoPersonTest#limit",
      "MongoPersonTest#regex",
      "MongoPersonTest#startsOrEndsWith",
      "MongoPersonTest#stringEmptyNotEmpty",
      "MongoPersonTest#notLogic",
      "JavaTimeTypeTest#localDate",
      "JavaTimeTypeTest#localDateTime",
      "JavaTimeTypeTest#instant"
    ]
  },
  "org.apache.lucene:lucene-core": {
    "querydsl": [
      "SearchSerializerTest#toField"
    ]
  },
  "org.datanucleus:datanucleus-rdbms": {
    "querydsl": [
      "QueryMutabilityTest#clone_",
      "QueryMutabilityTest#queryMutability"
    ]
  },
  "nl.jqno.equalsverifier:equalsverifier": {
    "incubator-pinot": [
      "MetadataEqualsHashCodeTest#testEqualsAndHashCode"
    ]
  },
  "it.unimi.dsi:fastutil": {
    "incubator-pinot": [
      "FastHllQueriesTest#testFastHllWithoutPreGeneratedHllColumns"
    ]
  },
  "com.microsoft.azure:azure-data-lake-store-sdk": {
    "incubator-pinot": [
      "AzurePinotFSTest#testFS"
    ]
  },
  "org.apache.thrift:libthrift": {
    "incubator-pinot": [
      "PurgeTaskExecutorTest",
      "ScatterGatherTest#testError",
      "ScatterGatherTest#testNormal",
      "ScatterGatherTest#testTimeout"
    ]
  },
  "io.netty:netty": {
    "incubator-pinot": [
      "AdminConsoleIntegrationTest",
      "UploadRefreshDeleteIntegrationTest",
      "StarTreeV2ClusterIntegrationTest",
      "PinotURIUploadIntegrationTest",
      "FlakyConsumerRealtimeClusterIntegrationTest",
      "LLCRealtimeClusterSplitCommitIntegrationTest",
      "LLCRealtimeClusterIntegrationTest",
      "SegmentStatusCheckerIntegrationTest",
      "MultiNodesOfflineClusterIntegrationTest",
      "HybridClusterIntegrationTest",
      "ConvertToRawIndexMinionClusterIntegrationTest",
      "SimpleMinionClusterIntegrationTest",
      "MetadataAndDictionaryAggregationPlanClusterIntegrationTest",
      "OfflineClusterIntegrationTest",
      "StarTreeClusterIntegrationTest",
      "HadoopSegmentBuildPushOfflineClusterIntegrationTest",
      "BalanceNumSegmentAssignmentStrategyIntegrationTest",
      "DeleteAPIHybridClusterIntegrationTest",
      "RealtimeClusterIntegrationTest"
    ]
  },
  "io.netty:netty-all": {
    "incubator-pinot": [
      "UploadRefreshDeleteIntegrationTest#testRefresh",
      "MetadataAndDictionaryAggregationPlanClusterIntegrationTest"
    ]
  },
  "commons-logging:commons-logging": {
    "incubator-pinot": [
      "SegmentPurgerTest",
      "TimeConversionTransformFunctionTest",
      "PercentileTDigestQueriesTest",
      "ControllerInstanceToggleTest",
      "SumStarTreeIndexTest",
      "HllIndexCreationTest#testColumnStatsWithStarTree",
      "HllIndexCreationTest#testColumnStatsWithoutStarTree",
      "HllIndexCreationTest#testConvert",
      "PreAggregatedPercentileTDigestStarTreeV2Test",
      "RoutingTableTest#testHelixExternalViewBasedRoutingTable",
      "RoutingTableTest#testTimeBoundaryRegression",
      "DateTimeConversionTransformFunctionTest",
      "ControllerPeriodicTaskStarterTest#testHelixResourceManagerDuringControllerStart",
      "ControllerPeriodicTaskStarterTest#teardown",
      "AdminConsoleIntegrationTest",
      "SegmentPreProcessorTest#testAddColumnMinMaxValue",
      "SegmentPreProcessorTest#testV1CreateInvertedIndices",
      "SegmentPreProcessorTest#testV1UpdateDefaultColumns",
      "SegmentPreProcessorTest#testV3CreateInvertedIndices",
      "PinotSegmentRecordReaderTest",
      "TestStarTreeMetadata",
      "DistinctCountHLLStarTreeV2Test",
      "UploadRefreshDeleteIntegrationTest",
      "MinMaxRangeStarTreeV2Test",
      "StarTreeV2ClusterIntegrationTest",
      "BitmapInvertedIndexTest",
      "PercentileTDigestStarTreeV2Test",
      "DataFetcherTest",
      "PercentileTDigestMVQueriesTest",
      "InnerSegmentSelectionSingleValueQueriesTest#buildSegment",
      "RawIndexCreatorTest",
      "SegmentGenerationWithBytesTypeTest",
      "SegmentGenerationWithTimeColumnTest#testEpochDateSegmentGeneration",
      "SegmentGenerationWithTimeColumnTest#testSimpleDateSegmentGeneration",
      "RealtimeSegmentRelocatorTest",
      "SubtractionTransformFunctionTest",
      "MutableSegmentImplTest",
      "PinotSchemaRestletResourceTest",
      "SegmentPartitionTest#init",
      "IntArraysTest#before",
      "PinotURIUploadIntegrationTest",
      "UnboundedResourceManagerTest#testDefault",
      "UnboundedResourceManagerTest#testWithConfig",
      "LowLevelConsumerRoutingTableBuilderTest#testAllOnlineRoutingTable",
      "LowLevelConsumerRoutingTableBuilderTest#testMultipleConsumingSegments",
      "LowLevelConsumerRoutingTableBuilderTest#testShutdownInProgressServer",
      "InterSegmentAggregationMultiValueQueriesTest#buildSegment",
      "PinotOutputFormatTest#verifyRawIndex",
      "PinotOutputFormatTest#verifyStarIndex",
      "PreAggregatedDistinctCountHLLStarTreeV2Test",
      "SegmentDeletionManagerTest#testRemoveDeletedSegments",
      "BalancedRandomRoutingTableBuilderTest#testDynamicRouting",
      "ReplicaGroupRebalanceStrategyTest",
      "FlakyConsumerRealtimeClusterIntegrationTest",
      "HelixHelperTest",
      "NoDictionaryGroupKeyGeneratorTest",
      "PreAggregatedPercentileEstStarTreeV2Test",
      "TableSizeResourceTest",
      "PinotInstanceRestletResourceTest",
      "ColumnMetadataTest#testAllFieldsExceptCreatorName",
      "ColumnMetadataTest#testAllFieldsInitialized",
      "ColumnMetadataTest#testHllIndexRelatedMetadata",
      "ColumnMetadataTest#testPaddingCharacter",
      "ScheduledRequestHandlerTest",
      "DictionariesTest#before",
      "MultiplicationTransformFunctionTest",
      "QueryExecutorTest",
      "InterSegmentAggregationSingleValueQueriesTest#buildSegment",
      "PinotSegmentRestletResourceTest",
      "SegmentStatusCheckerTest#disabledEmptyTableTest",
      "SegmentStatusCheckerTest#disabledTableTest",
      "SegmentStatusCheckerTest#missingEVPartitionPushTest",
      "SegmentStatusCheckerTest#missingEVPartitionTest",
      "SegmentStatusCheckerTest#missingEVTest",
      "SegmentStatusCheckerTest#missingIdealTest",
      "SegmentStatusCheckerTest#noReplicas",
      "SegmentStatusCheckerTest#noSegments",
      "SegmentStatusCheckerTest#offlineBasicTest",
      "SegmentStatusCheckerTest#realtimeBasicTest",
      "HighLevelConsumerRoutingTableBuilderTest#testHlcRoutingTableBuilder",
      "OnHeapDictionariesTest",
      "CountStarTreeV2Test",
      "LLCRealtimeClusterSplitCommitIntegrationTest",
      "SingleFileIndexDirectoryTest#testLargeRWDirectBuffer",
      "SingleFileIndexDirectoryTest#testMissingIndex",
      "SingleFileIndexDirectoryTest#testMmapLargeBuffer",
      "SingleFileIndexDirectoryTest#testModeChange",
      "SingleFileIndexDirectoryTest#testRemoveIndex",
      "SingleFileIndexDirectoryTest#testWithEmptyDir",
      "SingleFileIndexDirectoryTest#testWriteExisting",
      "AvgStarTreeV2Test",
      "LLCRealtimeClusterIntegrationTest",
      "PurgeTaskExecutorTest",
      "SegmentStatusCheckerIntegrationTest",
      "MultiLevelPriorityQueueTest#testNoPendingAfterTrim",
      "MultiLevelPriorityQueueTest#testPutForBlockedReader",
      "MultiLevelPriorityQueueTest#testPutOutOfCapacity",
      "MultiLevelPriorityQueueTest#testSimplePutTake",
      "MultiLevelPriorityQueueTest#testTakeWithLimits",
      "ValueInTransformFunctionTest",
      "MultiNodesOfflineClusterIntegrationTest",
      "LLRealtimeSegmentDataManagerTest#testCommitAfterCatchup",
      "LLRealtimeSegmentDataManagerTest#testCommitAfterHold",
      "LLRealtimeSegmentDataManagerTest#testConsumingException",
      "LLRealtimeSegmentDataManagerTest#testDiscarded",
      "LLRealtimeSegmentDataManagerTest#testEndCriteriaChecking",
      "LLRealtimeSegmentDataManagerTest#testFileRemovedDuringOnlineTransition",
      "LLRealtimeSegmentDataManagerTest#testHolding",
      "LLRealtimeSegmentDataManagerTest#testNotLeader",
      "LLRealtimeSegmentDataManagerTest#testOnlineTransitionAfterStop",
      "LLRealtimeSegmentDataManagerTest#testRetained",
      "LLRealtimeSegmentDataManagerTest#testReuseOfBuiltSegment",
      "LLRealtimeSegmentDataManagerTest#testSegmentBuildException",
      "HybridClusterIntegrationTest",
      "PinotHelixResourceManagerTest",
      "InnerSegmentAggregationMultiValueQueriesTest#buildSegment",
      "ResourceManagerTest#testCanSchedule",
      "ConvertToRawIndexMinionClusterIntegrationTest",
      "PreAggregatedAvgStarTreeV2Test",
      "DivisionTransformFunctionTest",
      "SimpleMinionClusterIntegrationTest",
      "AdditionTransformFunctionTest",
      "PinotTableRestletResourceTest",
      "DefaultAggregationExecutorTest",
      "MultiplePinotSegmentRecordReaderTest",
      "MaxStarTreeV2Test",
      "MetadataAndDictionaryAggregationPlanClusterIntegrationTest",
      "MergeRollupSegmentConverterTest",
      "FileUploadPathProviderTest",
      "SegmentV1V2ToV3FormatConverterTest",
      "InnerSegmentSelectionMultiValueQueriesTest#buildSegment",
      "PinotCrypterFactoryTest#testConfiguredPinotCrypter",
      "PinotCrypterFactoryTest#testDefaultPinotCrypter",
      "OfflineClusterIntegrationTest",
      "DefaultRebalanceStrategyTest#testGetRebalancedIdealStateOffline",
      "DefaultRebalanceStrategyTest#testGetRebalancedIdealStateRealtime",
      "DefaultRebalanceStrategyTest#testGetRebalancedPartitionAssignment",
      "PinotFileUploadTest",
      "DictionaryBasedGroupKeyGeneratorTest",
      "MetricsHelperTest#testMetricsHelperRegistration",
      "MetricsHelperTest#testCustomizedSegmentFetcherFactory",
      "MetricsHelperTest#testDefaultSegmentFetcherFactory",
      "MetricsHelperTest#testGetSegmentFetcherBasedOnURI",
      "MetricsHelperTest#testSendFileWithJson",
      "MetricsHelperTest#testSendFileWithUriAndCrypter",
      "MetricsHelperTest#testLegacyPartitionRangesConfig",
      "MetricsHelperTest#testPartitionsConfig",
      "MetricsHelperTest#testMultiGet",
      "MetricsHelperTest#testSerializeDeserialize",
      "StarTreeClusterIntegrationTest",
      "SegmentConverterTest",
      "SumStarTreeV2Test",
      "InnerSegmentAggregationSingleValueQueriesTest#buildSegment",
      "RandomRoutingTableTest#testHelixExternalViewBasedRoutingTable",
      "SegmentMetadataImplTest",
      "LoaderTest#testDefaultEmptyValueStringColumn",
      "LoaderTest#testLoad",
      "LoaderTest#testLoadWithStaleConversionDir",
      "LoaderTest#testPadding",
      "PercentileEstStarTreeV2Test",
      "HadoopSegmentBuildPushOfflineClusterIntegrationTest",
      "PinotTenantRestletResourceTest",
      "CrcUtilsTest#test1",
      "BalanceNumSegmentAssignmentStrategyIntegrationTest",
      "RetentionManagerTest#testRealtimeLLCCleanup",
      "RetentionManagerTest#testRetentionWithDays",
      "RetentionManagerTest#testRetentionWithHours",
      "RetentionManagerTest#testRetentionWithMillis",
      "RetentionManagerTest#testRetentionWithMinutes",
      "RetentionManagerTest#testRetentionWithSeconds",
      "SegmentCompletionTest#testCaseSetup",
      "MutableSegmentImplAggregateMetricsTest",
      "DeleteAPIHybridClusterIntegrationTest",
      "ControllerTenantTest",
      "MinStarTreeV2Test",
      "RealtimeClusterIntegrationTest",
      "PrioritySchedulerTest#testMultiThreaded",
      "PrioritySchedulerTest#testOneQuery",
      "PrioritySchedulerTest#testStartStop",
      "PrioritySchedulerTest#testStartStopQueries",
      "PrioritySchedulerTest#testSubmitBeforeRunning",
      "MetadataAndDictionaryAggregationPlanMakerTest#buildSegment",
      "TableViewsTest",
      "PreAggregatedMinMaxRangeStarTreeV2Test",
      "HllStarTreeIndexTest",
      "FastHllQueriesTest#testFastHllWithPreGeneratedHllColumns",
      "FastHllQueriesTest#testFastHllWithoutPreGeneratedHllColumns",
      "TablesResourceTest",
      "PinotFSFactoryTest#testCustomizedSegmentFetcherFactory",
      "PinotFSFactoryTest#testDefaultPinotFSFactory",
      "AccessControlTest",
      "PinotLLCRealtimeSegmentManagerTest"
    ]
  },
  "us.codecraft:webmagic-core": {
    "webporter": [
      "ZhihuFolloweePageProcessorTest#testExtractJson",
      "DemoDataProcessorTest#testProcess"
    ]
  },
  "org.elasticsearch.plugin:reindex-client": {
    "Jest": [
      "ReindexIntegrationTest#testReindex",
      "ReindexIntegrationTest#testWithScriptString",
      "ReindexIntegrationTest#documentShouldBeTransferredWithQuery",
      "ReindexIntegrationTest#documentShouldNotBeTransferredWithQuery",
      "UpdateByQueryIntegrationTest#update",
      "RerouteIntegrationTest#move"
    ]
  },
  "org.elasticsearch.plugin:percolator-client": {
    "Jest": [
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeAggregation",
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeWithCIDRMaskAggregation",
      "Ipv4RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "FlushIntegrationTest#testFlushWithForce",
      "FlushIntegrationTest#testFlushAll",
      "FlushIntegrationTest#testFlushWithWaitifOngoing",
      "FlushIntegrationTest#testFlushSpecificIndices",
      "CatIntegrationTest#shouldReturnEmptyPlainTextForIndices",
      "CatIntegrationTest#catShardsSingleIndex",
      "CatIntegrationTest#shouldDisplayAliasForSingleResult",
      "CatIntegrationTest#shouldDisplayRecoveryForSingleResult",
      "CatIntegrationTest#shouldProperlyMapSingleResult",
      "CatIntegrationTest#catNodes",
      "CatIntegrationTest#shouldChangeOrderOfColumnsByspecifyingParameters",
      "CatIntegrationTest#shouldFilterResultsToASingleIndex",
      "CatIntegrationTest#catAllShards",
      "GetSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "CloseIndexIntegrationTest#testClose",
      "SearchScrollIntegrationTest#clearScrollAll",
      "SearchScrollIntegrationTest#searchWithValidQuery",
      "MultiSearchIntegrationTest#multipleSearchRequestsWithOneFaulty",
      "MultiSearchIntegrationTest#multipleSearchRequests",
      "RangeAggregationIntegrationTest#testGetRangeAggregation",
      "RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "GetSettingsIntegrationTest#testBasicFlow",
      "GetSettingsIntegrationTest#testForNonexistentIndex",
      "StatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "StatsAggregationIntegrationTest#testGetStatsAggregation",
      "CardinalityAggregationIntegrationTest#testGetCardinalityAggregation",
      "CardinalityAggregationIntegrationTest#testBadAggregationQueryResult",
      "SignificantTermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "SignificantTermsAggregationIntegrationTest#testGetSignificantTermsAggregation",
      "MissingAggregationIntegrationTest#testBadAggregationQueryResult",
      "MissingAggregationIntegrationTest#testGetMissingAggregation",
      "PendingClusterTasksIntegrationTest#pendingClusterTasks",
      "MultiGetIntegrationTest#getMultipleDocsWhenSomeIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenAllIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getMultipleDocsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenSomeIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getWithPartialSource",
      "MultiGetIntegrationTest#getWithoutSource",
      "MultiGetIntegrationTest#getMultipleDocsWhenAllIndexedDocsAreRequested",
      "GetMappingIntegrationTest#testWithSingleIndex",
      "GetMappingIntegrationTest#testWithMultipleIndices",
      "GetMappingIntegrationTest#testWithoutParameters",
      "UpdateIntegrationTest#scriptedUpdateWithValidParameters",
      "UpdateIntegrationTest#partialDocUpdateWithInvalidVersion",
      "UpdateIntegrationTest#partialDocUpdateWithValidVersion",
      "UpdateIntegrationTest#partialDocUpdateWithValidParameters",
      "ValueCountAggregationIntegrationTest#testBadAggregationQueryResult",
      "ValueCountAggregationIntegrationTest#testGetValueCountAggregation",
      "DateRangeAggregationIntegrationTest#testGetDateRangeAggregation",
      "DateRangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "DeleteStoredScriptIntegrationTest#delete_a_stored_script_for_Painless",
      "PutMappingIntegrationTest#testPutMappingWithDocumentMapperBuilder",
      "PutMappingIntegrationTest#testPutMapping",
      "SumAggregationIntegrationTest#testBadAggregationQueryResult",
      "SumAggregationIntegrationTest#testGetSumAggregation",
      "CreateStoredScriptIntegrationTest#createAStoredScript",
      "HistogramAggregationIntegrationTest#testGetHistogramAggregation",
      "HistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "ModifyAliasesIntegrationTest#testAddAliasForMultipleIndex",
      "ModifyAliasesIntegrationTest#testAddAlias",
      "ModifyAliasesIntegrationTest#testAddAliasWithRouting",
      "ModifyAliasesIntegrationTest#testAddAndRemoveAlias",
      "ModifyAliasesIntegrationTest#testRemoveAlias",
      "UpdateSettingsIntegrationTest#testWithEmptySource",
      "UpdateSettingsIntegrationTest#testBasicFlowForNonExistingIndex",
      "UpdateSettingsIntegrationTest#testWithNullSource",
      "UpdateSettingsIntegrationTest#testWithEmptyJsonSource",
      "UpdateSettingsIntegrationTest#testBasicFlowForTargetedIndex",
      "UpdateSettingsIntegrationTest#testBasicFlowForAllIndices",
      "IndicesExistsIntegrationTest#multiIndexNotExists",
      "IndicesExistsIntegrationTest#indexExists",
      "IndicesExistsIntegrationTest#indexNotExists",
      "IndicesExistsIntegrationTest#multiIndexExists",
      "ExplainIntegrationTest#explain",
      "DeleteIntegrationTest#deleteNonExistingDocument",
      "DeleteIntegrationTest#deleteDocumentAsynchronously",
      "DeleteIntegrationTest#deleteRealDocument",
      "HealthIntegrationTest#healthWaitForStatus",
      "HealthIntegrationTest#health",
      "HealthIntegrationTest#healthWaitForNoRelocatingShards",
      "HealthIntegrationTest#healthWithTimeout",
      "HealthIntegrationTest#healthOnlyLocal",
      "HealthIntegrationTest#healthWithIndex",
      "HealthIntegrationTest#healthLevelShards",
      "FiltersAggregationIntegrationTest#testGetFiltersAggregation",
      "FiltersAggregationIntegrationTest#testGetAnonymousFiltersAggregation",
      "MinAggregationIntegrationTest#testGetMinAggregation",
      "MinAggregationIntegrationTest#testBadAggregationQueryResult",
      "PercentileRanksAggregationIntegrationTest#testGetPercentileRanksAggregation",
      "PercentileRanksAggregationIntegrationTest#testBadAggregationQueryResult",
      "OpenIndexIntegrationTest#testOpen",
      "RolloverIntegrationTest#testRollover",
      "StatsIntegrationTest#clusterStats",
      "StatsIntegrationTest#clusterStatsWithSpecificNodes",
      "TermsAggregationIntegrationTest#testGetTermsAggregation",
      "TermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "SortIntegrationTest#searchWithMultiIndexSortFieldUnmapped",
      "SortIntegrationTest#searchWithSimpleFieldSort",
      "SortIntegrationTest#searchWithCustomSort",
      "StatsIntegrationTest#testDefaultStats",
      "StatsIntegrationTest#testStatsWithOptions",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreadsWithCustomInterval",
      "NodesHotThreadsIntegrationTest#allNodesHotThreads",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreads",
      "FilterAggregationIntegrationTest#testGetFilterAggregation",
      "NodesStatsIntegrationTest#nodesStatsWithIndices",
      "NodesStatsIntegrationTest#nodesStatsAll",
      "NodesStatsIntegrationTest#nodesStats",
      "NodesStatsIntegrationTest#nodesStatsWithIndicesAndJvm",
      "RefreshIntegrationTest#testFlushAll",
      "RefreshIntegrationTest#testFlushSpecificIndices",
      "PercentilesAggregationIntegrationTest#testGetPercentilesAggregation",
      "PercentilesAggregationIntegrationTest#testBadAggregationQueryResult",
      "SearchTemplateIntegrationTest#searchTemplateInlineScriptWithSort",
      "SearchTemplateIntegrationTest#searchTemplateIdScriptWithSort",
      "SearchTemplateIntegrationTest#searchTemplateInlineScript",
      "SearchTemplateIntegrationTest#searchWithValidQuery",
      "DateHistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "DateHistogramAggregationIntegrationTest#testGetDateHistogramAggregation",
      "AvgAggregationIntegrationTest#testGetAvgAggregation",
      "AvgAggregationIntegrationTest#testBadAggregationQueryResult",
      "GeoDistanceAggregationTest#testBadAggregationQueryResult",
      "GeoDistanceAggregationTest#testGetGeoDistanceAggregationWithProperName",
      "BulkIntegrationTest#bulkOperationWithIndexWithParam",
      "BulkIntegrationTest#bulkOperationWithMultipleIndex",
      "BulkIntegrationTest#bulkOperationWithIndexJsonSource",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingWhitespace",
      "BulkIntegrationTest#bulkOperationWithSingleDelete",
      "BulkIntegrationTest#bulkOperationWithIndexCreateOpType",
      "BulkIntegrationTest#bulkOperationWithIndexAndUpdate",
      "BulkIntegrationTest#bulkOperationWithSourceList",
      "BulkIntegrationTest#bulkOperationWithMultipleIndexAndDelete",
      "BulkIntegrationTest#bulkOperationWithIndex",
      "BulkIntegrationTest#bulkOperationWithMultipleDelete",
      "BulkIntegrationTest#bulkOperationWithDefaultIndexAndDefaultType",
      "BulkIntegrationTest#bulkOperationWithCustomGson",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingLineBreak",
      "CountIntegrationTest#countWithMultipleIndices",
      "CountIntegrationTest#countWithValidTermQueryOnSingleIndex",
      "CountIntegrationTest#countWithValidTermQueryOnAllIndices",
      "GeoHashGridAggregationIntegrationTest#testGetGeoDistanceAggregationWithProperName",
      "GeoHashGridAggregationIntegrationTest#testBadAggregationQueryResult",
      "AliasExistsIntegrationTest#testAliasesExists",
      "AliasExistsIntegrationTest#testAliasDoesNotExist",
      "AliasExistsIntegrationTest#testAliasesExistsForMultipleIndices",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAliasAndIndex",
      "AliasExistsIntegrationTest#testAliasAndIndexDoesNotExist",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAlias",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificIndex",
      "AliasExistsIntegrationTest#testIndexDoesNotExist",
      "DeleteIndexIntegrationTest#deleteNonExistingIndex",
      "DeleteIndexIntegrationTest#deleteIndex",
      "TypeExistIntegrationTest#indexTypeExists",
      "TypeExistIntegrationTest#indexTypeNotExists",
      "ValidateIntegrationTest#validateQueryWithIndexAndType",
      "ValidateIntegrationTest#validateQueryWithIndex",
      "ReindexIntegrationTest#documentShouldBeTransferredWithQuery",
      "ReindexIntegrationTest#testWithScriptString",
      "ReindexIntegrationTest#testReindex",
      "ReindexIntegrationTest#documentShouldNotBeTransferredWithQuery",
      "ExtendedStatsAggregationIntegrationTest#testGetExtendedStatsAggregation",
      "ExtendedStatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "GetAliasesIntegrationTest#testGetAliasesForSpecificIndex",
      "GetAliasesIntegrationTest#testGetAliasesForMultipleSpecificIndices",
      "GetAliasesIntegrationTest#testGetAliases",
      "FieldCapabilitiesIntegrationTest#testFieldStats",
      "StateIntegrationTest#clusterState",
      "StateIntegrationTest#clusterStateWithMetadata",
      "ScriptedMetricAggregationIntegrationTest#testGetScriptedMetricAggregation",
      "ScriptedMetricAggregationIntegrationTest#testBadAggregationQueryResult",
      "UpdateByQueryIntegrationTest#update",
      "MaxAggregationIntegrationTest#testGetMaxAggregation",
      "MaxAggregationIntegrationTest#testBadAggregationQueryResult",
      "GetIntegrationTest#getAsClass",
      "GetIntegrationTest#get",
      "GetIntegrationTest#getWithType",
      "GetIntegrationTest#getAsynchronously",
      "GetIntegrationTest#getWithoutType",
      "GetIntegrationTest#getWithSpecialCharacterInDocId",
      "CreateIndexIntegrationTest#createIndexWithDefaultSettings",
      "CreateIndexIntegrationTest#createIndexWithMapSettings",
      "CreateIndexIntegrationTest#createIndexWithSettingsMapAndMappingsString",
      "AnalyzeIntegrationTest#testWithAnalyzer",
      "AnalyzeIntegrationTest#testWithAnalyzerWithTextFormat",
      "AnalyzeIntegrationTest#testWithCustomTransientAnalyzer",
      "PingIntegrationTest#simplePing",
      "TaskInformationIntegrationTest#shouldReturnTaskInformation",
      "SearchShardsIntegrationTest#testBasicFlow",
      "UpdateSettingsIntegrationTest#transientSettingShouldBeUpdated",
      "UpdateSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "GeoBoundsAggregationIntegrationTest#testBadAggregationQueryResult",
      "GeoBoundsAggregationIntegrationTest#testGeoBoundsAggregation",
      "RerouteIntegrationTest#move",
      "GetStoredScriptIntegrationTest#createStoredScript",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndWithoutInfo",
      "NodesInfoIntegrationTest#nodesInfoWithNodeWithoutInfo",
      "NodesInfoIntegrationTest#nodesInfoWithNodeAndWithInfo",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndMultipleInfo",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeWithInfo",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeAndInfo",
      "SearchIntegrationTest#searchInnerHits",
      "SearchIntegrationTest#searchWithMultipleHits",
      "SearchIntegrationTest#searchWithPercolator",
      "SearchIntegrationTest#testWithEncodedURI",
      "SearchIntegrationTest#searchWithValidQueryAndExplain",
      "SearchIntegrationTest#searchAndGetFirstHitWithoutSource",
      "SearchIntegrationTest#searchWithQueryBuilder",
      "SearchIntegrationTest#searchWithSourceFilterByQuery",
      "SearchIntegrationTest#searchWithNoHits",
      "SearchIntegrationTest#searchWithValidTermQuery",
      "SearchIntegrationTest#searchAndGetFirstHitWithSource",
      "SearchIntegrationTest#searchWithSort",
      "SearchIntegrationTest#suggestQuery",
      "SearchIntegrationTest#searchWithSourceFilterByParam",
      "SearchIntegrationTest#searchIndexWithTypeWithNullJestId",
      "SearchIntegrationTest#searchWithValidQuery",
      "IndexIntegrationTest#indexDocumentWithValidParametersAndWithoutSettings",
      "IndexIntegrationTest#automaticIdGeneration",
      "IndexIntegrationTest#indexDocumentWithDateField",
      "PutTemplateIntegrationTest#testPutTemplate"
    ]
  },
  "org.elasticsearch.plugin:lang-mustache-client": {
    "Jest": [
      "Ipv4RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeAggregation",
      "Ipv4RangeAggregationIntegrationTest#testGetIpv4RangRangeWithCIDRMaskAggregation",
      "FlushIntegrationTest#testFlushWithForce",
      "FlushIntegrationTest#testFlushWithWaitifOngoing",
      "FlushIntegrationTest#testFlushSpecificIndices",
      "FlushIntegrationTest#testFlushAll",
      "CatIntegrationTest#shouldChangeOrderOfColumnsByspecifyingParameters",
      "CatIntegrationTest#catAllShards",
      "CatIntegrationTest#shouldReturnEmptyPlainTextForIndices",
      "CatIntegrationTest#catNodes",
      "CatIntegrationTest#catShardsSingleIndex",
      "CatIntegrationTest#shouldFilterResultsToASingleIndex",
      "CatIntegrationTest#shouldProperlyMapSingleResult",
      "CatIntegrationTest#shouldDisplayAliasForSingleResult",
      "CatIntegrationTest#shouldDisplayRecoveryForSingleResult",
      "GetSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "CloseIndexIntegrationTest#testClose",
      "SearchScrollIntegrationTest#clearScrollAll",
      "SearchScrollIntegrationTest#searchWithValidQuery",
      "MultiSearchIntegrationTest#multipleSearchRequestsWithOneFaulty",
      "MultiSearchIntegrationTest#multipleSearchRequests",
      "RangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "RangeAggregationIntegrationTest#testGetRangeAggregation",
      "GetSettingsIntegrationTest#testBasicFlow",
      "GetSettingsIntegrationTest#testForNonexistentIndex",
      "StatsAggregationIntegrationTest#testGetStatsAggregation",
      "StatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "CardinalityAggregationIntegrationTest#testGetCardinalityAggregation",
      "CardinalityAggregationIntegrationTest#testBadAggregationQueryResult",
      "SignificantTermsAggregationIntegrationTest#testGetSignificantTermsAggregation",
      "SignificantTermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "MissingAggregationIntegrationTest#testGetMissingAggregation",
      "MissingAggregationIntegrationTest#testBadAggregationQueryResult",
      "PendingClusterTasksIntegrationTest#pendingClusterTasks",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenAllIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getMultipleDocsWhenSomeIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getDocumentWithMultipleIdsWhenSomeIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getWithoutSource",
      "MultiGetIntegrationTest#getMultipleDocsWhenAllIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getMultipleDocsWhenNonIndexedDocsAreRequested",
      "MultiGetIntegrationTest#getWithPartialSource",
      "GetMappingIntegrationTest#testWithSingleIndex",
      "GetMappingIntegrationTest#testWithoutParameters",
      "GetMappingIntegrationTest#testWithMultipleIndices",
      "UpdateIntegrationTest#partialDocUpdateWithValidParameters",
      "UpdateIntegrationTest#partialDocUpdateWithInvalidVersion",
      "UpdateIntegrationTest#partialDocUpdateWithValidVersion",
      "UpdateIntegrationTest#scriptedUpdateWithValidParameters",
      "ValueCountAggregationIntegrationTest#testGetValueCountAggregation",
      "ValueCountAggregationIntegrationTest#testBadAggregationQueryResult",
      "DateRangeAggregationIntegrationTest#testGetDateRangeAggregation",
      "DateRangeAggregationIntegrationTest#testBadAggregationQueryResult",
      "DeleteStoredScriptIntegrationTest#delete_a_stored_script_for_Painless",
      "PutMappingIntegrationTest#testPutMappingWithDocumentMapperBuilder",
      "PutMappingIntegrationTest#testPutMapping",
      "SumAggregationIntegrationTest#testGetSumAggregation",
      "SumAggregationIntegrationTest#testBadAggregationQueryResult",
      "CreateStoredScriptIntegrationTest#createAStoredScript",
      "HistogramAggregationIntegrationTest#testGetHistogramAggregation",
      "HistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "ModifyAliasesIntegrationTest#testAddAndRemoveAlias",
      "ModifyAliasesIntegrationTest#testAddAliasForMultipleIndex",
      "ModifyAliasesIntegrationTest#testAddAlias",
      "ModifyAliasesIntegrationTest#testAddAliasWithRouting",
      "ModifyAliasesIntegrationTest#testRemoveAlias",
      "UpdateSettingsIntegrationTest#testBasicFlowForAllIndices",
      "UpdateSettingsIntegrationTest#testWithNullSource",
      "UpdateSettingsIntegrationTest#testBasicFlowForNonExistingIndex",
      "UpdateSettingsIntegrationTest#testWithEmptyJsonSource",
      "UpdateSettingsIntegrationTest#testBasicFlowForTargetedIndex",
      "UpdateSettingsIntegrationTest#testWithEmptySource",
      "IndicesExistsIntegrationTest#indexExists",
      "IndicesExistsIntegrationTest#indexNotExists",
      "IndicesExistsIntegrationTest#multiIndexNotExists",
      "IndicesExistsIntegrationTest#multiIndexExists",
      "ExplainIntegrationTest#explain",
      "DeleteIntegrationTest#deleteRealDocument",
      "DeleteIntegrationTest#deleteDocumentAsynchronously",
      "DeleteIntegrationTest#deleteNonExistingDocument",
      "HealthIntegrationTest#healthWithIndex",
      "HealthIntegrationTest#health",
      "HealthIntegrationTest#healthLevelShards",
      "HealthIntegrationTest#healthOnlyLocal",
      "HealthIntegrationTest#healthWithTimeout",
      "HealthIntegrationTest#healthWaitForStatus",
      "HealthIntegrationTest#healthWaitForNoRelocatingShards",
      "FiltersAggregationIntegrationTest#testGetAnonymousFiltersAggregation",
      "FiltersAggregationIntegrationTest#testGetFiltersAggregation",
      "MinAggregationIntegrationTest#testGetMinAggregation",
      "MinAggregationIntegrationTest#testBadAggregationQueryResult",
      "PercentileRanksAggregationIntegrationTest#testGetPercentileRanksAggregation",
      "PercentileRanksAggregationIntegrationTest#testBadAggregationQueryResult",
      "OpenIndexIntegrationTest#testOpen",
      "RolloverIntegrationTest#testRollover",
      "StatsIntegrationTest#clusterStats",
      "StatsIntegrationTest#clusterStatsWithSpecificNodes",
      "TermsAggregationIntegrationTest#testGetTermsAggregation",
      "TermsAggregationIntegrationTest#testBadAggregationQueryResult",
      "SortIntegrationTest#searchWithCustomSort",
      "SortIntegrationTest#searchWithMultiIndexSortFieldUnmapped",
      "SortIntegrationTest#searchWithSimpleFieldSort",
      "StatsIntegrationTest#testDefaultStats",
      "StatsIntegrationTest#testStatsWithOptions",
      "NodesHotThreadsIntegrationTest#allNodesHotThreads",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreadsWithCustomInterval",
      "NodesHotThreadsIntegrationTest#singleNodeHotThreads",
      "FilterAggregationIntegrationTest#testGetFilterAggregation",
      "NodesStatsIntegrationTest#nodesStatsAll",
      "NodesStatsIntegrationTest#nodesStatsWithIndicesAndJvm",
      "NodesStatsIntegrationTest#nodesStatsWithIndices",
      "NodesStatsIntegrationTest#nodesStats",
      "RefreshIntegrationTest#testFlushAll",
      "RefreshIntegrationTest#testFlushSpecificIndices",
      "PercentilesAggregationIntegrationTest#testBadAggregationQueryResult",
      "PercentilesAggregationIntegrationTest#testGetPercentilesAggregation",
      "SearchTemplateIntegrationTest#searchTemplateInlineScriptWithSort",
      "SearchTemplateIntegrationTest#searchTemplateIdScriptWithSort",
      "SearchTemplateIntegrationTest#searchTemplateInlineScript",
      "SearchTemplateIntegrationTest#searchWithValidQuery",
      "DateHistogramAggregationIntegrationTest#testGetDateHistogramAggregation",
      "DateHistogramAggregationIntegrationTest#testBadAggregationQueryResult",
      "AvgAggregationIntegrationTest#testBadAggregationQueryResult",
      "AvgAggregationIntegrationTest#testGetAvgAggregation",
      "GeoDistanceAggregationTest#testBadAggregationQueryResult",
      "GeoDistanceAggregationTest#testGetGeoDistanceAggregationWithProperName",
      "BulkIntegrationTest#bulkOperationWithMultipleDelete",
      "BulkIntegrationTest#bulkOperationWithIndexCreateOpType",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingWhitespace",
      "BulkIntegrationTest#bulkOperationWithIndex",
      "BulkIntegrationTest#bulkOperationWithIndexWithParam",
      "BulkIntegrationTest#bulkOperationWithSingleDelete",
      "BulkIntegrationTest#bulkOperationWithMultipleIndexAndDelete",
      "BulkIntegrationTest#bulkOperationWithSourceList",
      "BulkIntegrationTest#bulkOperationWithIndexAndUpdate",
      "BulkIntegrationTest#bulkOperationWithIndexJsonSource",
      "BulkIntegrationTest#bulkOperationWithIndexWithSourceIncludingLineBreak",
      "BulkIntegrationTest#bulkOperationWithMultipleIndex",
      "BulkIntegrationTest#bulkOperationWithCustomGson",
      "BulkIntegrationTest#bulkOperationWithDefaultIndexAndDefaultType",
      "CountIntegrationTest#countWithMultipleIndices",
      "CountIntegrationTest#countWithValidTermQueryOnSingleIndex",
      "CountIntegrationTest#countWithValidTermQueryOnAllIndices",
      "GeoHashGridAggregationIntegrationTest#testGetGeoDistanceAggregationWithProperName",
      "GeoHashGridAggregationIntegrationTest#testBadAggregationQueryResult",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAliasAndIndex",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificIndex",
      "AliasExistsIntegrationTest#testAliasesExistsForSpecificAlias",
      "AliasExistsIntegrationTest#testAliasAndIndexDoesNotExist",
      "AliasExistsIntegrationTest#testAliasesExists",
      "AliasExistsIntegrationTest#testIndexDoesNotExist",
      "AliasExistsIntegrationTest#testAliasDoesNotExist",
      "AliasExistsIntegrationTest#testAliasesExistsForMultipleIndices",
      "DeleteIndexIntegrationTest#deleteIndex",
      "DeleteIndexIntegrationTest#deleteNonExistingIndex",
      "TypeExistIntegrationTest#indexTypeExists",
      "TypeExistIntegrationTest#indexTypeNotExists",
      "ValidateIntegrationTest#validateQueryWithIndexAndType",
      "ValidateIntegrationTest#validateQueryWithIndex",
      "ReindexIntegrationTest#documentShouldBeTransferredWithQuery",
      "ReindexIntegrationTest#testWithScriptString",
      "ReindexIntegrationTest#documentShouldNotBeTransferredWithQuery",
      "ReindexIntegrationTest#testReindex",
      "ExtendedStatsAggregationIntegrationTest#testBadAggregationQueryResult",
      "ExtendedStatsAggregationIntegrationTest#testGetExtendedStatsAggregation",
      "GetAliasesIntegrationTest#testGetAliasesForSpecificIndex",
      "GetAliasesIntegrationTest#testGetAliasesForMultipleSpecificIndices",
      "GetAliasesIntegrationTest#testGetAliases",
      "FieldCapabilitiesIntegrationTest#testFieldStats",
      "StateIntegrationTest#clusterState",
      "StateIntegrationTest#clusterStateWithMetadata",
      "ScriptedMetricAggregationIntegrationTest#testGetScriptedMetricAggregation",
      "ScriptedMetricAggregationIntegrationTest#testBadAggregationQueryResult",
      "UpdateByQueryIntegrationTest#update",
      "MaxAggregationIntegrationTest#testGetMaxAggregation",
      "MaxAggregationIntegrationTest#testBadAggregationQueryResult",
      "GetIntegrationTest#getAsynchronously",
      "GetIntegrationTest#get",
      "GetIntegrationTest#getWithSpecialCharacterInDocId",
      "GetIntegrationTest#getWithType",
      "GetIntegrationTest#getWithoutType",
      "GetIntegrationTest#getAsClass",
      "CreateIndexIntegrationTest#createIndexWithSettingsMapAndMappingsString",
      "CreateIndexIntegrationTest#createIndexWithDefaultSettings",
      "CreateIndexIntegrationTest#createIndexWithMapSettings",
      "AnalyzeIntegrationTest#testWithAnalyzerWithTextFormat",
      "AnalyzeIntegrationTest#testWithAnalyzer",
      "AnalyzeIntegrationTest#testWithCustomTransientAnalyzer",
      "PingIntegrationTest#simplePing",
      "TaskInformationIntegrationTest#shouldReturnTaskInformation",
      "SearchShardsIntegrationTest#testBasicFlow",
      "UpdateSettingsIntegrationTest#transientSettingShouldBeUpdated",
      "UpdateSettingsIntegrationTest#nullSourceShouldFailOnServer",
      "GeoBoundsAggregationIntegrationTest#testBadAggregationQueryResult",
      "GeoBoundsAggregationIntegrationTest#testGeoBoundsAggregation",
      "RerouteIntegrationTest#move",
      "GetStoredScriptIntegrationTest#createStoredScript",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeWithInfo",
      "NodesInfoIntegrationTest#nodesInfoWithoutNodeAndInfo",
      "NodesInfoIntegrationTest#nodesInfoWithNodeWithoutInfo",
      "NodesInfoIntegrationTest#nodesInfoWithNodeAndWithInfo",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndMultipleInfo",
      "NodesInfoIntegrationTest#nodesInfoWithMultipleNodeAndWithoutInfo",
      "SearchIntegrationTest#searchIndexWithTypeWithNullJestId",
      "SearchIntegrationTest#searchWithPercolator",
      "SearchIntegrationTest#suggestQuery",
      "SearchIntegrationTest#searchAndGetFirstHitWithSource",
      "SearchIntegrationTest#testWithEncodedURI",
      "SearchIntegrationTest#searchWithQueryBuilder",
      "SearchIntegrationTest#searchWithSourceFilterByParam",
      "SearchIntegrationTest#searchWithNoHits",
      "SearchIntegrationTest#searchWithValidQueryAndExplain",
      "SearchIntegrationTest#searchWithMultipleHits",
      "SearchIntegrationTest#searchWithSort",
      "SearchIntegrationTest#searchWithValidQuery",
      "SearchIntegrationTest#searchInnerHits",
      "SearchIntegrationTest#searchAndGetFirstHitWithoutSource",
      "SearchIntegrationTest#searchWithValidTermQuery",
      "SearchIntegrationTest#searchWithSourceFilterByQuery",
      "IndexIntegrationTest#automaticIdGeneration",
      "IndexIntegrationTest#indexDocumentWithValidParametersAndWithoutSettings",
      "IndexIntegrationTest#indexDocumentWithDateField",
      "PutTemplateIntegrationTest#testPutTemplate"
    ]
  },
  "com.sleepycat:je": {
    "heritrix3": [
      "CookieStoreTest#testConcurrentLoadNoDomainCookieLimitBreach",
      "CookieStoreTest#testConcurrentLoad",
      "CookieStoreTest#testBasics",
      "CookieStoreTest#testSimpleReplace",
      "ContentDigestHistoryTest#testBasics",
      "ContentDigestHistoryTest#testWarcDedupe"
    ]
  },
  "org.mortbay.jetty:jetty-util": {
    "heritrix3": [
      "CookieFetchHTTPIntegrationTest#testExplicitDomain",
      "CookieFetchHTTPIntegrationTest#testImplicitDomain",
      "CookieFetchHTTPIntegrationTest#testExplicitDomainWithLeadingDot",
      "CookieFetchHTTPIntegrationTest#testBasics",
      "CookieFetchHTTPIntegrationTest#testRejectDomain",
      "CookieFetchHTTPIntegrationTest#testIPAddress",
      "CookieFetchHTTPIntegrationTest#testSubdomainParentDomain"
    ]
  },
  "com.fasterxml.jackson.module:jackson-module-guice": {
    "jmxtrans": [
      "GraphiteWriterFactoryTest#timedSocketExpirationIsUsedWhenConfigured",
      "GraphiteWriterFactoryTest#socketExpirationIsUsedByDefault",
      "GraphiteWriterFactoryTest#use_tcp_protocol_by_default",
      "GraphiteWriterFactoryTest#canParseConfigurationFileWithCustomParameters",
      "GraphiteWriterFactoryTest#writer_using_udp_protocol",
      "ProcessConfigUtilsTest#loadingFromSimpleYamlFile",
      "ProcessConfigUtilsTest#loadingFromJsonFileWithVariables",
      "ProcessConfigUtilsTest#loadingFromSimpleJsonFile",
      "ProcessConfigUtilsTest#loadingFromYamlFileWithVariables",
      "ConfigurationParserTest#mixJsonAndYamlFormats",
      "ConfigurationParserTest#failParsingOnErrorIfRequested",
      "ConfigurationParserTest#continueParsingOnErrorIfRequested",
      "InfluxDbWriterTests#loadingFromFile"
    ]
  },
  "io.github.openfeign:feign-core": {
    "servicecomb-pack": [
      "SagaLoadBalancedSenderTest#stopSendingWhenClusterIsDown"
    ]
  },
  "com.typesafe.akka:akka-actor_2.12": {
    "servicecomb-pack": [
      "TransactionInterceptionTest#passesOmegaContextAmongActors"
    ]
  },
  "io.grpc:grpc-protobuf": {
    "servicecomb-pack": [
      "GrpcTccClientMessageSenderTest#serviceOnEndParticipateTest",
      "GrpcTccClientMessageSenderTest#serviceOnTransactionEndTest",
      "GrpcTccClientMessageSenderTest#serviceOnStartParticipateTest",
      "GrpcTccClientMessageSenderTest#serviceOnConnectedTest",
      "GrpcTccClientMessageSenderTest#serviceOnTransactionStartTest",
      "GrpcTccClientMessageSenderTest#serviceOnCoordinateTest",
      "GrpcTccClientMessageSenderTest#serviceOnDisconnectedTest",
      "AlphaIntegrationWithRandomPortTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#persistsEvent",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithRandomPortTest#closeStreamOfDisconnectedClientOnly",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateRetryingEvents",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithRandomPortTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithRandomPortTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithRandomPortTest#closeStreamOnDisconnected",
      "AlphaIntegrationWithRandomPortTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutSagaStartedEvent",
      "SagaLoadBalancedSenderTest#stopSendingOnInterruption",
      "SagaLoadBalancedSenderTest#blowsUpWhenServerIsInterrupted",
      "SagaLoadBalancedSenderTest#blowsUpWhenNoServerAddressProvided",
      "SagaLoadBalancedSenderTest#considerFasterServerFirst",
      "SagaLoadBalancedSenderTest#swallowException_UntilAllSendersConnected",
      "SagaLoadBalancedSenderTest#resendToAnotherServerOnFailure",
      "SagaLoadBalancedSenderTest#stopSendingWhenClusterIsDown",
      "SagaLoadBalancedSenderTest#resetLatencyOnReconnection",
      "SagaLoadBalancedSenderTest#swallowException_UntilAllSendersDisconnected",
      "SagaLoadBalancedSenderTest#broadcastConnectionAndDisconnection",
      "SagaLoadBalancedSenderTest#forwardSendResult",
      "TccLoadBalanceSenderTest#participateFailedThenAbort",
      "TccLoadBalanceSenderTest#participateFailedThenRetry",
      "TccLoadBalanceSenderTest#participateInterruptedFailed",
      "TccLoadBalanceSenderTest#failFastWhenAllServerWasDown",
      "TccLoadBalanceSenderTest#participatedSucceed",
      "TccLoadBalanceSenderTest#broadcastConnectionAndDisconnection",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithoutSsl",
      "LoadBalanceContextBuilderTest#buildSagaLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithSsl",
      "LoadBalanceContextBuilderTest#buildTccLoadBalanceContextWithoutSsl",
      "SagaLoadBalanceSenderWithTLSTest#considerFasterServerFirst",
      "SagaLoadBalanceSenderWithTLSTest#broadcastConnectionAndDisconnection"
    ]
  },
  "org.apache.servicecomb.pack:alpha-core": {
    "servicecomb-pack": [
      "AlphaIntegrationWithRandomPortTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithRandomPortTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithRandomPortTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithRandomPortTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithRandomPortTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithRandomPortTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithRandomPortTest#removeCallbackOnClientDown",
      "AlphaIntegrationTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationTest#getCompensateCommandOnFailure",
      "AlphaIntegrationTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationTest#removeCallbackOnClientDown",
      "AlphaIntegrationWithSSLTest#doNotStartSubTxOnFailure",
      "AlphaIntegrationWithSSLTest#abortTimeoutTxStartedEvent",
      "AlphaIntegrationWithSSLTest#compensateOnlyFailedGlobalTransaction",
      "AlphaIntegrationWithSSLTest#getCompensateCommandOnFailure",
      "AlphaIntegrationWithSSLTest#sagaEndedEventIsAlwaysInTheEnd",
      "AlphaIntegrationWithSSLTest#compensateOnlyCompletedTransactions",
      "AlphaIntegrationWithSSLTest#compensateImmediatelyWhenGlobalTxAlreadyAborted",
      "AlphaIntegrationWithSSLTest#doNotCompensateDuplicateTxOnFailure",
      "AlphaIntegrationWithSSLTest#removeCallbackOnClientDown"
    ]
  },
  "org.apache.servicecomb.pack:omega-transaction": {
    "servicecomb-pack": [
      "TransactionInterceptionTest#assertCompensationMethodTransactionAware",
      "TransactionInterceptionTest#retryReachesMaximumThenThrowsException",
      "TransactionInterceptionTest#passesOmegaContextInThreadPool",
      "TransactionInterceptionTest#compensateOnTransactionException",
      "TransactionInterceptionTest#passesOmegaContextThroughReactiveX",
      "TransactionInterceptionTest#passesOmegaContextThroughDifferentThreads",
      "TransactionInterceptionTest#passesOmegaContextAmongActors",
      "TransactionInterceptionTest#retryTillSuccess",
      "TransactionInterceptionTest#sendsAbortEvent_OnSubTransactionFailure",
      "TransactionInterceptionTest#sendsUserToRemote_AroundTransaction",
      "CompensableAnnotationCheckingTest#blowsUpWhenAnnotationOnWrongType",
      "CompensableAnnotationCheckingTest#blowsUpWhenCompensableMethodIsNotFound",
      "CompensableAnnotationCheckingTest#blowsUpWhenCompensateRetriesIsBelowNegativeOne",
      "TccInterceptorTest#tccWorkflowSucceed",
      "TccInterceptorTest#tccWorkflowFailed"
    ]
  },
  "com.google.zxing:core": {
    "QRGen": [
      "QRCodeTest#shouldGetFileFromTextWithDefaults",
      "QRCodeTest#shouldCreateBitmapWithDefaults",
      "QRCodeTest#shouldGetFileWithNameFromTextWithImageTypeOverrides",
      "QRCodeTest#shouldGetFileAsBitmapWithDefaults",
      "QRCodeTest#shouldGetFileWithNameFromTextWithDefaults",
      "QRCodeTest#shouldGetSTREAMFromTextWithDefaults",
      "QRCodeTest#shouldWriteToSuppliedStream",
      "QRCodeTest#shouldBeAbleToOverrideDimensionsToFile",
      "QRCodeTest#shouldBeAbleToOverrideDimensionsToFileWithName",
      "QRCodeTest#shouldBeAbleToSupplyEncodingHint",
      "QRCodeTest#shouldHandleLargeString",
      "QRCodeTest#shouldGetStreamFromText",
      "QRCodeTest#shouldBeAbleToSupplyErrorCorrectionHint",
      "QRCodeTest#shouldBeAbleToSupplyAnyHint",
      "QRCodeTest#shouldGetFileFromVCardWithDefaults"
    ]
  },
  "com.netflix.spectator:spectator-reg-servo": {
    "servicecomb-java-chassis": [
      "TestThreadPoolMetersInitializer#init"
    ]
  },
  "org.apache.servicecomb:swagger-generator-springmvc": {
    "servicecomb-java-chassis": [
      "TestSwaggerToProtoGenerator#convert"
    ]
  },
  "io.vertx:vertx-core": {
    "servicecomb-java-chassis": [
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent6",
      "TestAbstractTransport#testMyAbstractTransport",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaNormalNotEncode",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceNewSC",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceOldSC",
      "TestAbstractTransport#testMyAbstractTransportException",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaAlreadyHaveQuery",
      "TestEdgeInvocation#locateOperation",
      "TestEdgeInvocation#createInvocation",
      "TestEdgeInvocation#setContext",
      "TestEdgeInvocation#findMicroserviceVersionMetaNullLatestVersion",
      "TestEdgeInvocation#chooseVersionRule_default",
      "TestEdgeInvocation#findMicroserviceVersionMetaNormal",
      "TestEdgeInvocation#chooseVersionRule_set",
      "TestEdgeInvocation#edgeInvoke",
      "TestEdgeInvocation#testSetRoutingContext",
      "AbortFaultTest#injectFaultError",
      "AbortFaultTest#injectFaultNoPercentageConfig",
      "AbortFaultTest#injectFaultNoErrorCodeConfig",
      "AbortFaultTest#injectFaultNoError",
      "TestTransportVertxFactory#getTransportVertx",
      "TestServletRestTransport#testInitNotPublish",
      "TestServletRestTransport#testCanInitNullAddress",
      "TestServletRestTransport#testGetOrder",
      "TestServletRestTransport#testCanInitListened",
      "TestServletRestTransport#testInitPublishWithUrlPrefix",
      "TestServletRestTransport#testCanInitNotListened",
      "TestServletRestTransport#testInitPublishNoUrlPrefix",
      "TestSCBEngine#test",
      "DelayFaultTest#injectFaultNoPercentageConfig",
      "DelayFaultTest#injectFaultNoDelayMsConfig",
      "DelayFaultTest#injectFaultNotDelay",
      "DelayFaultTest#injectFaultVertxDelay",
      "TestInspectorImpl#urlPrefix"
    ]
  },
  "io.protostuff:protostuff-runtime": {
    "servicecomb-java-chassis": [
      "TestProtobufSchemaUtils#wrapPrimitive",
      "TestProtobufSchemaUtils#testMap",
      "TestProtobufSchemaUtils#wrapArray",
      "TestProtobufSchemaUtils#notWrap",
      "TestHighwayCodec#testDecodeResponse",
      "TestProtobufCompatibleUtils#test",
      "TestHighwayServerInvoke#test",
      "TestHighwayServerInvoke#testFlowControlQps",
      "TestHighwayServerConnection#testSetParameterNormal",
      "TestHighwayServerConnection#testSetParameterError",
      "TestHighwayClient#testCreateLogin"
    ]
  },
  "io.netty:netty-resolver": {
    "servicecomb-java-chassis": [
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent6",
      "TestVertxMetersInitializer#init",
      "TestAbstractTransport#testMyAbstractTransport",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaNormalNotEncode",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceNewSC",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaChineseSpaceOldSC",
      "TestAbstractTransport#testMyAbstractTransportException",
      "TestAbstractTransport#testSetListenAddressWithoutSchemaAlreadyHaveQuery",
      "TestEdgeInvocation#locateOperation",
      "TestEdgeInvocation#setContext",
      "TestEdgeInvocation#chooseVersionRule_default",
      "TestEdgeInvocation#chooseVersionRule_set",
      "TestEdgeInvocation#testSetRoutingContext",
      "TestVertxRestTransport#testCanInitNullAddress",
      "TestVertxRestTransport#testGetOrder",
      "TestVertxRestTransport#testCanInitListened",
      "TestVertxRestTransport#testInit",
      "TestVertxRestTransport#testSendException",
      "TestVertxRestTransport#testGetName",
      "TestVertxRestTransport#testCanInitNotListened",
      "TestVertxRestTransport#testGetInstance",
      "AbortFaultTest#injectFaultError",
      "AbortFaultTest#injectFaultNoPercentageConfig",
      "AbortFaultTest#injectFaultNoErrorCodeConfig",
      "AbortFaultTest#injectFaultNoError",
      "TestVertxRestDispatcher#onRequest",
      "TestWebsocketClientPool#createHttpClientOptions_notHttp2",
      "TestWebsocketClientPool#createHttpClientOptions_http2",
      "TestTransportVertxFactory#getTransportVertx",
      "TestServletRestTransport#testInitNotPublish",
      "TestServletRestTransport#testCanInitNullAddress",
      "TestServletRestTransport#testGetOrder",
      "TestServletRestTransport#testCanInitListened",
      "TestServletRestTransport#testInitPublishWithUrlPrefix",
      "TestServletRestTransport#testCanInitNotListened",
      "TestServletRestTransport#testInitPublishNoUrlPrefix",
      "TestConfigCenterClient#testConnectServer",
      "TestURLMappedEdgeDispatcher#testConfigurations",
      "TestHighwayTransport#testInit",
      "TestHighwayTransport#testSendException",
      "TestHighwayTransport#testHighway",
      "TestHighwayTransport#testGetInstance",
      "TestSCBEngine#test",
      "DelayFaultTest#injectFaultNoPercentageConfig",
      "DelayFaultTest#injectFaultNoDelayMsConfig",
      "DelayFaultTest#injectFaultNotDelay",
      "DelayFaultTest#injectFaultVertxDelay",
      "TestInspectorImpl#urlPrefix"
    ]
  },
  "io.netty:netty-handler": {
    "servicecomb-java-chassis": [
      "TestVertxMetersInitializer#init",
      "TestConfigCenterClient#testConnectServer"
    ]
  },
  "io.swagger:swagger-core": {
    "servicecomb-java-chassis": [
      "TestRestTransportClient#testCreateHttpClientOptions",
      "TestRestTransportClient#testRestTransportClientHttp2",
      "TestRestTransportClient#init",
      "TestRestTransportClient#testRestTransportClientException",
      "TestRestTransportClient#testGetInstance",
      "TestRestClientInvocation#handleResponse_readStreamPart",
      "TestRestClientInvocation#createRequestPath_haveUrlPrefixNoPath",
      "TestRestClientInvocation#invoke",
      "TestRestClientInvocation#createRequestPath_haveUrlPrefixHavePath",
      "TestRestClientInvocation#createRequestPath_noUrlPrefixHavePath",
      "TestRestClientInvocation#handleResponse_responseException",
      "TestRestClientInvocation#handleResponse",
      "TestRestClientInvocation#createRequestPath_NoUrlPrefixNoPath",
      "TestRestClientInvocation#processResponseBody",
      "TestRestClientInvocation#invoke_endThrow",
      "TestRestClientInvocation#processResponseBody_throw",
      "TestRestClientInvocation#testSetCseContext",
      "TestRestClientInvocation#invoke_requestThrow",
      "TestRestClientInvocation#testSetCseContext_failed",
      "TestRestClientInvocation#createRequestPath_haveUrlPrefixHavePathAndStartWith",
      "TestFaultInjectHandler#testFaultInjectHandlerSchemaCfgSuccess",
      "TestFaultInjectHandler#testFaultInjectHandlerRestWithDefaultCfg",
      "TestFaultInjectHandler#testFaultInjectHandlerOperationCfgSuccess",
      "TestFaultInjectHandler#testFaultInjectHandlerHighwayWithDefaultCfg",
      "TestFaultInjectHandler#testFaultInjectHandlerServiceCfgSuccess",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent1",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent2",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent3",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent4",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent5",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeEvent6",
      "TestFaultInjectHandler#testFaultInjectHandlerConfigChangeGlobal",
      "TestRequestMeta#testGetOperationMeta",
      "TestRequestMeta#testGetPathParams",
      "TestRequestMeta#testGetReferenceConfig",
      "TestRequestMeta#testGetOperationQualifiedName",
      "TestRequestMeta#testGetSwaggerRestOperation",
      "TestCseClientHttpRequest#testNormal",
      "TestLoadBalanceHandler2#testIsolationEventWithEndpoint",
      "TestLoadBalanceHandler2#testZoneAwareAndIsolationFilterWorks",
      "TestLoadBalanceHandler2#testZoneAwareAndIsolationFilterWorksEmptyInstanceProtectionEnabled",
      "TestLoadBalanceHandler2#testConfigEndpoint",
      "TestConsumerBizkeeperHandler#testCreateBizkeeperCommand",
      "QpsControllerManagerTest#testMock",
      "TestEdgeInvocation#createInvocation",
      "TestInvoker#createInvokerMeta_schemaNotInContract",
      "TestInvoker#testConsumerInterfaceAsSchemaId",
      "TestInvoker#testFindSchemaByConsumerInterface",
      "TestInvoker#testNormalSchemaId",
      "TestHighwayCodec#testDecodeRequest",
      "TestHighwayCodec#testEncodeResponse",
      "TestHighwayCodec#testEncodeRequest",
      "TestHighwayCodec#testDecodeRequestTraceId",
      "TestHighwayCodec#testReadRequestHeader",
      "TestHighwayCodec#testDecodeResponse",
      "TestBizkeeperCommand#testConstructProvider",
      "TestBizkeeperCommand#testConstructConsumer",
      "TestBizkeeperCommand#testGetCacheKeyProvider",
      "TestBizkeeperCommand#testGetCacheKeyConsumer",
      "TestBizkeeperCommand#testGetCacheKeyWithContextInitializedProvider",
      "TestBizkeeperCommand#testGetCacheKeyWithContextInitializedConsumer",
      "TestBizkeeperCommand#testResumeWithFallbackProvider",
      "TestBizkeeperCommand#testResumeWithFallbackConsumer",
      "TestBizkeeperHandler#testHandleForceThrowException",
      "TestBizkeeperHandler#testHandleInError",
      "TestBizkeeperHandler#testHandleSuccess",
      "TestBizkeeperHandler#testHandleForceReturnnull",
      "TestBizkeeperHandler#testHandle",
      "TestBizkeeperHandler#testHandlNextException",
      "TestConfiguration#testConfiguration",
      "TestDefaultHttpClientFilter#extractResult_decodeError",
      "TestDefaultHttpClientFilter#testAfterReceiveResponseNormal",
      "TestDefaultHttpClientFilter#testAfterReceiveResponseNullProduceProcessor",
      "TestDefaultHttpClientFilter#extractResult_decodeError200",
      "TestHighwayServerInvoke#test",
      "TestHighwayServerInvoke#testFlowControlQps",
      "TestHighwayServerConnection#testRequestNormal",
      "TestProviderQpsFlowControlHandler#testQpsController",
      "TestProviderQpsFlowControlHandler#testHandleOnSourceMicroserviceNameIsNull",
      "TestProviderQpsFlowControlHandler#testGlobalQpsControl",
      "TestProviderQpsFlowControlHandler#testHandleOnSourceOnHandlerIndexIsGreaterThan0",
      "TestProviderQpsFlowControlHandler#testHandle",
      "TestProviderQpsFlowControlHandler#testHandleIsLimitNewRequestAsFalse",
      "TestHighwayClient#testHighwayClientSSL",
      "TestHighwayClient#testCreateLogin",
      "TestHighwayClient#testSend_failed",
      "TestHighwayClient#testLoginTimeout",
      "TestHighwayClient#testSend_success_decode_failed",
      "TestHighwayClient#testSend_success",
      "TestCircutBreakerEventNotifier#testMarkEvent",
      "TestCommandKey#testToHystrixCommandKey",
      "TestCommandKey#testToHystrixCommandGroupKey",
      "TestConsumerQpsFlowControlHandler#testQpsController",
      "TestConsumerQpsFlowControlHandler#testHandle",
      "TestConsumerQpsFlowControlHandler#testHandleIsLimitNewRequestAsFalse",
      "TestHystrixPropertiesStrategyExt#testGetCommandPropertiesCacheKey",
      "TestProviderBizkeeperHandler#testCreateBizkeeperCommand",
      "TestHighwayTransport#testSendException",
      "TestHighwayTransport#testHighway",
      "TestInvocationToHttpServletRequest#testGetContextPath",
      "TestInvocationToHttpServletRequest#testGetParameterNormal",
      "TestInvocationToHttpServletRequest#testGetPathInfoException",
      "TestInvocationToHttpServletRequest#testGetIntHeaderNotNumber",
      "TestInvocationToHttpServletRequest#testGetParameterValuesNotFound",
      "TestInvocationToHttpServletRequest#testGetPathInfoNormal",
      "TestInvocationToHttpServletRequest#testGetIntHeaderNormal",
      "TestInvocationToHttpServletRequest#testGetRemoteAddressEmpty",
      "TestInvocationToHttpServletRequest#testGetIntHeaderNotFound",
      "TestInvocationToHttpServletRequest#testGetHeader",
      "TestInvocationToHttpServletRequest#testGetMethod",
      "TestInvocationToHttpServletRequest#testGetParameterNull",
      "TestProducerHttpRequestArgMapper#testCreateFromInvocation"
    ]
  },
  "org.apache.servicecomb:swagger-generator-core": {
    "servicecomb-java-chassis": [
      "TestSwaggerToProtoGenerator#convert"
    ]
  },
  "com.netflix.ribbon:ribbon-loadbalancer": {
    "servicecomb-java-chassis": [
      "TestSessionSticknessRule#testRuleFullOperation",
      "TestSessionSticknessRule#testLastServerNotExist",
      "TestLoadBalanceHandler2#testStatusFilterUsingMockedInvocationWorks",
      "TestLoadBalanceHandler2#testIsolationEventWithEndpoint",
      "TestLoadBalanceHandler2#testZoneAwareAndIsolationFilterUsingMockedInvocationWorks",
      "TestLoadBalanceHandler2#testZoneAwareAndIsolationFilterWorks",
      "TestLoadBalanceHandler2#testZoneAwareAndIsolationFilterWorksEmptyInstanceProtectionEnabled",
      "TestLoadBalanceHandler2#testConfigEndpoint",
      "TestLoadbalanceHandler#send_failed",
      "TestLoadbalanceHandler#send_success",
      "TestLoadbalanceHandler#sendWithRetry",
      "TestLoadbalanceHandler#send_failed2",
      "TestWeightedResponseTimeRuleExt#testRoundRobin",
      "TestWeightedResponseTimeRuleExt#testBenchmarkRobin",
      "TestWeightedResponseTimeRuleExt#testWeighed",
      "TestWeightedResponseTimeRuleExt#testBenchmark",
      "TestLoadBalanceCreator#testLoadBalanceWithRandomRuleAndFilter",
      "TestLoadBalanceCreator#testLoadBalanceWithRoundRobinRuleAndFilter",
      "TestLoadBalanceCreator#testLoadBalanceWithWeightedResponseTimeRuleAndFilter",
      "TestLoadBalanceCreator#testLoadBalanceWithSessionSticknessRule",
      "TestLoadBalancer#testLoadBalancerFullOperationWithoutException",
      "TestRoundRobinRuleExt#testRoundRobin",
      "TestRoundRobinRuleExt#testBenchmarkRobin"
    ]
  },
  "com.netflix.ribbon:ribbon": {
    "servicecomb-java-chassis": [
      "TestLoadbalanceClientConfig#testLoadbalanceConstructor",
      "TestLoadbalanceHandler#sendWithRetry"
    ]
  },
  "com.netflix.archaius:archaius-core": {
    "servicecomb-java-chassis": [
      "TestCseClientHttpRequest#testNormal",
      "TestOperationProtobuf#testOperationProtobuf"
    ]
  },
  "javax.ws.rs:javax.ws.rs-api": {
    "servicecomb-java-chassis": [
      "TestJaxrsConsumerResponseMapper#mapResponse_withHeaders",
      "TestJaxrsConsumerResponseMapper#mapResponse_withoutHeaders"
    ]
  },
  "io.protostuff:protostuff-core": {
    "servicecomb-java-chassis": [
      "TestProtobufSchemaUtils#wrapPrimitive",
      "TestProtobufSchemaUtils#testMap",
      "TestProtobufSchemaUtils#wrapArray",
      "TestProtobufSchemaUtils#notWrap",
      "TestHighwayCodec#testDecodeResponse",
      "TestProtobufCompatibleUtils#test",
      "TestHighwayServerInvoke#test",
      "TestHighwayServerInvoke#testFlowControlQps",
      "TestHighwayServerConnection#testSetParameterNormal",
      "TestHighwayServerConnection#testSetParameterError",
      "TestHighwayClient#testCreateLogin"
    ]
  },
  "com.datumbox:libsvm": {
    "datumbox-framework": [
      "TextClassifierTest#testTrainAndValidateSupportVectorMachine"
    ]
  },
  "org.apache.flink:flink-core": {
    "AthenaX": [
      "KafkaJsonConnectorITest#testPassThrough",
      "ProcessExecutorTest#testCompile",
      "ProcessExecutorTest#testInvalidSql",
      "ProcessExecutorTest#testDirectCompile"
    ]
  },
  "org.apache.tomcat:tomcat-coyote": {
    "psi-probe": [
      "Tomcat70AgentValveTest#invoke",
      "Tomcat70ContainerAdapterTest#addContextResourceLink",
      "Tomcat70ContainerAdapterTest#resourceExists",
      "Tomcat70ContainerAdapterTest#addContextResource",
      "Tomcat70ContainerAdapterTest#applicationFilterMaps",
      "Tomcat70ContainerAdapterTest#resourceStream",
      "Tomcat70ContainerAdapterTest#resourceAttributes",
      "Tomcat70ContainerAdapterTest#applicationInitParams"
    ]
  },
  "org.apache.tomcat:tomcat-catalina": {
    "psi-probe": [
      "Tomcat85ContainerAdapterTest#createValve"
    ]
  },
  "io.dropwizard:dropwizard-servlets": {
    "BitHub": [
      "GithubControllerTest#testInvalidAuthUser",
      "GithubControllerTest#testInvalidAuthPassword",
      "GithubControllerTest#testOptOutCommit",
      "GithubControllerTest#testValidMultipleCommitsMultipleAuthors",
      "GithubControllerTest#testNoOptInCommit",
      "GithubControllerTest#testInvalidOrigin",
      "GithubControllerTest#testMissingAuth",
      "GithubControllerTest#testNonMaster",
      "GithubControllerTest#testOptInCommit",
      "GithubControllerTest#testValidCommit",
      "GithubControllerTest#testInvalidRepository"
    ]
  },
  "io.dropwizard:dropwizard-client": {
    "BitHub": [
      "GithubControllerTest#testInvalidAuthUser",
      "GithubControllerTest#testInvalidAuthPassword",
      "GithubControllerTest#testOptOutCommit",
      "GithubControllerTest#testValidMultipleCommitsMultipleAuthors",
      "GithubControllerTest#testNoOptInCommit",
      "GithubControllerTest#testInvalidOrigin",
      "GithubControllerTest#testMissingAuth",
      "GithubControllerTest#testNonMaster",
      "GithubControllerTest#testOptInCommit",
      "GithubControllerTest#testValidCommit",
      "GithubControllerTest#testInvalidRepository"
    ]
  },
  "com.sun.jersey:jersey-json": {
    "BitHub": [
      "GithubControllerTest#testInvalidAuthUser",
      "GithubControllerTest#testInvalidAuthPassword",
      "GithubControllerTest#testOptOutCommit",
      "GithubControllerTest#testValidMultipleCommitsMultipleAuthors",
      "GithubControllerTest#testNoOptInCommit",
      "GithubControllerTest#testInvalidOrigin",
      "GithubControllerTest#testMissingAuth",
      "GithubControllerTest#testNonMaster",
      "GithubControllerTest#testOptInCommit",
      "GithubControllerTest#testValidCommit",
      "GithubControllerTest#testInvalidRepository"
    ]
  },
  "org.apache.xmlgraphics:batik-transcoder": {
    "TwelveMonkeys": [
      "SVGImageReaderTest#testReadWithSizeParam"
    ]
  },
  "org.apache.xmlgraphics:batik-svggen": {
    "TwelveMonkeys": [
      "WMFImageReaderTest#testRead",
      "WMFImageReaderTest#testReadIndexNegative",
      "WMFImageReaderTest#testReadIndexOutOfBounds",
      "WMFImageReaderTest#testReRead",
      "WMFImageReaderTest#testReadIndexNegativeWithParam",
      "WMFImageReaderTest#testReadIndexOutOfBoundsWithParam",
      "WMFImageReaderTest#testReadWithNewParam",
      "WMFImageReaderTest#testReadWithDefaultParam",
      "WMFImageReaderTest#testReadWithSizeParam",
      "WMFImageReaderTest#testRemoveIIOReadProgressListener",
      "WMFImageReaderTest#testRemoveIIOReadProgressListenerMultiple",
      "WMFImageReaderTest#testRemoveAllIIOReadProgressListeners",
      "WMFImageReaderTest#testRemoveAllIIOReadProgressListenersMultiple",
      "WMFImageReaderTest#testAbort",
      "WMFImageReaderTest#testGetTypeSpecifiers",
      "WMFImageReaderTest#testSetDestination",
      "WMFImageReaderTest#testSetDestinationRaw",
      "WMFImageReaderTest#testSetDestinationIllegal",
      "WMFImageReaderTest#testSetDestinationTypeIllegal",
      "WMFImageReaderTest#testSetDestinationOffset",
      "WMFImageReaderTest#testSetDestinationType",
      "WMFImageReaderTest#testNotBadCaching",
      "WMFImageReaderTest#testReadWithNullParam",
      "WMFImageReaderTest#testReadWithSubsampleParamDimensions",
      "WMFImageReaderTest#testReadWithSourceRegionParam",
      "WMFImageReaderTest#testReadWithSizeAndSourceRegionParam",
      "WMFImageReaderTest#testReadWithSubsampleAndSourceRegionParam",
      "WMFImageReaderTest#testReadAsRenderedImageIndexNegative",
      "WMFImageReaderTest#testReadAsRenderedImageIndexOutOfBounds",
      "WMFImageReaderTest#testReadAsRenderedImage",
      "WMFImageReaderTest#testReadAsRenderedImageWithDefaultParam",
      "WMFImageReaderTest#testGetWidth",
      "WMFImageReaderTest#testGetWidthIndexOutOfBounds",
      "WMFImageReaderTest#testGetHeight",
      "WMFImageReaderTest#testGetHeightIndexOutOfBounds",
      "WMFImageReaderTest#testGetAspectRatio",
      "WMFImageReaderTest#testGetAspectRatioIndexOutOfBounds",
      "WMFImageReaderTest#testAddIIOReadProgressListenerCallbacks",
      "WMFImageReaderTest#testMultipleAddIIOReadProgressListenerCallbacks"
    ]
  },
  "org.apache.xmlgraphics:batik-extension": {
    "TwelveMonkeys": [
      "WMFImageReaderTest#testReadWithSizeAndSourceRegionParam",
      "WMFImageReaderTest#testReadWithSubsampleAndSourceRegionParam",
      "WMFImageReaderTest#testReadAsRenderedImageIndexNegative",
      "WMFImageReaderTest#testReadAsRenderedImageIndexOutOfBounds",
      "WMFImageReaderTest#testReadAsRenderedImage",
      "WMFImageReaderTest#testReadAsRenderedImageWithDefaultParam",
      "WMFImageReaderTest#testGetWidth",
      "WMFImageReaderTest#testGetWidthIndexOutOfBounds",
      "WMFImageReaderTest#testGetHeight",
      "WMFImageReaderTest#testGetHeightIndexOutOfBounds",
      "WMFImageReaderTest#testGetAspectRatio",
      "WMFImageReaderTest#testGetAspectRatioIndexOutOfBounds",
      "WMFImageReaderTest#testAddIIOReadProgressListenerCallbacks",
      "WMFImageReaderTest#testMultipleAddIIOReadProgressListenerCallbacks",
      "WMFImageReaderTest#testRemoveIIOReadProgressListener",
      "WMFImageReaderTest#testRemoveIIOReadProgressListenerMultiple",
      "WMFImageReaderTest#testRemoveAllIIOReadProgressListeners",
      "WMFImageReaderTest#testRemoveAllIIOReadProgressListenersMultiple",
      "WMFImageReaderTest#testAbort",
      "WMFImageReaderTest#testGetTypeSpecifiers",
      "WMFImageReaderTest#testSetDestination",
      "WMFImageReaderTest#testSetDestinationRaw",
      "WMFImageReaderTest#testSetDestinationIllegal",
      "WMFImageReaderTest#testSetDestinationTypeIllegal",
      "WMFImageReaderTest#testSetDestinationOffset",
      "WMFImageReaderTest#testSetDestinationType",
      "WMFImageReaderTest#testNotBadCaching",
      "WMFImageReaderTest#testRead",
      "WMFImageReaderTest#testReadIndexNegative",
      "WMFImageReaderTest#testReadIndexOutOfBounds",
      "WMFImageReaderTest#testReRead",
      "WMFImageReaderTest#testReadIndexNegativeWithParam",
      "WMFImageReaderTest#testReadIndexOutOfBoundsWithParam",
      "WMFImageReaderTest#testReadWithNewParam",
      "WMFImageReaderTest#testReadWithDefaultParam",
      "WMFImageReaderTest#testReadWithNullParam",
      "WMFImageReaderTest#testReadWithSubsampleParamDimensions",
      "WMFImageReaderTest#testReadWithSourceRegionParam",
      "WMFImageReaderTest#testReadWithSizeParam",
      "SVGImageReaderTest#testReadWithSizeParam",
      "SVGImageReaderTest#testRepeatedRead",
      "SVGImageReaderTest#testReadWithSizeAndSourceRegionParam",
      "SVGImageReaderTest#testReadWithSubsampleAndSourceRegionParam",
      "SVGImageReaderTest#testReadAsRenderedImageIndexNegative",
      "SVGImageReaderTest#testReadAsRenderedImageIndexOutOfBounds",
      "SVGImageReaderTest#testReadAsRenderedImageNoInput",
      "SVGImageReaderTest#testReadAsRenderedImage",
      "SVGImageReaderTest#testReadAsRenderedImageWithDefaultParam",
      "SVGImageReaderTest#testGetDefaultReadParam",
      "SVGImageReaderTest#testGetFormatName",
      "SVGImageReaderTest#testGetMinIndexNoInput",
      "SVGImageReaderTest#testGetNumImages",
      "SVGImageReaderTest#testGetNumImagesNoInput",
      "SVGImageReaderTest#testGetWidth",
      "SVGImageReaderTest#testGetWidthIndexOutOfBounds",
      "SVGImageReaderTest#testGetWidthNoInput",
      "SVGImageReaderTest#testGetHeight",
      "SVGImageReaderTest#testGetHeightNoInput",
      "SVGImageReaderTest#testGetHeightIndexOutOfBounds",
      "SVGImageReaderTest#testGetAspectRatio",
      "SVGImageReaderTest#testGetAspectRatioNoInput",
      "SVGImageReaderTest#testGetAspectRatioIndexOutOfBounds",
      "SVGImageReaderTest#testDisposeBeforeRead",
      "SVGImageReaderTest#testDisposeAfterRead",
      "SVGImageReaderTest#testAddIIOReadProgressListener",
      "SVGImageReaderTest#testAddIIOReadProgressListenerNull",
      "SVGImageReaderTest#testAddIIOReadProgressListenerCallbacks",
      "SVGImageReaderTest#testMultipleAddIIOReadProgressListenerCallbacks",
      "SVGImageReaderTest#testRemoveIIOReadProgressListenerNull",
      "SVGImageReaderTest#testRemoveIIOReadProgressListenerNone",
      "SVGImageReaderTest#testRemoveIIOReadProgressListener",
      "SVGImageReaderTest#testRemoveIIOReadProgressListenerMultiple",
      "SVGImageReaderTest#testRemoveAllIIOReadProgressListeners",
      "SVGImageReaderTest#testRemoveAllIIOReadProgressListenersMultiple",
      "SVGImageReaderTest#testAbort",
      "SVGImageReaderTest#testGetTypeSpecifiers",
      "SVGImageReaderTest#testSetDestination",
      "SVGImageReaderTest#testSetDestinationRaw",
      "SVGImageReaderTest#testSetDestinationIllegal",
      "SVGImageReaderTest#testSetDestinationTypeIllegal",
      "SVGImageReaderTest#testSetDestinationOffset",
      "SVGImageReaderTest#testSetDestinationOffsetNull",
      "SVGImageReaderTest#testSetDestinationType",
      "SVGImageReaderTest#testNotBadCaching",
      "SVGImageReaderTest#testNotBadCachingThumbnails",
      "SVGImageReaderTest#testProviderAndMetadataFormatNamesMatch",
      "SVGImageReaderTest#testSetInput",
      "SVGImageReaderTest#testSetInputNull",
      "SVGImageReaderTest#testRead",
      "SVGImageReaderTest#testReadIndexNegative",
      "SVGImageReaderTest#testReadIndexOutOfBounds",
      "SVGImageReaderTest#testReadNoInput",
      "SVGImageReaderTest#testReRead",
      "SVGImageReaderTest#testReadIndexNegativeWithParam",
      "SVGImageReaderTest#testReadIndexOutOfBoundsWithParam",
      "SVGImageReaderTest#testReadNoInputWithParam",
      "SVGImageReaderTest#testReadWithNewParam",
      "SVGImageReaderTest#testReadWithDefaultParam",
      "SVGImageReaderTest#testReadWithNullParam",
      "SVGImageReaderTest#testReadWithSubsampleParamDimensions",
      "SVGImageReaderTest#testReadWithSourceRegionParam",
      "SVGImageReaderTest#testGetMinIndex"
    ]
  },
  "org.apache.maven:maven-toolchain": {
    "pitest": [
      "PitMojoTest#testThrowsMojoFailureExceptionWhenCoverageBelowThreshold",
      "PitMojoTest#testEmptyFeatureIsIgnored",
      "PitMojoTest#testEmptyExcludedMethodIsIgnored",
      "PitMojoTest#testEmptyExcludedRunnerIsIgnored",
      "PitMojoTest#testEmptyExcludedGroupIsIgnored",
      "PitMojoTest#testAllowsSurvivingMutantsThresholdToBeZero",
      "PitMojoTest#testEmptyJvmArgIsIgnored",
      "PitMojoTest#testEmptyExcludedClassIsIgnored",
      "PitMojoTest#testDoesNotAnalyseProjectsWithSkipFlagSet",
      "PitMojoTest#testEmptyOutputFormatIsIgnored",
      "PitMojoTest#testEmptyExcludedTestClassIsIgnored",
      "PitMojoTest#testRunsAMutationReportWhenMutationCoverageGoalTrigered",
      "PitMojoTest#testConfigureEnvironmentVariable",
      "PitMojoTest#testEmptyAdditionalClasspathElementIsIgnored",
      "PitMojoTest#testEmptyMutatorIsIgnored",
      "PitMojoTest#testDoesNotThrowsMojoFailureExceptionWhenMutationScoreOnThreshold",
      "PitMojoTest#testEmptyTargetTestIsIgnored",
      "PitMojoTest#testThrowsMojoFailureExceptionWhenMutationScoreBelowThreshold",
      "PitMojoTest#testEmptyClasspathDependencyExcludeIsIgnored",
      "PitMojoTest#testDoesNotAnalysePomProjects",
      "PitMojoTest#testEmptyIncludedGroupIsIgnored",
      "PitMojoTest#testEmptyIncludedTestMethodIsIgnored",
      "PitMojoTest#testThrowsMojoFailureExceptionWhenSurvivingMutantsAboveThreshold",
      "PitMojoTest#testDoesNotThrowMojoFailureExceptionWhenCoverageOnThreshold",
      "PitMojoTest#testEmptyTargetClassIsIgnored",
      "PitMojoTest#testDoesNotThrowsMojoFailureExceptionWhenSurvivingMutantsOnThreshold",
      "PitMojoTest#testEmptyAvoidCallsToValueIsIgnored",
      "MojoToReportOptionsConverterTest#testParsesCustomProperties",
      "MojoToReportOptionsConverterTest#testUsesSourceDirectoriesFromProject",
      "MojoToReportOptionsConverterTest#testParsesDetectInlineCodeFlag",
      "MojoToReportOptionsConverterTest#testParsesSurefireConfigWhenFlagSet",
      "MojoToReportOptionsConverterTest#testParsesMutationUnitSize",
      "MojoToReportOptionsConverterTest#testParsesTimeOutConstant",
      "MojoToReportOptionsConverterTest#testParsesHistoryInputFile",
      "MojoToReportOptionsConverterTest#testParsesExcludedClasspathElements",
      "MojoToReportOptionsConverterTest#testParsesListOfJVMArgs",
      "MojoToReportOptionsConverterTest#testObeysFailWhenNoMutationsFlagWhenPackagingTypeIsNotPOM",
      "MojoToReportOptionsConverterTest#testParsesMaxDependencyDistance",
      "MojoToReportOptionsConverterTest#testParsesHistoryOutputFile",
      "MojoToReportOptionsConverterTest#testParsesListOfExcludedTestClassGlobs",
      "MojoToReportOptionsConverterTest#testParsesTestGroupsToInclude",
      "MojoToReportOptionsConverterTest#testParsesTimeStampedReports",
      "MojoToReportOptionsConverterTest#testCreatesPredicateFromListOfTargetClassGlobs",
      "MojoToReportOptionsConverterTest#testParsesTestPlugin",
      "MojoToReportOptionsConverterTest#testParsesFullMutationMatrix",
      "MojoToReportOptionsConverterTest#testParsesTestMethodsToInclude",
      "MojoToReportOptionsConverterTest#testParsesTimeOutFactor",
      "MojoToReportOptionsConverterTest#testParsesListOfTargetTestClassGlobs",
      "MojoToReportOptionsConverterTest#testParsesLineCoverageExportFlagWhenNotSet",
      "MojoToReportOptionsConverterTest#testParsesLineCoverageExportFlagWhenSet",
      "MojoToReportOptionsConverterTest#testIgnoreSurefireConfigWhenFlagNotSet",
      "MojoToReportOptionsConverterTest#testParsesTestGroupsToExclude",
      "MojoToReportOptionsConverterTest#testParsesVerboseFlag",
      "MojoToReportOptionsConverterTest#testParsesListOfMutationOperators",
      "MojoToReportOptionsConverterTest#testObeysSkipFailingTestsFlagWhenPackagingTypeIsNotPOM",
      "MojoToReportOptionsConverterTest#testParsesCommaListOfExcludedMethods",
      "MojoToReportOptionsConverterTest#testParsesNumberOfThreads",
      "MojoToReportOptionsConverterTest#testParsesExcludedRunners",
      "MojoToReportOptionsConverterTest#testParsesUseClasspathJar",
      "MojoToReportOptionsConverterTest#testDefaultsToHtmlReportWhenNoOutputFormatsSpecified",
      "MojoToReportOptionsConverterTest#testParsesListOfFeatures",
      "MojoToReportOptionsConverterTest#testParsesJavaExecutable",
      "MojoToReportOptionsConverterTest#testParsesListOfOutputFormatsWhenSupplied",
      "MojoToReportOptionsConverterTest#testDefaultsLoggingPackagesToDefaultsDefinedByDefaultMutationConfigFactory",
      "MojoToReportOptionsConverterTest#testParsesEngineWhenSet",
      "MojoToReportOptionsConverterTest#testParsesLocalHistoryFlag",
      "MojoToReportOptionsConverterTest#testParsesListOfClassesToAvoidCallTo",
      "MojoToReportOptionsConverterTest#testDefaultsJavaExecutableToNull",
      "MojoToReportOptionsConverterTest#testDefaultsMutationUnitSizeToCorrectValue",
      "MojoToReportOptionsConverterTest#testParsesListOfExcludedClassGlobsAndApplyTheseToTargets",
      "MojoToReportOptionsConverterTest#testMaintainsOrderOfClassPath",
      "MojoToReportOptionsConverterTest#testDoesNotUseClasspathJarByDefault",
      "MojoToReportOptionsConverterTest#testsParsesReportDir",
      "ScmMojoTest#testThrowsAnExceptionWhenNoScmConfigured",
      "ScmMojoTest#testLastCommitIsMutationTested",
      "ScmMojoTest#testUsesCorrectConnectionWhenDeveloperConnectionSet",
      "ScmMojoTest#testClassesAddedToScmAreMutationTested",
      "ScmMojoTest#testUnknownAndDeletedClassesAreNotMutationTested",
      "ScmMojoTest#testDoesNotAnalysePomProjects",
      "ScmMojoTest#testCanOverrideInspectedStatus",
      "ScmMojoTest#testModifiedClassesAreMutationTested",
      "ScmMojoTest#testUsesCorrectConnectionWhenNonDeveloperConnectionSet"
    ]
  },
  "pl.pragmatists:JUnitParams": {
    "pitest": [
      "JUnitCustomRunnerTestUnitFinderTest#willFindSingleTestUnitInJUnitParamsTest",
      "TestJUnitConfiguration#shouldFindTestInJUnitParamsTest"
    ]
  },
  "com.datastax.cassandra:cassandra-driver-core": {
    "wasabi": [
      "MutexImplTest#testDeleteExclusion",
      "MutexImplTest#testGetExclusions",
      "MutexImplTest#testGetRecursiveMutualExclusions",
      "MutexImplTest#testCreateExclusions",
      "MutexImplTest#testGetNotExclusions",
      "EmailModuleTest#testClassNotFound"
    ]
  },
  "com.datastax.cassandra:cassandra-driver-mapping": {
    "wasabi": [
      "EmailModuleTest#testClassNotFound"
    ]
  },
  "org.elasticsearch.client:transport": {
    "photon": [
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testFilterWithTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testTagNotTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testFilterWithoutTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyTourism",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testValueInformationButKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testKeyTourismButValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourism"
    ]
  },
  "org.openstreetmap.osmosis:osmosis-hstore-jdbc": {
    "photon": [
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testFilterWithTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testTagNotTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testFilterWithoutTagTourismAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyTourism",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourismAndKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testValueInformationButKeyNotAmenity",
      "TagFilterQueryBuilderSearchTest#testKeyTourismAndValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testKeyTourismButValueNotInformation",
      "TagFilterQueryBuilderSearchTest#testValueAttraction",
      "TagFilterQueryBuilderSearchTest#testKeyNotTourism"
    ]
  },
  "org.subethamail:subethasmtp": {
    "FakeSMTP": [
      "SMTPServerHandlerTest#testOutOfRangePort"
    ]
  },
  "org.bouncycastle:bcpkix-jdk15on": {
    "apk-parser": [
      "BCCertificateParserTest#parse"
    ]
  },
  "org.apache.tika:tika-parsers": {
    "couchdb-lucene": [
      "TikaTest#testXML",
      "TikaTest#testWord",
      "TikaTest#testPDF"
    ]
  },
  "org.httpunit:httpunit": {
    "citrus": [
      "LogConfiguratorListenerMultiLogSystemsTests#multi_log_systems",
      "LogConfiguratorListenerTests#defaultValues",
      "JspEngineTests#contextRoot_getResourceOfRoot",
      "JspEngineTests#contextRoot_getResourceOfWebXml",
      "JspEngineTests#contextRoot_failed",
      "JspEngineTests#exists"
    ]
  },
  "org.freemarker:freemarker": {
    "citrus": [
      "FreeMarkerEngineTests#advancedProperties_illegalKey"
    ]
  },
  "commons-fileupload:commons-fileupload": {
    "citrus": [
      "PropertyPlaceholderTests#defaultValue"
    ]
  },
  "com.alibaba.citrus:citrus-webx-all": {
    "citrus": [
      "PropertyPlaceholderTests#defaultValue"
    ]
  },
  "cglib:cglib-nodep": {
    "citrus": [
      "RequestContextAsyncTests#getRequestContext",
      "RequestContextAsyncTests#getRequestContext_DispatcherAsync",
      "RequestContextAsyncTests#commitRequestContext_DispatcherRequest",
      "RequestContextAsyncTests#commitRequestContext_DispatcherRequest_AsyncStarted",
      "RequestContextAsyncTests#commitRequestContext_DispatcherAsync",
      "RequestContextAsyncTests#commitRequestContext_DispatcherAsync_AsyncStarted",
      "PipelineSkipValidationTests#initializationError",
      "RequestContextCommitTests#commit",
      "RequestContextCommitTests#commitHeaders",
      "RequestContextCommitTests#synchronization",
      "RequestContextCommitTests#commitHeaders_thenCommitAll",
      "RequestContextCommitTests#autoCommitHeaders_writer",
      "RequestContextCommitTests#autoCommitHeaders_stream",
      "RequestContextCommitTests#preventCommitHeaders_whenDoCommitting",
      "GroupTests#initializationError",
      "JspEngineSkipValidationTests#initializationError",
      "ContributionDecoratorTests#decorator",
      "ContributionDecoratorTests#decoratorAttr",
      "ErrorHandlerTests#prod_ExceptionPipeline",
      "ErrorHandlerTests#prod_ExceptionPipeline_noSchema",
      "ErrorHandlerTests#prod_sendError",
      "ErrorHandlerTests#dev_detail",
      "UtilToolSetTests#toolSet",
      "MappedValuesEncoderTests#initializationError",
      "MainHandlerTests#internalRequest_productionMode",
      "MainHandlerTests#internalRequest_main",
      "MainHandlerTests#internalRequest_homepage",
      "CookieSupportTests#copyConstructors",
      "CookieSupportTests#addCookie",
      "CookieSupportTests#getHeaderValue_invalid",
      "CookieSupportTests#toString_invalid",
      "CookieSupportTests#cookie_empty_value",
      "CookieSupportTests#cookie_value_quote",
      "CookieSupportTests#cookie_value",
      "CookieSupportTests#cookies_maxage_v0",
      "CookieSupportTests#cookies_maxage_v1",
      "CookieSupportTests#cookie_comment_v0",
      "CookieSupportTests#cookie_comment_v1",
      "CookieSupportTests#cookie_domain",
      "CookieSupportTests#cookie_path",
      "CookieSupportTests#cookie_secure",
      "CookieSupportTests#cookie_httpOnly",
      "CookieSupportTests#cookie_all_params_v0",
      "CookieSupportTests#cookie_all_params_v1",
      "WebxFrameworkFilterTests#isExcluded",
      "WebxFrameworkFilterTests#getComponent",
      "WebxFrameworkFilterTests#componentPath_wrong",
      "WebxFrameworkFilterTests#findComponent",
      "WebxFrameworkFilterTests#readResource_app4_defaultComponent",
      "WebxFrameworkFilterTests#readResource_app5",
      "WebxFrameworkFilterTests#autowireComponentObject",
      "WebxFrameworkFilterTests#getConfiguration_fromComponent",
      "WebxFrameworkFilterTests#autowireController",
      "RequestContextUtilTests#getRequestContext",
      "RequestContextUtilTests#setRequestContext",
      "RequestContextUtilTests#removeRequestContext",
      "WebxClasspathTests#components",
      "WebxClasspathTests#illegal_configLocationPattern",
      "WebxRootControllerTests#requestContextFailed",
      "WebxRootControllerTests#internalRequest_illegal",
      "WebxRootControllerTests#internalRequest_error",
      "WebxRootControllerTests#nonInternalRequest",
      "WebxRootControllerTests#internalRequestMapping",
      "WebxRootControllerTests#valve_not_found_exception",
      "WebxRootControllerTests#valve_bad_request_exception",
      "WebxRootControllerTests#valve_exception_exception",
      "WebxRootControllerTests#valve_exception_exception_2",
      "WebxRootControllerTests#loadInternalRequestHandlers",
      "WebxRootControllerTests#valve_breakToTop",
      "WebxRootControllerTests#valve_exception",
      "WebxRootControllerTests#passthru",
      "WebxRootControllerTests#head",
      "FormServiceSkipValidationTests#initializationError",
      "SimpleValueEncoderTests#initializationError",
      "SchemaRequestHandlerTests#internalRequest_schema",
      "JspEngineTests#contextRoot_getResourceOfWebXml",
      "JspEngineTests#contextRoot_failed",
      "JspEngineTests#render_writeToStream",
      "JspEngineTests#render_writeToWriter",
      "JspEngineTests#createEngineDirectly",
      "JspEngineTests#render_getText",
      "JspEngineTests#contextRoot_getResourceOfRoot",
      "JspEngineTests#exists",
      "ResourceLoadingExtendableTests#initializationError",
      "SpringextWebContextLoaderTests#get",
      "SpringextWebContextLoaderTests#post",
      "SpringextWebContextLoaderTests#myservlet",
      "SpringextWebContextLoaderTests#response",
      "WebxUtilTests#getVersion",
      "WebxUtilTests#getServletAPIVersion",
      "JexlConditionTests#init_expression",
      "InfoHandlerTests#requestInfoPage",
      "InfoHandlerTests#systemProperties",
      "InfoHandlerTests#environmentVariables",
      "InfoHandlerTests#systemInfo",
      "InputOutputValveTests#input_systemDefaultValue",
      "InputOutputValveTests#input_defaultValue",
      "InputOutputValveTests#out_systemDefaultValue",
      "InputOutputValveTests#getInputValue",
      "InputOutputValveTests#consumeInputValue",
      "InputOutputValveTests#consumeInputValue_withFilter",
      "InputOutputValveTests#consumeInputValue_required",
      "InputOutputValveTests#differentInputOutputKeys",
      "InputOutputValveTests#setOutputValue",
      "InputOutputValveTests#out_defaultValue",
      "InputOutputValveTests#out_set",
      "InputOutputValveTests#input_set"
    ]
  },
  "org.apache.wicket:wicket": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "de.javakaffee.msm:memcached-session-manager-tc7": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.grails:grails-web": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "joda-time:joda-time": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.apache.tomcat:catalina": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "redis.clients:jedis": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.apache.tomcat:tomcat-jasper": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.apache.tomcat:tomcat-servlet-api": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "de.javakaffee.msm:memcached-session-manager": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.apache.tomcat:catalina-ha": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "com.thoughtworks.xstream:xstream": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.codehaus.jettison:jettison": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "com.sun.faces:jsf-impl": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.apache.tomcat:coyote": {
    "memcached-session-manager": [
      "TestSuite"
    ]
  },
  "org.seleniumhq.selenium:selenium-support": {
    "FluentLenium": [
      "AfterSuccessTest#testFluentTest",
      "FluentJUnitJupiterTest#testBeforeEach"
    ]
  },
  "org.seleniumhq.selenium:selenium-api": {
    "FluentLenium": [
      "FluentJUnitJupiterTest#badInstance",
      "FluentJUnitJupiterTest#testBeforeEach",
      "FluentJUnitJupiterTest#testAfterEachFailure",
      "FluentJUnitJupiterTest#testAfterEachSuccessful"
    ]
  },
  "org.apache.hbase:hbase-protocol": {
    "phoenix": [
      "StatisticsScannerTest#testCheckRegionServerStoppedOnException",
      "StatisticsScannerTest#testCheckRegionServerStoppedOnClose",
      "StatisticsScannerTest#testCheckRegionServerStoppingOnException",
      "StatisticsScannerTest#testCheckRegionServerStoppingOnClose",
      "StatisticsScannerTest#testCheckRegionServerStoppedOnException",
      "StatisticsScannerTest#testCheckRegionServerStoppedOnClose",
      "StatisticsScannerTest#testCheckRegionServerStoppingOnException",
      "StatisticsScannerTest#testCheckRegionServerStoppingOnClose"
    ]
  },
  "org.jruby.joni:joni": {
    "phoenix": [
      "LikeExpressionTest#testStartWildcard",
      "LikeExpressionTest#testNewline",
      "LikeExpressionTest#testCaseSensitive",
      "LikeExpressionTest#testStartWildcard",
      "LikeExpressionTest#testNewline",
      "LikeExpressionTest#testCaseSensitive"
    ]
  },
  "org.apache.hbase:hbase-metrics": {
    "phoenix": [
      "SpoolingResultIteratorTest#testOnDiskSpooling",
      "SpoolingResultIteratorTest#testInMemorySpooling",
      "SpoolingResultIteratorTest#testFailToSpool",
      "SkipScanBigFilterTest#testAllIntersect",
      "SkipScanBigFilterTest#testRangeIntersect",
      "ConnectionlessTest#testSaltedConnectionlessUpsert",
      "ConnectionlessTest#testConnectionlessUpsert",
      "ConnectionlessTest#testMultipleConnectionQueryServices",
      "CorrelatePlanTest#testCorrelatePlanWithSingleValueOnlyAndOffset",
      "CorrelatePlanTest#testCorrelatePlanWithAntiJoinType",
      "CorrelatePlanTest#testCorrelatePlanWithLeftJoinType",
      "CorrelatePlanTest#testCorrelatePlanWithSingleValueOnly",
      "CorrelatePlanTest#testCorrelatePlanWithSemiJoinType",
      "CorrelatePlanTest#testCorrelatePlanWithInnerJoinType",
      "LiteralResultIteratorPlanTest#testLiteralResultIteratorPlanWithLimitAndOffset",
      "LiteralResultIteratorPlanTest#testLiteralResultIteratorPlanWithOffset",
      "LiteralResultIteratorPlanTest#testLiteralResultIteratorPlanWithLimit",
      "UnnestArrayPlanTest#testUnnestVarcharArrays",
      "UnnestArrayPlanTest#testUnnestEmptyArrays",
      "UnnestArrayPlanTest#testUnnestIntegerArrays",
      "UnnestArrayPlanTest#testUnnestEmptyArraysWithOrdinality",
      "UnnestArrayPlanTest#testUnnestIntegerArraysWithOrdinality",
      "UnnestArrayPlanTest#testUnnestVarcharArraysWithOrdinality",
      "MutationStateTest#testToMutationsOverMultipleTables",
      "SpoolingResultIteratorTest#testOnDiskSpooling",
      "SpoolingResultIteratorTest#testInMemorySpooling",
      "SpoolingResultIteratorTest#testFailToSpool",
      "SkipScanBigFilterTest#testAllIntersect",
      "SkipScanBigFilterTest#testRangeIntersect",
      "ConnectionlessTest#testSaltedConnectionlessUpsert",
      "ConnectionlessTest#testConnectionlessUpsert",
      "ConnectionlessTest#testMultipleConnectionQueryServices",
      "CorrelatePlanTest#testCorrelatePlanWithSingleValueOnlyAndOffset",
      "CorrelatePlanTest#testCorrelatePlanWithAntiJoinType",
      "CorrelatePlanTest#testCorrelatePlanWithLeftJoinType",
      "CorrelatePlanTest#testCorrelatePlanWithSingleValueOnly",
      "CorrelatePlanTest#testCorrelatePlanWithSemiJoinType",
      "CorrelatePlanTest#testCorrelatePlanWithInnerJoinType",
      "LiteralResultIteratorPlanTest#testLiteralResultIteratorPlanWithLimitAndOffset",
      "LiteralResultIteratorPlanTest#testLiteralResultIteratorPlanWithOffset",
      "LiteralResultIteratorPlanTest#testLiteralResultIteratorPlanWithLimit",
      "UnnestArrayPlanTest#testUnnestVarcharArrays",
      "UnnestArrayPlanTest#testUnnestEmptyArrays",
      "UnnestArrayPlanTest#testUnnestIntegerArrays",
      "UnnestArrayPlanTest#testUnnestEmptyArraysWithOrdinality",
      "UnnestArrayPlanTest#testUnnestIntegerArraysWithOrdinality",
      "UnnestArrayPlanTest#testUnnestVarcharArraysWithOrdinality",
      "MutationStateTest#testToMutationsOverMultipleTables"
    ]
  },
  "ognl:ognl": {
    "junit-quickcheck": [
      "LocalTimePropertyParameterTypesTest#rangedLocalTime",
      "LocalTimePropertyParameterTypesTest#localTime",
      "LocalTimePropertyParameterTypesTest#missingMax",
      "LocalTimePropertyParameterTypesTest#missingMin",
      "LocalTimePropertyParameterTypesTest#malformedFormat",
      "LocalTimePropertyParameterTypesTest#malformedMax",
      "LocalTimePropertyParameterTypesTest#malformedMin",
      "LocalTimePropertyParameterTypesTest#backwardsRange",
      "SetOfHuhPropertyParameterTest#producesExpectedRandomValues",
      "SetOfHuhPropertyParameterTest#verifyInteractionWithRandomness",
      "PropertiesPropertyParameterTest#producesExpectedRandomValues",
      "PropertiesPropertyParameterTest#verifyInteractionWithRandomness",
      "MonthPropertyParameterTypesTest#month",
      "IntFunctionPropertyParameterTest#toByte",
      "SegmentPropertiesTest#intersectionIsSymmetric",
      "SizeConstrainedSetPropertyParameterTypesTest#outOfWhackSizeRange",
      "SizeConstrainedSetPropertyParameterTypesTest#shrinkingSizeConstrainedSets",
      "SizeConstrainedSetPropertyParameterTypesTest#sizeConstrainedSets",
      "SizeConstrainedArrayPropertyParameterTypesTest#threeD",
      "SizeConstrainedArrayPropertyParameterTypesTest#outOfWhackSizeRange",
      "SizeConstrainedArrayPropertyParameterTypesTest#oneD",
      "SizeConstrainedArrayPropertyParameterTypesTest#twoD",
      "SizeConstrainedArrayPropertyParameterTypesTest#shrinkingTwoD",
      "PrimitiveLongPropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveLongPropertyParameterTest#verifyInteractionWithRandomness",
      "IntPredicatePropertyParameterTest#works",
      "ContractTestWithTypeVariableForPropertyParameterTest#gitHubIssue143",
      "DoubleToIntFunctionPropertyParameterTest#works",
      "ObjIntConsumerPropertyParameterTest#check",
      "WrapperBooleanPropertyParameterTest#producesExpectedRandomValues",
      "WrapperBooleanPropertyParameterTest#verifyInteractionWithRandomness",
      "RangedBigDecimalNoMaxPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalNoMaxPropertyParameterTest#verifyInteractionWithRandomness",
      "DistinctListPropertyParameterTypesTest#distinctLists",
      "DistinctListPropertyParameterTypesTest#shrinkingDistinctLists",
      "OffsetTimePropertyParameterTypesTest#offsetTime",
      "OffsetTimePropertyParameterTypesTest#missingMax",
      "OffsetTimePropertyParameterTypesTest#missingMin",
      "OffsetTimePropertyParameterTypesTest#rangedOffsetTime",
      "OffsetTimePropertyParameterTypesTest#malformedFormat",
      "OffsetTimePropertyParameterTypesTest#malformedMax",
      "OffsetTimePropertyParameterTypesTest#malformedMin",
      "OffsetTimePropertyParameterTypesTest#backwardsRange",
      "NumberPropertyParameterTypesTest#numbers",
      "LongSupplierPropertyParameterTest#works",
      "YearMonthPropertyParameterTypesTest#rangedYearMonth",
      "YearMonthPropertyParameterTypesTest#yearMonth",
      "YearMonthPropertyParameterTypesTest#missingMax",
      "YearMonthPropertyParameterTypesTest#missingMin",
      "YearMonthPropertyParameterTypesTest#malformedFormat",
      "YearMonthPropertyParameterTypesTest#malformedMax",
      "YearMonthPropertyParameterTypesTest#malformedMin",
      "YearMonthPropertyParameterTypesTest#backwardsRange",
      "DistinctSetPropertyParameterTypesTest#shrinkingDistinctSets",
      "DistinctSetPropertyParameterTypesTest#distinctSets",
      "PrimitiveBooleanPropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveBooleanPropertyParameterTest#verifyInteractionWithRandomness",
      "ObjLongConsumerPropertyParameterTest#check",
      "RangedBigDecimalNoMinPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalNoMinPropertyParameterTest#verifyInteractionWithRandomness",
      "InstantPropertyParameterTypesTest#missingMax",
      "InstantPropertyParameterTypesTest#missingMin",
      "InstantPropertyParameterTypesTest#malformedMax",
      "InstantPropertyParameterTypesTest#malformedMin",
      "InstantPropertyParameterTypesTest#rangedInstant",
      "InstantPropertyParameterTypesTest#instant",
      "InstantPropertyParameterTypesTest#backwardsRange",
      "LocalePropertyParameterTest#producesExpectedRandomValues",
      "LocalePropertyParameterTest#verifyInteractionWithRandomness",
      "CounterPropertiesTest#incrementing",
      "CounterPropertiesTest#decrementing",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperByteArray",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperFloatArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DLongArray",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperBooleanArray",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperIntegerArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DDoubleArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DShortArray",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperCharacterArray",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperLongArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DBooleanArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DIntegerArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DByteArray",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperShortArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DCharacterArray",
      "Primitive3DArrayPropertyParameterTypesTest#primitive3DFloatArray",
      "Primitive3DArrayPropertyParameterTypesTest#wrapperDoubleArray",
      "RFC4122Version5PropertyParameterTest#producesExpectedRandomValues",
      "RFC4122Version5PropertyParameterTest#verifyInteractionWithRandomness",
      "BitSetPropertyParameterTypesTest#bitSet",
      "ToLongBiFunctionPropertyParameterTest#unresolvedTypes",
      "ReferenceArrayPropertyParameterTypesTest#twoDLongArray",
      "ReferenceArrayPropertyParameterTypesTest#stringArray",
      "DoubleUnaryOperatorPropertyParameterTest#works",
      "SymmetricKeyCryptoPropertiesTest#decryptReversesEncrypt",
      "YearPropertyParameterTypesTest#rangedYear",
      "YearPropertyParameterTypesTest#missingMax",
      "YearPropertyParameterTypesTest#missingMin",
      "YearPropertyParameterTypesTest#year",
      "YearPropertyParameterTypesTest#malformedFormat",
      "YearPropertyParameterTypesTest#malformedMax",
      "YearPropertyParameterTypesTest#malformedMin",
      "YearPropertyParameterTypesTest#backwardsRange",
      "StringPropertiesTest#concatenationLength",
      "ListOfIntArrayPropertyParameterTest#producesExpectedRandomValues",
      "ListOfIntArrayPropertyParameterTest#verifyInteractionWithRandomness",
      "BigDecimalWithSpecifiedPrecisionPropertyParameterTest#producesExpectedRandomValues",
      "BigDecimalWithSpecifiedPrecisionPropertyParameterTest#verifyInteractionWithRandomness",
      "WrapperCharacterPropertyParameterTest#producesExpectedRandomValues",
      "WrapperCharacterPropertyParameterTest#verifyInteractionWithRandomness",
      "EncodedStringPropertyParameterTest#producesExpectedRandomValues",
      "EncodedStringPropertyParameterTest#verifyInteractionWithRandomness",
      "PrimitiveCharPropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveCharPropertyParameterTest#verifyInteractionWithRandomness",
      "RangedBigDecimalNoMaxWithGreaterSpecifiedPrecisionPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalNoMaxWithGreaterSpecifiedPrecisionPropertyParameterTest#verifyInteractionWithRandomness",
      "PredicatePropertyParameterTest#callingDefaultPredicateMethod",
      "PredicatePropertyParameterTest#definiteArgType",
      "BigIntegerPropertyParameterTest#producesExpectedRandomValues",
      "BigIntegerPropertyParameterTest#verifyInteractionWithRandomness",
      "ListPropertyParameterTypesTest#lowerBounded",
      "ListPropertyParameterTypesTest#listOfUpperBounded",
      "ListPropertyParameterTypesTest#doesNotGetStuckWithConstraintExpression",
      "ListPropertyParameterTypesTest#listsOfIntegers",
      "ListPropertyParameterTypesTest#upperBounded",
      "ListPropertyParameterTypesTest#listOfHuh",
      "ListPropertyParameterTypesTest#listsOfNumbers",
      "ListPropertyParameterTypesTest#huh",
      "ListPropertyParameterTypesTest#shrinkingHuh",
      "ListPropertyParameterTypesTest#listOfVoid",
      "ListPropertyParameterTypesTest#listOfRangedInteger",
      "ListPropertyParameterTypesTest#intArray",
      "ListPropertyParameterTypesTest#listOfInteger",
      "ListPropertyParameterTypesTest#listOfLowerBounded",
      "DurationPropertyParameterTypesTest#duration",
      "DurationPropertyParameterTypesTest#missingMax",
      "DurationPropertyParameterTypesTest#missingMin",
      "DurationPropertyParameterTypesTest#rangedDuration",
      "DurationPropertyParameterTypesTest#malformedMax",
      "DurationPropertyParameterTypesTest#malformedMin",
      "DurationPropertyParameterTypesTest#backwardsRange",
      "PolygonPropertiesTest#convexity",
      "LongPredicatePropertyParameterTest#works",
      "IntUnaryOperatorPropertyParameterTest#works",
      "DoubleFunctionPropertyParameterTest#toDate",
      "SetOfSuperFloatPropertyParameterTest#producesExpectedRandomValues",
      "SetOfSuperFloatPropertyParameterTest#verifyInteractionWithRandomness",
      "DoubleToLongFunctionPropertyParameterTest#works",
      "RangedBigIntegerNoMaxPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigIntegerNoMaxPropertyParameterTest#verifyInteractionWithRandomness",
      "PrimitiveDoublePropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveDoublePropertyParameterTest#verifyInteractionWithRandomness",
      "WrapperShortPropertyParameterTest#producesExpectedRandomValues",
      "WrapperShortPropertyParameterTest#verifyInteractionWithRandomness",
      "ZoneOffsetPropertyParameterTypesTest#zoneOffset",
      "ZoneOffsetPropertyParameterTypesTest#rangedZoneOffset",
      "ZoneOffsetPropertyParameterTypesTest#missingMax",
      "ZoneOffsetPropertyParameterTypesTest#missingMin",
      "ZoneOffsetPropertyParameterTypesTest#malformedMax",
      "ZoneOffsetPropertyParameterTypesTest#malformedMin",
      "ZoneOffsetPropertyParameterTypesTest#backwardsRange",
      "RangedBigDecimalWithGreaterSpecifiedPrecisionPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalWithGreaterSpecifiedPrecisionPropertyParameterTest#verifyInteractionWithRandomness",
      "SetOfEnumPropertyParameterTest#producesExpectedRandomValues",
      "SetOfEnumPropertyParameterTest#verifyInteractionWithRandomness",
      "RangedBigDecimalWithLesserSpecifiedPrecisionPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalWithLesserSpecifiedPrecisionPropertyParameterTest#verifyInteractionWithRandomness",
      "BiPredicatePropertyParameterTest#callingDefaultPredicateMethod",
      "BiPredicatePropertyParameterTest#definiteArgType",
      "BinaryOperatorPropertyParameterTest#resolvedTypes",
      "BinaryOperatorPropertyParameterTest#callingDefaultFunctionMethod",
      "BinaryOperatorPropertyParameterTest#unresolvedTypes",
      "DollarsAndCentsPropertiesTest#roundingUp",
      "DollarsAndCentsPropertiesTest#roundingDown",
      "RangedBigDecimalNoMinWithLesserSpecifiedPrecisionPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalNoMinWithLesserSpecifiedPrecisionPropertyParameterTest#verifyInteractionWithRandomness",
      "RangedBigIntegerNoMinPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigIntegerNoMinPropertyParameterTest#verifyInteractionWithRandomness",
      "IntToDoubleFunctionPropertyParameterTest#works",
      "OptionalDoublePropertyParameterTest#maybeADouble",
      "OptionalDoublePropertyParameterTest#shrinking",
      "ZonedDateTimePropertyParameterTypesTest#zonedDateTime",
      "ZonedDateTimePropertyParameterTypesTest#missingMax",
      "ZonedDateTimePropertyParameterTypesTest#missingMin",
      "ZonedDateTimePropertyParameterTypesTest#rangedZonedDateTime",
      "ZonedDateTimePropertyParameterTypesTest#malformedFormat",
      "ZonedDateTimePropertyParameterTypesTest#malformedMax",
      "ZonedDateTimePropertyParameterTypesTest#malformedMin",
      "ZonedDateTimePropertyParameterTypesTest#backwardsRange",
      "PrimitiveBytePropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveBytePropertyParameterTest#verifyInteractionWithRandomness",
      "BigNumberPropertyParameterTypesTest#rangedBigIntegerWithNoMax",
      "BigNumberPropertyParameterTypesTest#rangedBigIntegerWithNoMin",
      "BigNumberPropertyParameterTypesTest#shrinkingNegativeBigDecimal",
      "BigNumberPropertyParameterTypesTest#shrinkingPositiveBigDecimal",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithMalformedMax",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithMalformedMin",
      "BigNumberPropertyParameterTypesTest#shrinkingNegativeBigInteger",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithNoMinGreaterSpecifiedPrecision",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithBackwardsRange",
      "BigNumberPropertyParameterTypesTest#shrinkingPositiveBigInteger",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithMinAndMaxGreaterSpecifiedPrecision",
      "BigNumberPropertyParameterTypesTest#bigDecimal",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithNoMax",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithNoMin",
      "BigNumberPropertyParameterTypesTest#shrinkingBigIntegerStraddlingZero",
      "BigNumberPropertyParameterTypesTest#bigInteger",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithNoMaxGreaterSpecifiedPrecision",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithMinAndMaxLesserSpecifiedPrecision",
      "BigNumberPropertyParameterTypesTest#rangedBigIntegerWithBackwardsRange",
      "BigNumberPropertyParameterTypesTest#bigDecimalByAggregateAnnotations",
      "BigNumberPropertyParameterTypesTest#rangedBigIntegerWithMalformedMax",
      "BigNumberPropertyParameterTypesTest#rangedBigIntegerWithMalformedMin",
      "BigNumberPropertyParameterTypesTest#shrinkingBigDecimalStraddlingZero",
      "BigNumberPropertyParameterTypesTest#bigDecimalWithSpecifiedPrecision",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithNoMinLesserSpecifiedPrecision",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithNoMaxLesserSpecifiedPrecision",
      "BigNumberPropertyParameterTypesTest#rangedBigIntegerWithMinAndMax",
      "BigNumberPropertyParameterTypesTest#rangedBigDecimalWithMinAndMax",
      "IntegerComparatorTest#symmetry",
      "PrimitiveShortPropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveShortPropertyParameterTest#verifyInteractionWithRandomness",
      "RangedBigDecimalNoMaxWithLesserSpecifiedPrecisionPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalNoMaxWithLesserSpecifiedPrecisionPropertyParameterTest#verifyInteractionWithRandomness",
      "WrapperBytePropertyParameterTest#producesExpectedRandomValues",
      "WrapperBytePropertyParameterTest#verifyInteractionWithRandomness",
      "SetOfWrapperBooleanPropertyParameterTest#producesExpectedRandomValues",
      "SetOfWrapperBooleanPropertyParameterTest#verifyInteractionWithRandomness",
      "SSNTest#wellFormedSSN",
      "SupplierPropertyParameterTest#supplyingUpperBounded",
      "SupplierPropertyParameterTest#supplyingInts",
      "SupplierPropertyParameterTest#supplyingUnresolvedLists",
      "PrimitiveFloatPropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveFloatPropertyParameterTest#verifyInteractionWithRandomness",
      "Repro179#sameBiFuncTwice",
      "Repro179#sameFuncTwice",
      "PeriodPropertyParameterTypesTest#rangedPeriod",
      "PeriodPropertyParameterTypesTest#period",
      "PeriodPropertyParameterTypesTest#missingMax",
      "PeriodPropertyParameterTypesTest#missingMin",
      "PeriodPropertyParameterTypesTest#malformedMax",
      "PeriodPropertyParameterTypesTest#malformedMin",
      "PeriodPropertyParameterTypesTest#backwardsRange",
      "OptionalIntPropertyParameterTest#shrinking",
      "OptionalIntPropertyParameterTest#maybeAnInt",
      "PrimeFactorsPropertiesTest#factorsPassPrimalityTest",
      "PrimeFactorsPropertiesTest#factorsMultiplyToOriginal",
      "PrimeFactorsPropertiesTest#factorizationsAreUnique",
      "IntegerComparableTest#equalsConsistency",
      "SizeConstrainedListPropertyParameterTypesTest#shrinkingSizeConstrainedLists",
      "SizeConstrainedListPropertyParameterTypesTest#outOfWhackSizeRange",
      "SizeConstrainedListPropertyParameterTypesTest#sizeConstrainedLists",
      "DoublePredicatePropertyParameterTest#works",
      "MapPropertyParameterTypesTest#iterableOfUpperBoundToHuh",
      "MapPropertyParameterTypesTest#huhToMapOfIntegerToString",
      "MapPropertyParameterTypesTest#upperBoundToHuh",
      "MapPropertyParameterTypesTest#arrayOfDateToHuh",
      "MapPropertyParameterTypesTest#huhToUpperBound",
      "MapPropertyParameterTypesTest#huhToListOfHuh",
      "MapPropertyParameterTypesTest#shrinkingMapOfIntegerToMapOfByteToShort",
      "MapPropertyParameterTypesTest#huhToSetOfLowerBound",
      "MapPropertyParameterTypesTest#huhToHuh",
      "MapPropertyParameterTypesTest#huhToArrayOfSerializable",
      "MapPropertyParameterTypesTest#huhToListOfUpperBound",
      "MapPropertyParameterTypesTest#mapOfIntegerToStringToMapOfShortToDate",
      "MapPropertyParameterTypesTest#setOfHuhToHuh",
      "MapPropertyParameterTypesTest#lowerBoundToHuh",
      "MapPropertyParameterTypesTest#mapMerging",
      "MapPropertyParameterTypesTest#collectionOfLowerBoundToHuh",
      "MapPropertyParameterTypesTest#huhToLowerBound",
      "ClockPropertyParameterTypesTest#rangedClock",
      "ClockPropertyParameterTypesTest#missingMax",
      "ClockPropertyParameterTypesTest#missingMin",
      "ClockPropertyParameterTypesTest#clock",
      "ClockPropertyParameterTypesTest#malformedMax",
      "ClockPropertyParameterTypesTest#malformedMin",
      "ClockPropertyParameterTypesTest#backwardsRange",
      "DoubleBinaryOperatorPropertyParameterTest#works",
      "ListOfExtendsShortPropertyParameterTest#producesExpectedRandomValues",
      "ListOfExtendsShortPropertyParameterTest#verifyInteractionWithRandomness",
      "LocalDatePropertyParameterTypesTest#rangedLocalDate",
      "LocalDatePropertyParameterTypesTest#localDate",
      "LocalDatePropertyParameterTypesTest#missingMax",
      "LocalDatePropertyParameterTypesTest#missingMin",
      "LocalDatePropertyParameterTypesTest#malformedFormat",
      "LocalDatePropertyParameterTypesTest#malformedMax",
      "LocalDatePropertyParameterTypesTest#malformedMin",
      "LocalDatePropertyParameterTypesTest#backwardsRange",
      "IntConsumerPropertyParameterTest#check",
      "BiConsumerPropertyParameterTest#check",
      "ToIntFunctionPropertyParameterTest#unresolvedArgType",
      "MonthDayPropertyParameterTypesTest#monthDay",
      "MonthDayPropertyParameterTypesTest#missingMax",
      "MonthDayPropertyParameterTypesTest#missingMin",
      "MonthDayPropertyParameterTypesTest#malformedFormat",
      "MonthDayPropertyParameterTypesTest#malformedMax",
      "MonthDayPropertyParameterTypesTest#malformedMin",
      "MonthDayPropertyParameterTypesTest#rangedMonthDay",
      "MonthDayPropertyParameterTypesTest#backwardsRange",
      "ListOfWrapperLongPropertyParameterTest#producesExpectedRandomValues",
      "ListOfWrapperLongPropertyParameterTest#verifyInteractionWithRandomness",
      "OptionalPropertyParameterTest#maybeAString",
      "OptionalPropertyParameterTest#shrinking",
      "DoubleConsumerPropertyParameterTest#check",
      "LongConsumerPropertyParameterTest#check",
      "IntSupplierPropertyParameterTest#works",
      "Primitive2DArrayPropertyParameterTypesTest#wrapper2DIntegerArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DByteArray",
      "Primitive2DArrayPropertyParameterTypesTest#wrapper2DCharacterArray",
      "Primitive2DArrayPropertyParameterTypesTest#wrapper2DLongArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DDoubleArray",
      "Primitive2DArrayPropertyParameterTypesTest#wrapper2DShortArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DShortArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DLongArray",
      "Primitive2DArrayPropertyParameterTypesTest#wrapper2DFloatArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DFloatArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DBooleanArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DIntegerArray",
      "Primitive2DArrayPropertyParameterTypesTest#wrapper2DByteArray",
      "Primitive2DArrayPropertyParameterTypesTest#wrapperDoubleArray",
      "Primitive2DArrayPropertyParameterTypesTest#primitive2DCharacterArray",
      "Primitive2DArrayPropertyParameterTypesTest#wrapper2DBooleanArray",
      "LongFunctionPropertyParameterTest#toBoolean",
      "LongToDoubleFunctionPropertyParameterTest#works",
      "UnaryOperatorPropertyParameterTest#resolvedTypes",
      "UnaryOperatorPropertyParameterTest#callingDefaultFunctionMethod",
      "UnaryOperatorPropertyParameterTest#unresolvedTypes",
      "FunctionPropertyParameterTest#lambdasArePureFunctions",
      "FunctionPropertyParameterTest#resolvedTypes",
      "FunctionPropertyParameterTest#unresolvedArgType",
      "FunctionPropertyParameterTest#callingDefaultFunctionMethod",
      "FunctionPropertyParameterTest#unresolvedTypes",
      "MapOfIntegerToFloatPropertyParameterTest#producesExpectedRandomValues",
      "MapOfIntegerToFloatPropertyParameterTest#verifyInteractionWithRandomness",
      "RangedPrimitiveIntegerPropertyParameterTest#producesExpectedRandomValues",
      "RangedPrimitiveIntegerPropertyParameterTest#verifyInteractionWithRandomness",
      "WrapperFloatPropertyParameterTest#producesExpectedRandomValues",
      "WrapperFloatPropertyParameterTest#verifyInteractionWithRandomness",
      "TimeZonePropertyParameterTest#producesExpectedRandomValues",
      "TimeZonePropertyParameterTest#verifyInteractionWithRandomness",
      "ToDoubleFunctionPropertyParameterTest#unresolvedArgType",
      "EitherTest#withRanges",
      "ToDoubleBiFunctionPropertyParameterTest#unresolvedTypes",
      "RFC4122Version3PropertyParameterTest#producesExpectedRandomValues",
      "RFC4122Version3PropertyParameterTest#verifyInteractionWithRandomness",
      "RangedBigIntegerPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigIntegerPropertyParameterTest#verifyInteractionWithRandomness",
      "LongBinaryOperatorPropertyParameterTest#works",
      "TreePropertyTest#depthConstrained",
      "TreePropertyTest#deepestLeafConstrained",
      "ConsumerPropertyParameterTest#check",
      "ObjDoubleConsumerPropertyParameterTest#check",
      "BigDecimalPropertyParameterTest#producesExpectedRandomValues",
      "BigDecimalPropertyParameterTest#verifyInteractionWithRandomness",
      "LocalDateTimePropertyParameterTypesTest#missingMax",
      "LocalDateTimePropertyParameterTypesTest#missingMin",
      "LocalDateTimePropertyParameterTypesTest#localDateTime",
      "LocalDateTimePropertyParameterTypesTest#malformedFormat",
      "LocalDateTimePropertyParameterTypesTest#malformedMax",
      "LocalDateTimePropertyParameterTypesTest#malformedMin",
      "LocalDateTimePropertyParameterTypesTest#rangedLocalDateTime",
      "LocalDateTimePropertyParameterTypesTest#backwardsRange",
      "CharsetPropertyParameterTest#producesExpectedRandomValues",
      "CharsetPropertyParameterTest#verifyInteractionWithRandomness",
      "WrapperIntegerPropertyParameterTest#producesExpectedRandomValues",
      "WrapperIntegerPropertyParameterTest#verifyInteractionWithRandomness",
      "StringPropertyParameterTypesTest#inDefaultCharset",
      "StringPropertyParameterTypesTest#inSomeOtherCharset",
      "StringPropertyParameterTypesTest#fromAnyStringSource",
      "BooleanSupplierPropertyParameterTest#works",
      "PrimitiveIntegerPropertyParameterTest#producesExpectedRandomValues",
      "PrimitiveIntegerPropertyParameterTest#verifyInteractionWithRandomness",
      "PropertiesPropertyParameterTypesTest#marked",
      "PropertiesPropertyParameterTypesTest#unmarked",
      "DoubleSupplierPropertyParameterTest#works",
      "SetPropertyParameterTypesTest#shrinkingUpperBounded",
      "SetPropertyParameterTypesTest#lowerBounded",
      "SetPropertyParameterTypesTest#upperBounded",
      "SetPropertyParameterTypesTest#setOfInteger",
      "SetPropertyParameterTypesTest#huh",
      "SetPropertyParameterTypesTest#intArray",
      "SetPropertyParameterTypesTest#setOfLowerBounded",
      "SetPropertyParameterTypesTest#setOfHuh",
      "SetPropertyParameterTypesTest#setOfUpperBounded",
      "OffsetDateTimePropertyParameterTypesTest#rangedOffsetDateTime",
      "OffsetDateTimePropertyParameterTypesTest#offsetDateTime",
      "OffsetDateTimePropertyParameterTypesTest#missingMax",
      "OffsetDateTimePropertyParameterTypesTest#missingMin",
      "OffsetDateTimePropertyParameterTypesTest#malformedFormat",
      "OffsetDateTimePropertyParameterTypesTest#malformedMax",
      "OffsetDateTimePropertyParameterTypesTest#malformedMin",
      "OffsetDateTimePropertyParameterTypesTest#backwardsRange",
      "PrimitiveArrayPropertyParameterTypesTest#shrinkingPrimitiveIntegerArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveByteArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperByteArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperFloatArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveDoubleArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveShortArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperBooleanArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperIntegerArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveBooleanArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveIntegerArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveCharacterArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveLongArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperCharacterArray",
      "PrimitiveArrayPropertyParameterTypesTest#primitiveFloatArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperLongArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperShortArray",
      "PrimitiveArrayPropertyParameterTypesTest#wrapperDoubleArray",
      "DistinctMapPropertyParameterTypesTest#shrinkingDistinctMaps",
      "DistinctMapPropertyParameterTypesTest#distinctMaps",
      "LongUnaryOperatorPropertyParameterTest#works",
      "RFC4122Version4PropertyParameterTest#producesExpectedRandomValues",
      "RFC4122Version4PropertyParameterTest#verifyInteractionWithRandomness",
      "ToIntBiFunctionPropertyParameterTest#unresolvedTypes",
      "BitSetPropertyParameterTest#producesExpectedRandomValues",
      "BitSetPropertyParameterTest#verifyInteractionWithRandomness",
      "RangedDatePropertyParameterTest#producesExpectedRandomValues",
      "RangedDatePropertyParameterTest#verifyInteractionWithRandomness",
      "WrapperDoublePropertyParameterTest#producesExpectedRandomValues",
      "WrapperDoublePropertyParameterTest#verifyInteractionWithRandomness",
      "WrapperLongPropertyParameterTest#producesExpectedRandomValues",
      "WrapperLongPropertyParameterTest#verifyInteractionWithRandomness",
      "NumbersPropertiesTest#nonNegativity",
      "DatePropertyParameterTypesTest#rangedDate",
      "DatePropertyParameterTypesTest#missingMax",
      "DatePropertyParameterTypesTest#missingMin",
      "DatePropertyParameterTypesTest#date",
      "DatePropertyParameterTypesTest#malformedFormat",
      "DatePropertyParameterTypesTest#malformedMax",
      "DatePropertyParameterTypesTest#malformedMin",
      "DatePropertyParameterTypesTest#backwardsRange",
      "PrimitivePropertyParameterTypesTest#wrapperCharacter",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedWrapperDouble",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedPrimitiveDouble",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedWrapperByte",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedWrapperLong",
      "PrimitivePropertyParameterTypesTest#rangedWrapperInteger",
      "PrimitivePropertyParameterTypesTest#rangedPrimitiveByte",
      "PrimitivePropertyParameterTypesTest#rangedPrimitiveLong",
      "PrimitivePropertyParameterTypesTest#primitiveFloat",
      "PrimitivePropertyParameterTypesTest#primitiveShort",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveFloatStraddlingZero",
      "PrimitivePropertyParameterTypesTest#voidParameter",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveDoubleStraddlingZero",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedWrapperCharacter",
      "PrimitivePropertyParameterTypesTest#rangedPrimitiveInteger",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedWrapperCharacter",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveIntegerStraddlingZero",
      "PrimitivePropertyParameterTypesTest#wrapperInteger",
      "PrimitivePropertyParameterTypesTest#rangedPrimitiveCharacter",
      "PrimitivePropertyParameterTypesTest#valuesOfNotApplicableOnNonBooleanNonEnum",
      "PrimitivePropertyParameterTypesTest#primitiveDouble",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveInteger",
      "PrimitivePropertyParameterTypesTest#rangedWrapperDouble",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveByte",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveLong",
      "PrimitivePropertyParameterTypesTest#rangedWrapperByte",
      "PrimitivePropertyParameterTypesTest#rangedWrapperLong",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveFloat",
      "PrimitivePropertyParameterTypesTest#wrapperBooleanWithValuesOf",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveShort",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeInteger",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeByte",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeLong",
      "PrimitivePropertyParameterTypesTest#primitiveInteger",
      "PrimitivePropertyParameterTypesTest#rangedWrapperFloat",
      "PrimitivePropertyParameterTypesTest#rangedWrapperShort",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveLongStraddlingZero",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedPrimitiveByte",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedPrimitiveLong",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveByteStraddlingZero",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveShortStraddlingZero",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedWrapperByte",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedWrapperLong",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedPrimitiveInteger",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedPrimitiveInteger",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeFloat",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeShort",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedWrapperFloat",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedWrapperShort",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedWrapperDouble",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedPrimitiveCharacter",
      "PrimitivePropertyParameterTypesTest#primitiveByte",
      "PrimitivePropertyParameterTypesTest#primitiveLong",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeDouble",
      "PrimitivePropertyParameterTypesTest#wrapperBoolean",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedPrimitiveByte",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedPrimitiveLong",
      "PrimitivePropertyParameterTypesTest#rangedPrimitiveDouble",
      "PrimitivePropertyParameterTypesTest#rangedWrapperCharacter",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedWrapperFloat",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedPrimitiveFloat",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedWrapperShort",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedPrimitiveShort",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveDouble",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedPrimitiveFloat",
      "PrimitivePropertyParameterTypesTest#wrapperFloat",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedPrimitiveShort",
      "PrimitivePropertyParameterTypesTest#wrapperShort",
      "PrimitivePropertyParameterTypesTest#primitiveCharacter",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedPrimitiveCharacter",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedPrimitiveDouble",
      "PrimitivePropertyParameterTypesTest#primitiveBoolean",
      "PrimitivePropertyParameterTypesTest#wrapperByte",
      "PrimitivePropertyParameterTypesTest#wrapperLong",
      "PrimitivePropertyParameterTypesTest#rightOpenEndedRangedWrapperInteger",
      "PrimitivePropertyParameterTypesTest#wrapperDouble",
      "PrimitivePropertyParameterTypesTest#primitiveBooleanWithValuesOf",
      "PrimitivePropertyParameterTypesTest#rangedPrimitiveFloat",
      "PrimitivePropertyParameterTypesTest#leftOpenEndedRangedWrapperInteger",
      "PrimitivePropertyParameterTypesTest#rangedPrimitiveShort",
      "CallablePropertyParameterTest#callable",
      "SetOfExtendsBytePropertyParameterTest#producesExpectedRandomValues",
      "SetOfExtendsBytePropertyParameterTest#verifyInteractionWithRandomness",
      "ContractTestWithArrayTypeParameterTest#gitHubIssue144",
      "DistinctArrayPropertyParameterTypesTest#shrinkingDistinctArrays",
      "DistinctArrayPropertyParameterTypesTest#distinctArrays",
      "IntToLongFunctionPropertyParameterTest#works",
      "ListOfHuhPropertyParameterTest#producesExpectedRandomValues",
      "ListOfHuhPropertyParameterTest#verifyInteractionWithRandomness",
      "DatePropertyParameterTest#producesExpectedRandomValues",
      "DatePropertyParameterTest#verifyInteractionWithRandomness",
      "ListOfSuperLongPropertyParameterTest#producesExpectedRandomValues",
      "ListOfSuperLongPropertyParameterTest#verifyInteractionWithRandomness",
      "ConstrainedPrimitiveIntegerPropertyParameterTest#producesExpectedRandomValues",
      "ConstrainedPrimitiveIntegerPropertyParameterTest#verifyInteractionWithRandomness",
      "LongToIntFunctionPropertyParameterTest#works",
      "RangedBigDecimalPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalPropertyParameterTest#verifyInteractionWithRandomness",
      "BiFunctionPropertyParameterTest#lambdasArePureFunctions",
      "BiFunctionPropertyParameterTest#resolvedTypes",
      "BiFunctionPropertyParameterTest#callingDefaultFunctionMethod",
      "BiFunctionPropertyParameterTest#unresolvedTypes",
      "BiFunctionPropertyParameterTest#unresolvedFirstArgType",
      "BiFunctionPropertyParameterTest#unresolvedSecondArgType",
      "StringPropertyParameterTest#producesExpectedRandomValues",
      "StringPropertyParameterTest#verifyInteractionWithRandomness",
      "DayOfWeekPropertyParameterTypesTest#dayOfWeek",
      "ToLongFunctionPropertyParameterTest#unresolvedArgType",
      "RangedBigDecimalNoMinWithGreaterSpecifiedPrecisionPropertyParameterTest#producesExpectedRandomValues",
      "RangedBigDecimalNoMinWithGreaterSpecifiedPrecisionPropertyParameterTest#verifyInteractionWithRandomness",
      "FunctionPropertyParameterTypesTest#superShortToInteger",
      "FunctionPropertyParameterTypesTest#fooToZilch",
      "FunctionPropertyParameterTypesTest#arrayOfFunction",
      "IntBinaryOperatorPropertyParameterTest#works",
      "OptionalLongPropertyParameterTest#shrinking",
      "OptionalLongPropertyParameterTest#maybeALong",
      "FunctionOfStringToIntPropertyParameterTest#producesExpectedRandomValues",
      "FunctionOfStringToIntPropertyParameterTest#verifyInteractionWithRandomness",
      "SizeConstrainedMapPropertyParameterTypesTest#outOfWhackSizeRange",
      "SizeConstrainedMapPropertyParameterTypesTest#shrinkingSizeConstrainedMaps",
      "SizeConstrainedMapPropertyParameterTypesTest#sizeConstrainedMaps"
    ]
  },
  "com.pholser:junit-quickcheck-core": {
    "junit-quickcheck": [
      "BigNumberPropertyParameterTypesTest#shrinkingPositiveBigDecimal",
      "BigNumberPropertyParameterTypesTest#shrinkingNegativeBigInteger",
      "BigNumberPropertyParameterTypesTest#shrinkingPositiveBigInteger",
      "BigNumberPropertyParameterTypesTest#shrinkingBigIntegerStraddlingZero",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveFloatStraddlingZero",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveDoubleStraddlingZero",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveIntegerStraddlingZero",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveInteger",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveByte",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveLong",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveFloat",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveShort",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeInteger",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeLong",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveLongStraddlingZero",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveShortStraddlingZero",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeFloat",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeShort",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitiveNegativeDouble",
      "PrimitivePropertyParameterTypesTest#shrinkingPrimitivePositiveDouble"
    ]
  },
  "ru.vyarus:generics-resolver": {
    "junit-quickcheck": [
      "PredicatePropertyParameterTest#callingDefaultPredicateMethod",
      "BiPredicatePropertyParameterTest#callingDefaultPredicateMethod",
      "SupplierPropertyParameterTest#supplyingUpperBounded",
      "GenericArrayPropertyParameterTypesTest#arrayOfBoundedUnresolvedType",
      "GenericArrayPropertyParameterTypesTest#arrayOfUnresolvedParameterizedLowerBoundedType",
      "GenericArrayPropertyParameterTypesTest#arrayOfUnresolvedParameterizedUpperBoundedType",
      "GenericArrayPropertyParameterTypesTest#arrayOfUnresolvedParameterizedType",
      "GenericArrayPropertyParameterTypesTest#arrayOfUnresolvedType",
      "GenericArrayPropertyParameterTypesTest#arrayOfUnresolvedParameterizedNestedBoundedType",
      "FunctionPropertyParameterTest#callingDefaultFunctionMethod"
    ]
  },
  "org.apache.rocketmq:rocketmq-client": {
    "rocketmq-spring": [
      "RocketMQAutoConfigurationTest#testRocketMQListenerWithCustomObjectMapper"
    ]
  },
  "io.dropwizard.metrics:metrics-graphite": {
    "metrics-spring": [
      "TestSuite#realReporters"
    ]
  },
  "io.dropwizard.metrics:metrics-ganglia": {
    "metrics-spring": [
      "TestSuite#realReporters"
    ]
  },
  "com.google.appengine:appengine-testing": {
    "objectify": [
      "TestSuite#setUpGAE",
      "TestSuite"
    ]
  },
  "io.netty:netty-codec": {
    "aws-sdk-java-v2": [
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsInvalid_ThrowsException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromDecompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsInvalid_ThrowException",
      "AwsJsonAsyncCrc32ChecksumTests#clientCalculatesCrc32FromCompressedData_ExtraData_WhenCrc32IsValid",
      "AwsJsonAsyncCrc32ChecksumTests#useGzipFalse_WhenCrc32IsValid",
      "MultipartUploadTest#asyncCreateMultipartUpload_shouldHaveUploadsQueryParam",
      "ExecutionInterceptorTest#async_interceptorException_failureInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingInput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_streamingOutput_success_allInterceptorMethodsCalled",
      "ExecutionInterceptorTest#async_serviceException_failureInterceptorMethodsCalled",
      "AsyncTimeoutTest#attemptsTimeout_shouldThrowApiCallAttemptTimeoutException",
      "AsyncTimeoutTest#attemptFinishWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_slowTransformer_shouldThrowApiCallAttemptTimeoutException",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_finishedWithinTime_shouldSucceed",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#firstAttemptTimeout_retryFinishWithInTime500_shouldNotTimeout",
      "AsyncApiCallAttemptsTimeoutTest#allAttemtsNotFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#nonstreamingOperation200_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallAttemptsTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncAwsJsonRetryTest#retryPolicyNone_shouldNotRetry",
      "AsyncAwsJsonRetryTest#shouldRetryOnRetryableAwsErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOnAwsThrottlingErrorCode",
      "AsyncAwsJsonRetryTest#shouldRetryOn500",
      "AsyncResponseThreadingTest#completionWithNioThreadWorksCorrectly",
      "EndpointOverrideTest#getObjectAsync_shouldNotThrowNPE",
      "XmlMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "AsyncResponseTransformerTest#jsonClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "AsyncResponseTransformerTest#xmlClient_nonRetriableError_shouldNotifyAsyncResponseTransformer",
      "QueryMetadataTest#requestIdInHeaderButNotXml_ShouldContainsResponseMetadata",
      "QueryMetadataTest#asyncResponse_shouldContainResponseMetadata",
      "ChecksumResetsOnRetryTest#asyncPutObject_resetsChecksumOnRetry",
      "ChecksumResetsOnRetryTest#asyncGetObject_resetsChecksumOnRetry",
      "AsyncFaultTest#subscriberCancel_correctExceptionThrown",
      "SdkHttpResponseTest#asyncStreamingMethodShouldContainSdkHttpDate",
      "SdkHttpResponseTest#asyncNonStreamingShouldContainsSdkHttpData",
      "ClockSkewAdjustmentTest#clockSkewDoesNotAdjustOnNonClockSkewErrors",
      "ClockSkewAdjustmentTest#clockSkewAdjustsOnClockSkewErrors",
      "ClockSkewAdjustmentTest#clientClockSkewAdjustsWithoutRetries",
      "CustomResponseMetadataTest#asyncStreaming_shouldContainResponseMetadata",
      "CustomResponseMetadataTest#asyncNonStreaming_shouldContainResponseMetadata",
      "AsyncApiCallTimeoutTest#increaseTimeoutInRequestOverrideConfig_shouldTakePrecedence",
      "AsyncApiCallTimeoutTest#streamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation500_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_finishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retrySucceeded_FinishedWithinTime_shouldNotTimeout",
      "AsyncApiCallTimeoutTest#nonstreamingOperation_retryWouldSucceed_notFinishedWithinTime_shouldTimeout",
      "AsyncApiCallTimeoutTest#streamingOperation_notFinishedWithinTime_shouldTimeout",
      "AsyncHttpClientApiCallTimeoutTests#successfulResponse_SlowResponseHandler_ThrowsApiCallTimeoutException",
      "AsyncHttpClientApiCallTimeoutTests#errorResponse_SlowErrorResponseHandler_ThrowsApiCallTimeoutException",
      "PaginatorInUserAgentTest#asyncPaginator_shouldHavePaginatorUserAgent"
    ]
  },
  "com.github.tomakehurst:wiremock": {
    "aws-sdk-java-v2": [
      "UrlConnectionHttpClientWireMockTest#supportsResponseCode200HEAD",
      "UrlConnectionHttpClientWireMockTest#supportsResponseCode403HEAD",
      "UrlConnectionHttpClientWithCustomCreateWireMockTest#supportsResponseCode200HEAD",
      "UrlConnectionHttpClientWithCustomCreateWireMockTest#supportsResponseCode403HEAD",
      "ApacheHttpClientWireMockTest#supportsResponseCode200HEAD",
      "ApacheHttpClientWireMockTest#supportsResponseCode403HEAD"
    ]
  },
  "com.alibaba:dubbo": {
    "sofa-tracer": [
      "DubboSofaTracerTest#testTracer"
    ]
  },
  "com.openhtmltopdf:openhtmltopdf-core": {
    "openhtmltopdf": [
      "TextVisualRegressionTest#testLetterSpacingBidi"
    ]
  },
  "io.swagger.parser.v3:swagger-parser-v3": {
    "vertx-web": [
      "OpenAPI3SchemasTest#testLocalRelativeRef",
      "OpenAPI3SchemasTest#test14",
      "OpenAPI3SchemasTest#test15",
      "OpenAPI3SchemasTest#test16",
      "OpenAPI3SchemasTest#test1",
      "OpenAPI3SchemasTest#test2",
      "OpenAPI3SchemasTest#test3",
      "OpenAPI3SchemasTest#test5",
      "OpenAPI3SchemasTest#test6",
      "OpenAPI3RouterFactoryTest#commaSeparatedMultipartEncoding",
      "OpenAPI3RouterFactoryTest#mountCustomNotImplementedHandler",
      "OpenAPI3RouterFactoryTest#mountNotImplementedHandler",
      "OpenAPI3RouterFactoryTest#notMountValidationFailureHandler",
      "OpenAPI3RouterFactoryTest#failLoadSpecFromFile",
      "OpenAPI3RouterFactoryTest#pathResolverShouldNotCreateRegex",
      "OpenAPI3RouterFactoryTest#failLoadSpecFromURL",
      "OpenAPI3RouterFactoryTest#testSharedRequestBody",
      "OpenAPI3RouterFactoryTest#consumesTest",
      "OpenAPI3RouterFactoryTest#notRequireSecurityHandler",
      "OpenAPI3RouterFactoryTest#customBodyHandlerTest",
      "OpenAPI3RouterFactoryTest#mountValidationFailureHandler",
      "OpenAPI3RouterFactoryTest#mountHandlerEncodedTest",
      "OpenAPI3RouterFactoryTest#mountHandlerTest",
      "OpenAPI3RouterFactoryTest#loadSpecFromFile",
      "OpenAPI3RouterFactoryTest#mountMultipleHandlers",
      "OpenAPI3RouterFactoryTest#requireSecurityHandler",
      "OpenAPI3RouterFactoryTest#mountMultipleSecurityHandlers",
      "OpenAPI3RouterFactoryTest#mountSecurityHandlers",
      "OpenAPI3RouterFactoryTest#mountCustomValidationFailureHandler",
      "OpenAPI3RouterFactoryTest#mountHandlersOrderTest",
      "OpenAPI3RouterFactoryTest#producesTest",
      "OpenAPI3RouterFactoryTest#exposeConfigurationTest",
      "OpenAPI3RouterFactoryTest#wildcardMultipartEncoding",
      "OpenAPI3RouterFactoryTest#loadSpecFromURL",
      "OpenAPI3RouterFactoryTest#testGlobalSecurityHandler",
      "OpenAPI3RouterFactoryTest#testJsonEmptyBody",
      "OpenAPI3RouterFactoryTest#mountFailureHandlerTest",
      "OpenAPI3RouterFactoryTest#loadWrongSpecFromFile",
      "OpenAPI3RouterFactoryTest#loadSpecFromURLWithAuthorizationValues",
      "OpenAPI3RouterFactoryTest#notMountNotImplementedHandler",
      "OpenAPI3RouterFactoryTest#addGlobalHandlersTest",
      "OpenAPI3PathResolverTest#semicolonInASimplePathParam",
      "OpenAPI3PathResolverTest#complexMatrixArrayNotExploded",
      "OpenAPI3PathResolverTest#dotInASimplePathParam",
      "OpenAPI3PathResolverTest#matrixWithSemicolon",
      "OpenAPI3PathResolverTest#shouldNotGenerateRegex",
      "OpenAPI3PathResolverTest#shouldNotHaveEmptyStringQuoting",
      "OpenAPI3PathResolverTest#complexEncodingMultiSimpleLabelMixed",
      "OpenAPI3MultipleFilesValidationTest#testQueryParameterArrayDefaultStyle",
      "OpenAPI3MultipleFilesValidationTest#testQueryParameterArrayDefaultStyleFailure",
      "OpenAPI3MultipleFilesValidationTest#testDefaultIntQueryParameter",
      "OpenAPI3MultipleFilesValidationTest#testQueryExpandedObjectTestOnlyAdditionalProperties",
      "OpenAPI3MultipleFilesValidationTest#testQueryOptionalFormExplodeObject",
      "OpenAPI3MultipleFilesValidationTest#testQueryParameterNotRequired",
      "OpenAPI3MultipleFilesValidationTest#testQueryParameterAnyOfFailure",
      "OpenAPI3MultipleFilesValidationTest#testFormArrayParameterFailure",
      "OpenAPI3MultipleFilesValidationTest#testQueryParameterByteFormat",
      "OpenAPI3MultipleFilesValidationTest#testJsonBody",
      "OpenAPI3MultipleFilesValidationTest#testNullJson",
      "OpenAPI3MultipleFilesValidationTest#testFormURLEncodedCharParameter",
      "OpenAPI3MultipleFilesValidationTest#testJsonBodyWithDate",
      "OpenAPI3MultipleFilesValidationTest#testJsonBodyFailure",
      "OpenAPI3MultipleFilesValidationTest#testEmptyBody",
      "OpenAPI3MultipleFilesValidationTest#testPathParameterFailure",
      "OpenAPI3MultipleFilesValidationTest#testCookieExpandedObjectTestOnlyAdditionalProperties",
      "OpenAPI3MultipleFilesValidationTest#testAllowEmptyValueQueryParameter",
      "OpenAPI3MultipleFilesValidationTest#testAdditionalPropertiesJson",
      "OpenAPI3MultipleFilesValidationTest#testQueryParameterArrayExploded",
      "OpenAPI3MultipleFilesValidationTest#testQueryParameterAnyOf",
      "OpenAPI3MultipleFilesValidationTest#testAllOfQueryParam",
      "OpenAPI3MultipleFilesValidationTest#testDefaultStringQueryParameter",
      "OpenAPI3MultipleFilesValidationTest#testDefaultDoubleQueryParameter",
      "OpenAPI3MultipleFilesValidationTest#testAllOfQueryParamWithDefault",
      "OpenAPI3MultipleFilesValidationTest#testComplexMultipart",
      "OpenAPI3MultipleFilesValidationTest#testEmptyParametersNotNull",
      "OpenAPI3MultipleFilesValidationTest#testDefaultFloatQueryParameter",
      "OpenAPI3MultipleFilesValidationTest#testLoadSampleOperationObject",
      "OpenAPI3MultipleFilesValidationTest#testQueryExpandedObjectTestOnlyAdditionalPropertiesFailure",
      "OpenAPI3MultipleFilesValidationTest#testJsonBodyFailureErrorMessage",
      "OpenAPI3MultipleFilesValidationTest#testCookieExpandedObjectTestOnlyAdditionalPropertiesFailure",
      "OpenAPI3MultipleFilesValidationTest#testAllOfQueryParamFailure",
      "OpenAPI3MultipleFilesValidationTest#testPathParameter",
      "OpenAPI3MultipleFilesValidationTest#testFormArrayParameter",
      "OpenAPI3MultipleFilesValidationTest#testQueryOptionalFormExplodeObjectFailure",
      "OpenAPI3ParametersUnitTest#testPathMatrixNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testPathLabelExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMultiLabelMatrix",
      "OpenAPI3ParametersUnitTest#testPathLabelExplodeString",
      "OpenAPI3ParametersUnitTest#testPathSimpleNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathLabelExplodeArray",
      "OpenAPI3ParametersUnitTest#testPathSimpleNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryPipeDelimitedNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeObject",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeEmpty",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeString",
      "OpenAPI3ParametersUnitTest#testPathMatrixExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMatrixExplodeString",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleExplodeArray",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeArray",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeEmpty",
      "OpenAPI3ParametersUnitTest#testQueryDeepObjectExplodeObject",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeEmpty",
      "OpenAPI3ParametersUnitTest#testPathLabelNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testQuerySpaceDelimitedNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathLabelNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeEmpty",
      "OpenAPI3ParametersUnitTest#testPathSimpleExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMatrixNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathSimpleExplodeString",
      "OpenAPI3ParametersUnitTest#testPathMatrixNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQuerySpaceDelimitedNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryPipeDelimitedNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMatrixExplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeString",
      "OpenAPI3ParametersUnitTest#testPathMultiSimpleLabel",
      "OpenAPI3ParametersUnitTest#testPathSimpleNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testPathSimpleExplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleExplodeObject",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathLabelNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleExplodeString",
      "OpenAPI3ParametersUnitTest#testPathMultiSimpleMatrix",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeString",
      "OpenAPI3ServiceProxiesTest#serviceProxyWithReflectionsTest",
      "OpenAPI3ServiceProxiesTest#authorizedUserTest",
      "OpenAPI3ServiceProxiesTest#emptyOperationResultTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyDataObjectTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyWithTagsTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyTypedTest",
      "OpenAPI3ServiceProxiesTest#extraPayloadTest",
      "OpenAPI3ServiceProxiesTest#binaryDataTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyManualFailureTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyManualTest",
      "OpenAPI3ValidationTest#testQueryParameterArrayDefaultStyle",
      "OpenAPI3ValidationTest#testQueryParameterArrayDefaultStyleFailure",
      "OpenAPI3ValidationTest#testDefaultIntQueryParameter",
      "OpenAPI3ValidationTest#testQueryExpandedObjectTestOnlyAdditionalProperties",
      "OpenAPI3ValidationTest#testQueryOptionalFormExplodeObject",
      "OpenAPI3ValidationTest#testQueryParameterNotRequired",
      "OpenAPI3ValidationTest#testQueryParameterAnyOfFailure",
      "OpenAPI3ValidationTest#testFormArrayParameterFailure",
      "OpenAPI3ValidationTest#testQueryParameterByteFormat",
      "OpenAPI3ValidationTest#testJsonBody",
      "OpenAPI3ValidationTest#testNullJson",
      "OpenAPI3ValidationTest#testFormURLEncodedCharParameter",
      "OpenAPI3ValidationTest#testJsonBodyWithDate",
      "OpenAPI3ValidationTest#testJsonBodyFailure",
      "OpenAPI3ValidationTest#testEmptyBody",
      "OpenAPI3ValidationTest#testPathParameterFailure",
      "OpenAPI3ValidationTest#testCookieExpandedObjectTestOnlyAdditionalProperties",
      "OpenAPI3ValidationTest#testAllowEmptyValueQueryParameter",
      "OpenAPI3ValidationTest#testAdditionalPropertiesJson",
      "OpenAPI3ValidationTest#testQueryParameterArrayExploded",
      "OpenAPI3ValidationTest#testQueryParameterAnyOf",
      "OpenAPI3ValidationTest#testAllOfQueryParam",
      "OpenAPI3ValidationTest#testDefaultStringQueryParameter",
      "OpenAPI3ValidationTest#testDefaultDoubleQueryParameter",
      "OpenAPI3ValidationTest#testAllOfQueryParamWithDefault",
      "OpenAPI3ValidationTest#testComplexMultipart",
      "OpenAPI3ValidationTest#testEmptyParametersNotNull",
      "OpenAPI3ValidationTest#testDefaultFloatQueryParameter",
      "OpenAPI3ValidationTest#testLoadSampleOperationObject",
      "OpenAPI3ValidationTest#testQueryExpandedObjectTestOnlyAdditionalPropertiesFailure",
      "OpenAPI3ValidationTest#testJsonBodyFailureErrorMessage",
      "OpenAPI3ValidationTest#testCookieExpandedObjectTestOnlyAdditionalPropertiesFailure",
      "OpenAPI3ValidationTest#testAllOfQueryParamFailure",
      "OpenAPI3ValidationTest#testPathParameter",
      "OpenAPI3ValidationTest#testFormArrayParameter",
      "OpenAPI3ValidationTest#testQueryOptionalFormExplodeObjectFailure",
      "OpenAPI3ServiceExtensionTest#pathAndOperationExtensionMapsMerge",
      "OpenAPI3ServiceExtensionTest#operationExtension",
      "OpenAPI3ServiceExtensionTest#pathAndOperationExtensionMerge",
      "OpenAPI3ServiceExtensionTest#pathExtension"
    ]
  },
  "io.vertx:vertx-web-client": {
    "vertx-web": [
      "HTTPRequestValidationTest#testFormMultipartParamWithIncludedTypes",
      "HTTPRequestValidationTest#testFormURLEncodedOverrideWithIncludedTypes",
      "HTTPRequestValidationTest#testFormURLEncodedParamWithIncludedTypes",
      "SockJSProtocolTest#testProtocol",
      "SockJSProtocolTest#testQuirks",
      "OpenAPI3RouterFactoryTest#commaSeparatedMultipartEncoding",
      "OpenAPI3RouterFactoryTest#consumesTest",
      "OpenAPI3RouterFactoryTest#customBodyHandlerTest",
      "OpenAPI3RouterFactoryTest#wildcardMultipartEncoding",
      "OpenAPI3MultipleFilesValidationTest#testFormArrayParameterFailure",
      "OpenAPI3MultipleFilesValidationTest#testFormURLEncodedCharParameter",
      "OpenAPI3MultipleFilesValidationTest#testComplexMultipart",
      "OpenAPI3MultipleFilesValidationTest#testFormArrayParameter",
      "OpenAPI3ParametersUnitTest#testPathMatrixNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testPathLabelExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMultiLabelMatrix",
      "OpenAPI3ParametersUnitTest#testPathLabelExplodeString",
      "OpenAPI3ParametersUnitTest#testPathSimpleNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathLabelExplodeArray",
      "OpenAPI3ParametersUnitTest#testPathSimpleNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryPipeDelimitedNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeObject",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeEmpty",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeString",
      "OpenAPI3ParametersUnitTest#testPathMatrixExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMatrixExplodeString",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleExplodeArray",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeArray",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeEmpty",
      "OpenAPI3ParametersUnitTest#testQueryDeepObjectExplodeObject",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormExplodeEmpty",
      "OpenAPI3ParametersUnitTest#testPathLabelNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testQuerySpaceDelimitedNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathLabelNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeEmpty",
      "OpenAPI3ParametersUnitTest#testPathSimpleExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMatrixNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathSimpleExplodeString",
      "OpenAPI3ParametersUnitTest#testPathMatrixNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQuerySpaceDelimitedNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testCookieFormNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryPipeDelimitedNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testPathMatrixExplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleNoexplodeString",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeObject",
      "OpenAPI3ParametersUnitTest#testQueryFormNoexplodeString",
      "OpenAPI3ParametersUnitTest#testPathMultiSimpleLabel",
      "OpenAPI3ParametersUnitTest#testPathSimpleNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testPathSimpleExplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleExplodeObject",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeObject",
      "OpenAPI3ParametersUnitTest#testPathLabelNoexplodeArray",
      "OpenAPI3ParametersUnitTest#testHeaderSimpleExplodeString",
      "OpenAPI3ParametersUnitTest#testPathMultiSimpleMatrix",
      "OpenAPI3ParametersUnitTest#testQueryFormExplodeString",
      "OpenAPI3ValidationTest#testFormArrayParameterFailure",
      "OpenAPI3ValidationTest#testFormURLEncodedCharParameter",
      "OpenAPI3ValidationTest#testComplexMultipart",
      "OpenAPI3ValidationTest#testFormArrayParameter"
    ]
  },
  "org.mvel:mvel2": {
    "vertx-web": [
      "MVELTemplateTest#testTemplateHandlerWithInclude"
    ]
  },
  "io.vertx:vertx-web-api-contract": {
    "vertx-web": [
      "OpenAPI3ServiceProxiesTest#serviceProxyWithReflectionsTest",
      "OpenAPI3ServiceProxiesTest#authorizedUserTest",
      "OpenAPI3ServiceProxiesTest#emptyOperationResultTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyDataObjectTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyWithTagsTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyTypedTest",
      "OpenAPI3ServiceProxiesTest#extraPayloadTest",
      "OpenAPI3ServiceProxiesTest#binaryDataTest",
      "OpenAPI3ServiceProxiesTest#serviceProxyManualTest",
      "OpenAPI3ServiceExtensionTest#pathAndOperationExtensionMapsMerge",
      "OpenAPI3ServiceExtensionTest#operationExtension",
      "OpenAPI3ServiceExtensionTest#pathAndOperationExtensionMerge",
      "OpenAPI3ServiceExtensionTest#pathExtension"
    ]
  },
  "com.squareup.okhttp3:mockwebserver": {
    "picasso2-okhttp3-downloader": [
      "OkHttp3DownloaderTest#networkPolicyNoCache",
      "OkHttp3DownloaderTest#networkPolicyNoStore",
      "OkHttp3DownloaderTest#readsContentLengthHeader",
      "OkHttp3DownloaderTest#offlineStaleResponse",
      "OkHttp3DownloaderTest#throwsResponseException",
      "OkHttp3DownloaderTest#shutdownClosesCache",
      "OkHttp3DownloaderTest#cachedResponse"
    ]
  },
  "org.apache.storm:storm-core": {
    "storm-crawler": [
      "ParserBoltTest#testMimeTypeWhileList",
      "ParserBoltTest#testRecursiveDoc"
    ]
  },
  "org.apache.poi:poi-ooxml": {
    "excel-streaming-reader": [
      "StreamingSheetTest#testEmptyCellShouldHaveGeneralStyle",
      "StreamingSheetTest#testLastRowNum",
      "StreamingReaderTest#testShouldHandleBlankSSTReference",
      "StreamingReaderTest#testClosingFiles",
      "StreamingReaderTest#testNullValueType",
      "StreamingReaderTest#testIteration",
      "StreamingReaderTest#testTypes",
      "StreamingReaderTest#testGaps",
      "StreamingReaderTest#testShouldReturnNullForMissingCellPolicy_RETURN_BLANK_AS_NULL",
      "StreamingReaderTest#testForumulaOutsideCellIgnored",
      "StreamingReaderTest#testSheetName_missingInFile",
      "StreamingReaderTest#testBlankNumerics",
      "StreamingReaderTest#testNoTypeCell",
      "StreamingReaderTest#testReadingEmptyFile",
      "StreamingReaderTest#testSheetName_alpha",
      "StreamingReaderTest#testShouldReturnBlankForMissingCellPolicy_CREATE_NULL_AS_BLANK",
      "StreamingReaderTest#testMissingRattrs",
      "StreamingReaderTest#shouldIgnoreSpreadsheetDrawingRows",
      "StreamingReaderTest#testStringCellValue",
      "StreamingReaderTest#testFormulaWithDifferentTypes",
      "StreamingReaderTest#testFirstRowNumIs0",
      "StreamingReaderTest#testSpecialStyles",
      "StreamingReaderTest#testGetDateCellValue",
      "StreamingReaderTest#testSheetName_zulu",
      "StreamingReaderTest#testLeadingZeroes",
      "StreamingReaderTest#testMultipleSheets_alpha",
      "StreamingReaderTest#testMultipleSheets_zulu",
      "StreamingReaderTest#testGetDateCellValue1904",
      "StreamingReaderTest#testSheetName_missingInStream",
      "StreamingReaderTest#testInlineCells",
      "StreamingReaderTest#testGetFirstCellNum",
      "StreamingReaderTest#testEncryption",
      "BufferedStringsTableTest#testStringsWrappedInFormatting",
      "BufferedStringsTableTest#testStringsWithMultipleXmlElements",
      "StreamingWorkbookTest#testStringFormattedFormulaCell",
      "StreamingWorkbookTest#testHiddenCells",
      "StreamingWorkbookTest#testQuotedStringFormattedFormulaCell",
      "StreamingWorkbookTest#testIterateSheets",
      "StreamingWorkbookTest#testHiddenSheets",
      "StreamingWorkbookTest#testFormulaCells",
      "StreamingWorkbookTest#testNumericFormattedFormulaCell"
    ]
  },
  "xml-apis:xml-apis": {
    "excel-streaming-reader": [
      "StreamingSheetTest#testEmptyCellShouldHaveGeneralStyle",
      "StreamingSheetTest#testLastRowNum",
      "StreamingReaderTest#testShouldHandleBlankSSTReference",
      "StreamingReaderTest#testClosingFiles",
      "StreamingReaderTest#testNullValueType",
      "StreamingReaderTest#testIteration",
      "StreamingReaderTest#testTypes",
      "StreamingReaderTest#testGaps",
      "StreamingReaderTest#testShouldReturnNullForMissingCellPolicy_RETURN_BLANK_AS_NULL",
      "StreamingReaderTest#testForumulaOutsideCellIgnored",
      "StreamingReaderTest#testSheetName_missingInFile",
      "StreamingReaderTest#testBlankNumerics",
      "StreamingReaderTest#testNoTypeCell",
      "StreamingReaderTest#testReadingEmptyFile",
      "StreamingReaderTest#testSheetName_alpha",
      "StreamingReaderTest#testShouldReturnBlankForMissingCellPolicy_CREATE_NULL_AS_BLANK",
      "StreamingReaderTest#testMissingRattrs",
      "StreamingReaderTest#shouldIgnoreSpreadsheetDrawingRows",
      "StreamingReaderTest#testStringCellValue",
      "StreamingReaderTest#testFormulaWithDifferentTypes",
      "StreamingReaderTest#testFirstRowNumIs0",
      "StreamingReaderTest#testSpecialStyles",
      "StreamingReaderTest#testGetDateCellValue",
      "StreamingReaderTest#testSheetName_zulu",
      "StreamingReaderTest#testLeadingZeroes",
      "StreamingReaderTest#testMultipleSheets_alpha",
      "StreamingReaderTest#testMultipleSheets_zulu",
      "StreamingReaderTest#testGetDateCellValue1904",
      "StreamingReaderTest#testSheetName_missingInStream",
      "StreamingReaderTest#testInlineCells",
      "StreamingReaderTest#testGetFirstCellNum",
      "StreamingReaderTest#testEncryption",
      "BufferedStringsTableTest#testStringsWrappedInFormatting",
      "BufferedStringsTableTest#testStringsWithMultipleXmlElements",
      "StreamingWorkbookTest#testStringFormattedFormulaCell",
      "StreamingWorkbookTest#testHiddenCells",
      "StreamingWorkbookTest#testQuotedStringFormattedFormulaCell",
      "StreamingWorkbookTest#testIterateSheets",
      "StreamingWorkbookTest#testHiddenSheets",
      "StreamingWorkbookTest#testFormulaCells",
      "StreamingWorkbookTest#testNumericFormattedFormulaCell"
    ]
  },
  "org.springframework:spring-orm": {
    "ddd-leaven-v2": [
      "OrderingTest#shouldPurchaseProducts",
      "OrderingTest#canNotPurchaseIfOfferChanged"
    ]
  },
  "org.restlet.jse:org.restlet.ext.jetty": {
    "uReplicator": [
      "ControllerStarterTest#testDelete",
      "ControllerStarterTest#testGet",
      "ControllerStarterTest#testPost",
      "ControllerStarterTest#testPut"
    ]
  },
  "org.restlet.jse:org.restlet": {
    "uReplicator": [
      "ControllerStarterTest#testDelete",
      "ControllerStarterTest#testGet",
      "ControllerStarterTest#testPost",
      "ControllerStarterTest#testPut"
    ]
  },
  "com.alibaba:fastjson": {
    "uReplicator": [
      "TestSourceKafkaClusterValidationManager#testValidation"
    ]
  },
  "org.apache.helix:helix-core": {
    "uReplicator": [
      "HelixMirrorMakerManagerCustomEmptyFullTest#testControllerStarter"
    ]
  },
  "org.apache.kafka:kafka-clients": {
    "uReplicator": [
      "TestSourceKafkaClusterValidationManager",
      "TestAutoTopicWhitelistingManager",
      "TestKafkaBrokerTopicObserver",
      "ControllerStarterTest",
      "TestValidationManager"
    ]
  },
  "org.jacoco:org.jacoco.core": {
    "sonar-java": [
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_using_deprecated_it_prop",
      "JaCoCoSensorTest#test_read_execution_data_for_lines_covered_by_tests_v0_7_5_incompatible",
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_using_correct_prop",
      "JaCoCoSensorTest#log_warning_when_using_default_location",
      "JaCoCoSensorTest#test_read_execution_data_for_lines_covered_by_tests_v0_7_5",
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_should_merge_reports",
      "JaCoCoSensorTest#should_log_warning_for_force_coverage",
      "JaCoCoSensorTest#log_removal_for_coverage_per_test",
      "JaCoCoSensorTest#should_log_when_class_are_not_matching_with_report",
      "JaCoCoSensorTest#test_read_execution_data_for_lines_covered_by_tests",
      "JaCoCoSensorTest#test_read_execution_data_after_6_2_using_deprecated_prop",
      "JaCoCoSensorTest#log_deprecation_for_coverage_per_test",
      "JaCoCoSensorTest#should_log_warning_for_deprecated_properties",
      "JacocoSensorJava9Test#test_jacoco_java9_coverage"
    ]
  },
  "org.assertj:assertj-core": {
    "sonar-java": [
      "SecurityConstraintsInWebXmlCheckTest#web_xml_without_constraints"
    ]
  },
  "oauth.signpost:signpost-core": {
    "signpost": [
      "CommonsHttpOAuthProviderTest#shouldThrowExpectationFailedIfConsumerKeyNotSet",
      "CommonsHttpOAuthProviderTest#shouldThrowExpectationFailedIfConsumerSecretNotSet",
      "CommonsHttpOAuthProviderTest#shouldRetrieveRequestTokenAndUpdateConsumer",
      "CommonsHttpOAuthProviderTest#shouldRespectCustomQueryParametersInAuthWebsiteUrl",
      "CommonsHttpOAuthProviderTest#shouldThrowWhenGettingAccessTokenAndRequestTokenNotSet",
      "CommonsHttpOAuthProviderTest#shouldThrowWhenGettingAccessTokenAndRequestTokenSecretNotSet",
      "CommonsHttpOAuthProviderTest#shouldRetrieveAccessTokenAndUpdateConsumer",
      "CommonsHttpOAuthProviderTest#shouldMakeSpecialResponseParametersAvailableToConsumer",
      "CommonsHttpOAuthProviderTest#shouldBeSerializable"
    ]
  },
  "org.apache.spark:spark-sql_2.11": {
    "macrobase": [
      "DataFrameConversionsTest#testSingleNodeDataFrameToSparkDataFrame",
      "MacroBaseSQLDistributedTest#testIngestFromCSV",
      "MacroBaseSQLDistributedTest#testDiffBasic",
      "MacroBaseSQLDistributedTest#testDiffSplit"
    ]
  },
  "org.apache.spark:spark-core_2.11": {
    "macrobase": [
      "DataFrameConversionsTest#testSingleNodeDataFrameToSparkDataFrame",
      "MacroBaseSQLDistributedTest#testIngestFromCSV",
      "MacroBaseSQLDistributedTest#testDiffBasic",
      "MacroBaseSQLDistributedTest#testDiffSplit"
    ]
  },
  "org.python:jython-standalone": {
    "structr": [
      "GeoTest#testGPXImport"
    ]
  },
  "org.apache.deltaspike.core:deltaspike-core-api": {
    "togglz": [
      "DeltaSpikePropertyActivationStrategyTest#testIsActiveWithNoParam",
      "DeltaSpikePropertyActivationStrategyTest#testIsActiveWithParam"
    ]
  },
  "org.apache.maven:maven-embedder": {
    "spring-cloud-function": [
      "RuntimeJavaCompilerTests#dependencyResolution",
      "RuntimeJavaCompilerTests#okWithImportedDependencies2",
      "RuntimeJavaCompilerTests#okWithImportedDependencies"
    ]
  },
  "org.apache.maven:maven-core": {
    "maven-plugins": [
      "ClientCredentialsTest#noServerUsernameAndPassword",
      "ClientCredentialsTest#noPassword",
      "ClientCredentialsTest#noConfigurationWithSettings",
      "ClientCredentialsTest#validOAuth2Token",
      "ClientCredentialsTest#validOAuth2TokenWithUsername",
      "ClientCredentialsTest#validServerUsernameAndPassword",
      "ClientCredentialsTest#missingServerNoMatching",
      "ClientCredentialsTest#validUserNameAndPassword",
      "ClientCredentialsTest#missingServerEmptyServers",
      "ClientCredentialsTest#noConfiguration",
      "ClientCredentialsTest#noUserName",
      "ClientCredentialsTest#missingServerNoSettings",
      "ClientCredentialsTest#missingServerNullServers",
      "ClientCredentialsTest#validServerToken"
    ]
  },
  "org.slf4j:slf4j-jdk14": {
    "quickfixj": [
      "SLF4JLogTest#testLog",
      "SLF4JLogTest#testLogHeartbeatFiltering"
    ]
  },
  "org.jsoup:jsoup": {
    "extentreports-java": [
      "TestSuite#validateCategoryViewEnabled"
    ]
  },
  "org.antlr:antlr4-runtime": {
    "rocker": [
      "WithStatementTest#endsWithComma"
    ]
  },
  "org.apache.curator:curator-recipes": {
    "dble": [
      "IncrSequenceZKHandlerTest#testCorrectnessAndEfficiency"
    ]
  },
  "com.alibaba:druid": {
    "dble": [
      "TestMySQLItemVisitor#testGroupbyHaving",
      "TestMySQLItemVisitor#testSelectItem"
    ]
  },
  "com.sonyericsson.hudson.plugins.rebuild:rebuild": {
    "DotCi": [
      "InjectedTest#testPluginActive"
    ]
  },
  "io.jaegertracing:jaeger-client": {
    "feast": [
      "ServingServiceGRpcControllerTest#shouldPassValidRequestAsIs",
      "ServingServiceGRpcControllerTest#shouldCallOnErrorIfEntityDatasetIsNotSet"
    ]
  },
  "org.eclipse.persistence:org.eclipse.persistence.jpa": {
    "griffin": [
      "JobRepoTest#findByMeasureIdAndDeleted",
      "JobRepoTest#findByIdAndDeleted",
      "JobRepoTest#testFindByDeleted",
      "JobRepoTest#testCountByJobNameAndDeleted",
      "JobRepoTest#findByJobNameAndDeleted",
      "JobInstanceRepoTest#testDeleteByExpireTimestamp",
      "JobInstanceRepoTest#testFindByPredicateName",
      "JobInstanceRepoTest#testFindByExpireTmsLessThanEqual",
      "JobInstanceRepoTest#testFindByActiveState",
      "JobInstanceBeanRepoTest#testFindByActiveState",
      "JobInstanceBeanRepoTest#testFindByJobIdWithPageable"
    ]
  },
  "org.deeplearning4j:deeplearning4j-core": {
    "kafka-streams-machine-learning-examples": [
      "Kafka_Streams_MachineLearning_DL4J_DeepLearning_Iris_IntegrationTest#shouldPredictIrisFlowerType",
      "Kafka_Streams_TensorFlow_Keras_Example_IntegrationTest#shouldPredictValues"
    ]
  },
  "org.slf4j:jcl-over-slf4j": {
    "chaos-monkey-spring-boot": [
      "KillAppAssaultTest#killsSpringBootApplication"
    ]
  },
  "org.springframework:spring-aspects": {
    "chaos-monkey-spring-boot": [
      "ChaosMonkeyRequestScopeRestEndpointDisabledIntTest#getConfiguration",
      "GreetingControllerTest#shouldReturnHello",
      "GreetingControllerTest#shouldReturnHelloFromComponent",
      "HelloControllerIntegrationTest#checkHelloEndpoint",
      "HelloControllerIntegrationTest#checkGoodbyeEndpoint",
      "HelloControllerIntegrationTest#contextLoads",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postChaosMonkeySettingsValueObjectAssaultPropertiesNULL",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#getAssaultConfiguration",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postToEnableChaosMonkey",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postChaosMonkeySettingsValueObjectWatcherPropertiesNULL",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postWatcherConfigurationGoodCase",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#getWatcherConfiguration",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postAssaultConfigurationBadCaseLatencyRangeEndEmpty",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postAssaultConfigurationGoodCase",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postAssaultConfigurationBadCaseLatencyRangeStartEmpty",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#getStatusIsDisabled",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postChaosMonkeySettingsEqualsNULL",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postAssaultConfigurationBadCaseLevelEmpty",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#getConfiguration",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#getStatusIsEnabled",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#disableChaosMonkeyExecutionNotAllowed",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postToDisableChaosMonkey",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postMinimalUpdate",
      "ChaosMonkeyRequestScopeRestEndpointIntTest#postAssaultConfigurationBadCaseInvalidExceptionType",
      "HelloComponentIntegrationTest#callingPublicMethodonComponent",
      "HelloComponentIntegrationTest#contextLoads",
      "HelloControllerTest#shouldReturnHello",
      "HelloControllerTest#callMockServiceDbGreet",
      "HelloControllerTest#callMockServiceGreet",
      "ChaosDemoApplicationDefaultProfileTest#checkEnvAssaultLatencyRangeStart",
      "ChaosDemoApplicationDefaultProfileTest#checkEnvAssaultLatencyRangeEnd",
      "ChaosDemoApplicationDefaultProfileTest#contextLoads",
      "ChaosDemoApplicationDefaultProfileTest#checkEnvWatcherController",
      "ChaosDemoApplicationDefaultProfileTest#checkEnvCustomServiceWatcherList",
      "ChaosDemoApplicationChaosMonkeyRequestScopeProfileTest#checkChaosSettingsObject",
      "ChaosDemoApplicationChaosMonkeyRequestScopeProfileTest#checkChaosSettingsValues",
      "ChaosDemoApplicationChaosMonkeyRequestScopeProfileTest#contextLoads",
      "MemoryAssaultIntegrationTest#runAttack",
      "MemoryAssaultIntegrationTest#runAndAbortAttack",
      "MemoryAssaultIntegrationTest#memoryAssault_configured",
      "MemoryAssaultIntegrationTest#allowInterruptionOfAssaultDuringHoldPeriod",
      "GreetingRestControllerTest#shouldReturnHello"
    ]
  },
  "com.baomidou:mybatis-plus-boot-starter": {
    "SpringMVC": [
      "MybatisPlusApplicationTests#contextLoads"
    ]
  },
  "org.apache.poi:poi": {
    "ExcelUtil": [
      "TestImportExcel#importXlsx"
    ]
  },
  "org.glassfish.jersey.core:jersey-client": {
    "openscoring": [
      "ModelResourceTest#linearRegressionAuto",
      "ModelResourceTest#associationRulesShopping",
      "ModelResourceTest#decisionTreeIris"
    ]
  },
  "org.jpmml:pmml-evaluator-extension": {
    "openscoring": [
      "ModelResourceTest#linearRegressionAuto",
      "ModelResourceTest#associationRulesShopping",
      "ModelResourceTest#decisionTreeIris"
    ]
  },
  "org.codehaus.sonar:sonar-testing-harness": {
    "sonar-objective-c": [
      "OCLintParserTest#parseReportShouldReturnAnEmptyMapWhenTheFileIsInvalid",
      "OCLintParserTest#parseReportShouldReturnACollectionOfViolationsWhenTheReportIsNotEmpty",
      "CoberturaMeasuresPersistorTest#shouldNotPersistMeasuresForUnknownFiles",
      "CoberturaMeasuresPersistorTest#shouldPersistMeasuresForKnownFiles",
      "CoberturaParserTest#parseReportShouldReturnAnEmptyMapWhenTheFileIsInvalid",
      "OCLintXMLStreamHandlerTest#streamAddAviolationForALineInTheReport",
      "OCLintXMLStreamHandlerTest#violationContainsFileResource",
      "OCLintXMLStreamHandlerTest#violationContainsTheMessageFromTheReport",
      "OCLintXMLStreamHandlerTest#violationContainsTheLineFromTheReport",
      "OCLintXMLStreamHandlerTest#violationRuleSeverityContainsThePriorityFromTheReport",
      "OCLintXMLStreamHandlerTest#violationRuleKeyContainsThePriorityFromTheReport"
    ]
  },
  "com.squareup.okhttp:mockwebserver": {
    "sonar-gitlab-plugin": [
      "SonarFacadeTest#testNotEmptyGetNewIssueWithComponentInTest",
      "SonarFacadeTest#testNotFound",
      "SonarFacadeTest#testNotEmptyGetNewIssue",
      "SonarFacadeTest#testSuccessRule",
      "SonarFacadeTest#testSuccessWait",
      "SonarFacadeTest#testEmptyGetNewIssue",
      "SonarFacadeTest#tesMultiPageGetNewIssueInTest",
      "SonarFacadeTest#testQualityGateError",
      "SonarFacadeTest#tesNoFileGetNewIssue",
      "SonarFacadeTest#tesMultiPageGetNewIssue",
      "SonarFacadeTest#testFailedProject",
      "SonarFacadeTest#testSuccessWaitLong",
      "SonarFacadeTest#tesFullPageGetNewIssue",
      "SonarFacadeTest#tesFailed1GetNewIssue",
      "SonarFacadeTest#testWarning",
      "SonarFacadeTest#tesFullPageGetNewIssueInTest",
      "SonarFacadeTest#test10000NewIssue",
      "SonarFacadeTest#testNotEmpty2GetNewIssue",
      "SonarFacadeTest#testFailed",
      "SonarFacadeTest#testNotEmpty2GetNewIssueInTest",
      "SonarFacadeTest#testFailedWaitLong",
      "SonarFacadeTest#testNotEmptyGetNewIssueWithComponent",
      "SonarFacadeTest#testSuccess",
      "SonarFacadeTest#testNotEmptyGetNewIssueWithComponents",
      "GetProjectV3Test#testProjectIdReturnMultiple",
      "GetProjectV3Test#testProjectIdWithName",
      "GetProjectV3Test#testProjectIdWithPath",
      "GetProjectV3Test#testProjectIdWithSshUrl",
      "GetProjectV3Test#testProjectIdWithWebUrl",
      "GetProjectV3Test#testProjectIdReturnNotFound",
      "GetProjectV3Test#testProjectIdWithId",
      "GetProjectV3Test#testGetUsernameForRevisionExist",
      "GetProjectV3Test#testGetUsernameForRevisionNull1",
      "GetProjectV3Test#testGetUsernameForRevisionNull2",
      "GetProjectV3Test#testInitProject",
      "GetProjectV3Test#testProjectIdWithHttpUrl",
      "GetProjectV3Test#testProjectIdReturnEmpty",
      "GetProjectV4Test#testProjectIdReturnMultiple",
      "GetProjectV4Test#testProjectIdWithName",
      "GetProjectV4Test#testProjectIdWithPath",
      "GetProjectV4Test#testProjectIdWithSshUrl",
      "GetProjectV4Test#testProjectIdWithWebUrl",
      "GetProjectV4Test#testProjectIdReturnNotFound",
      "GetProjectV4Test#testProjectIdWithId",
      "GetProjectV4Test#testGetUsernameForRevisionExist",
      "GetProjectV4Test#testGetUsernameForRevisionNull1",
      "GetProjectV4Test#testGetUsernameForRevisionNull2",
      "GetProjectV4Test#testInitProject",
      "GetProjectV4Test#testProjectIdWithHttpUrl",
      "GetProjectV4Test#testProjectIdReturnEmpty"
    ]
  },
  "org.mnode.ical4j:ical4j": {
    "natty": [
      "IcsTest#testUpcomingSeason",
      "IcsTest#testUpcomingHoliday",
      "IcsTest#testRelativeHolidays",
      "IcsTest#testSeasonsByYear",
      "IcsTest#testHolidaysByYear",
      "IcsTest#testHolidaysWithModifiers",
      "IcsTest#testSeasonsWithModifiers",
      "SearchTest#test"
    ]
  },
  "org.bouncycastle:bcprov-jdk15on": {
    "OWASP-WebScarab": [
      "SunCertificateUtilsTest#testSign"
    ]
  },
  "javax:javaee-api": {
    "dataverse": [
      "FileDownloadHelperTest#testDoesSessionUserHavePermission_withoutPermissionToCheck",
      "FileDownloadHelperTest#testDoesSessionUserHavePermission_forEditDatasetPermission",
      "FileDownloadHelperTest#testCanDownloadFile_withoutFileMetadata",
      "FileDownloadHelperTest#testCanDownloadFile_forUnrestrictedReleasedFile",
      "FileDownloadHelperTest#testDoesSessionUserHavePermission_forAnyOtherPermission",
      "FileDownloadHelperTest#testDoesSessionUserHavePermission_withNullDataFile",
      "FileDownloadHelperTest#testDoesSessionUserHavePermission_withNullDataset",
      "FileDownloadHelperTest#testCanDownloadFile_withNullDataFileId",
      "FileDownloadHelperTest#testCanDownloadFile_withNullMetadataId",
      "FileDownloadHelperTest#testDoesSessionUserHavePermission_forDownloadFilePermission",
      "RestrictFileCommandTest#testRestrictRestrictedNewFile",
      "RestrictFileCommandTest#testUnrestrictNewFile",
      "RestrictFileCommandTest#testRestrictPublishedFile",
      "RestrictFileCommandTest#testRestrictUnpublishedFile",
      "RestrictFileCommandTest#testPublicInstall",
      "RestrictFileCommandTest#testUnrestrictUnpublishedFile",
      "RestrictFileCommandTest#testUnrestrictUnrestrictedFile",
      "RestrictFileCommandTest#testUnrestrictUnrestrictedNewFile",
      "RestrictFileCommandTest#testRestrictNewFile",
      "RestrictFileCommandTest#testUnrestrictPublishedFile",
      "RestrictFileCommandTest#testRestrictRestrictedFile",
      "PermissionTest#testAppliesTo",
      "GetLatestPublishedDatasetVersionCommandTest#testLatestPublishedWithDraft",
      "GetLatestPublishedDatasetVersionCommandTest#testLatestNonePublished",
      "GetLatestPublishedDatasetVersionCommandTest#testLatestPublishedNoDraft",
      "CreateRoleCommandTest#testNonSuperUsersCantAddRoles",
      "CreateRoleCommandTest#testSuperUsersAddRoles",
      "CreateRoleCommandTest#testGuestUsersCantAddRoles",
      "MoveDatasetCommandTest#testInvalidMovePublishedToUnpublished",
      "MoveDatasetCommandTest#testInvalidMove",
      "MoveDatasetCommandTest#testValidMove",
      "MoveDatasetCommandTest#testNotAuthenticatedUser",
      "MoveDatasetCommandTest#testKeepGuestbook",
      "MoveDatasetCommandTest#testRemoveGuestbook",
      "MoveDatasetCommandTest#testKeepGuestbookInherit",
      "SchemaDotOrgExporterTest#testGetDisplayName",
      "SchemaDotOrgExporterTest#testExportDataset",
      "DDIExporterTest#testCitation",
      "PrivateUrlUserTest#testGetDisplayInfo",
      "MailUtilTest#testSubjectConfirmEmail",
      "MailUtilTest#testSubjectRevokeRole",
      "MailUtilTest#testSubjectSubmittedDS",
      "MailUtilTest#testSubjectRejectFileAccess",
      "MailUtilTest#testSubjectCreateAccount",
      "MailUtilTest#testSubjectAssignRole",
      "MailUtilTest#testSubjectFileSystemImport",
      "MailUtilTest#testSubjectReturnedDS",
      "MailUtilTest#testSubjectChecksumFail",
      "MailUtilTest#testSubjectMapLayerUpdated",
      "MailUtilTest#testSubjectRequestFileAccess",
      "MailUtilTest#testSubjectChecksumImport",
      "MailUtilTest#testSubjectCreateDataverse",
      "MailUtilTest#testSubjectMapLayerDeleteFailed",
      "MailUtilTest#testSubjectGrantFileAccess",
      "MailUtilTest#testSubjectPublishedDS",
      "MailUtilTest#testSubjectCreateDataset",
      "ReturnDatasetToAuthorCommandTest#testNotInReviewDataset",
      "ReturnDatasetToAuthorCommandTest#testReleasedDataset",
      "ReturnDatasetToAuthorCommandTest#testAllGood",
      "DeletePrivateUrlCommandTest#testDatasetNull",
      "DeletePrivateUrlCommandTest#testSuccessfulDelete",
      "UpdatePermissionRootCommandTest#testNoChange",
      "UpdatePermissionRootCommandTest#testChange",
      "PasswordResetServiceBeanTest#testRequestReset_forExistingUser",
      "FileMetadataTest#testGetFileDateToDisplay_fileWithoutPublicationDate",
      "FileMetadataTest#testGetFileDateToDisplay_fileWithPublicationDate",
      "DataFileServiceBeanTest#testGetFileClass",
      "FileTypeDetectionTest#testDetermineFileTypeJupyterNoteboook",
      "GetPrivateUrlCommandTest#testDatasetWithAnId",
      "GetPrivateUrlCommandTest#testDatasetWithoutAnId",
      "FileSizeCheckerTest#testBytesToHumanReadable",
      "PasswordValidatorUtilTest#testGetPasswordRequirements",
      "CreateDataverseCommandTest#testCantCreateAdditionalRoot",
      "CreateDataverseCommandTest#testDefaultOptions",
      "CreateDataverseCommandTest#testCantCreateAnotherWithSameAlias",
      "CreateDataverseCommandTest#testCustomOptions",
      "CreateDataverseCommandTest#testGuestCantCreateDataverse",
      "GitHubOAuth2APTest#testParseUserResponse",
      "MetricsUtilTest#testDataversesByCategoryToJson",
      "WorldMapTokenServiceBeanTest#testCanTokenUserEditFileWithoutPermission",
      "WorldMapTokenServiceBeanTest#testCanTokenUserEditFileWithUndefinedWorldMapToken",
      "WorldMapTokenServiceBeanTest#testCanTokenUserEditFileWithPermission",
      "OpenAireExporterTest#testGetDisplayName",
      "UpdateDatasetThumbnailCommandTest#testDatasetNull",
      "UpdateDatasetThumbnailCommandTest#testSetDatasetFileAsThumbnailFileNotFound",
      "UpdateDatasetThumbnailCommandTest#testSetDatasetFileAsThumbnailFileNull",
      "UpdateDatasetThumbnailCommandTest#testSetDatasetFileAsThumbnailFileThumbnailUnexpectedlyAbsent",
      "UpdateDatasetThumbnailCommandTest#testIntentNull",
      "URLValidatorTest#testIsValidWithContextButInvalidURL",
      "BuiltinAuthenticationProviderTest#testIsUserDeletionAllowed",
      "BuiltinAuthenticationProviderTest#testAuthenticate",
      "BuiltinAuthenticationProviderTest#testGetId",
      "BuiltinAuthenticationProviderTest#testGetInfo",
      "BuiltinAuthenticationProviderTest#testIsUserInfoUpdateAllowed",
      "BuiltinAuthenticationProviderTest#testVerifyPassword",
      "BuiltinAuthenticationProviderTest#testUpdatePassword",
      "BuiltinAuthenticationProviderTest#testDeleteUser",
      "BuiltinAuthenticationProviderTest#testIsPasswordUpdateAllowed",
      "BundleUtilTest#testStringFromPropertyFile",
      "BundleUtilTest#testGetStringFromBundleWithArgumentsAndSpecificBundle",
      "BundleUtilTest#testNoErrorNonExistentStringBundle",
      "BundleUtilTest#testGetStringFromBundle",
      "BundleUtilTest#testStringFromPropertyFileException",
      "BundleUtilTest#testGetStringFromBundleWithArguments",
      "RequestRsyncScriptCommandTest#testHappyPath",
      "CSVFileReaderTest#testBrokenCSV",
      "SubmitDatasetForReviewCommandTest#testReleasedDataset",
      "SubmitDatasetForReviewCommandTest#testDraftDataset",
      "GlobalIdTest#testVerifyImportCharacters",
      "OptionalFileParamsTest#test_06_jsonTabularTagsBad",
      "MoveDataverseCommandTest#testMoveIntoParent",
      "MoveDataverseCommandTest#testInvalidMove",
      "MoveDataverseCommandTest#testRemoveMetadataBlockWithoutForce",
      "MoveDataverseCommandTest#testValidMove",
      "MoveDataverseCommandTest#testRemoveTemplate",
      "MoveDataverseCommandTest#testKeepGuestbook",
      "MoveDataverseCommandTest#testRemoveMetadataBlock",
      "MoveDataverseCommandTest#testKeepTemplate",
      "MoveDataverseCommandTest#testKeepMetadataBlock",
      "MoveDataverseCommandTest#testNotSuperUser",
      "MoveDataverseCommandTest#testRemoveGuestbookWithoutForce",
      "MoveDataverseCommandTest#testRemoveGuestbook",
      "MoveDataverseCommandTest#testMoveIntoSelf",
      "MoveDataverseCommandTest#testRemoveTemplateWithoutForce",
      "GoogleOAuth2APTest#testParseUserResponse",
      "GoogleOAuth2APTest#testParseUserResponseRealData",
      "PermissionsWrapperTest#testCanManageDatasetPermissionsWithUndefinedDataverseId",
      "PermissionsWrapperTest#testCanManageDatasetPermissionsWithUndefinedUser",
      "PermissionsWrapperTest#testCanManageDatasetPermissionsWithUndefinedDataverse",
      "PermissionsWrapperTest#testCanManageDatasetPermissions",
      "BrandingUtilTest#testGetContactHeader",
      "BrandingUtilTest#testWelcomeInAppNotification",
      "BrandingUtilTest#testEmailSubject",
      "BrandingUtilTest#testGetSupportTeamName",
      "BrandingUtilTest#testWelcomeEmail",
      "BrandingUtilTest#testEmailClosing",
      "PrivateUrlUtilTest#testGetRequiredPermissions",
      "DataverseUtilTest#testGetSuggestedDataverseNameOnCreate",
      "DatasetFieldValidatorTest#testIsValid",
      "DataCitationTest#testToBibtexString",
      "DataCitationTest#testToRISString_withTitleAndAuthor",
      "DataCitationTest#testProperties",
      "DataCitationTest#testWriteAsBibtexCitation",
      "DataCitationTest#testToBibtexString_withoutTitle",
      "DataCitationTest#testGetDataCiteMetadata",
      "DataCitationTest#testTitleWithQuotes",
      "DataCitationTest#testToEndNoteString_withTitleAndAuthor",
      "DataCitationTest#testToBibtexString_withoutAuthor",
      "DataCitationTest#testToString_withTitleAndAuthor",
      "DataCitationTest#testToHtmlString_withTitleAndAuthor",
      "BriefJsonPrinterTest#testJson_DatasetVersion",
      "CreatePrivateUrlCommandTest#testDatasetNull",
      "CreatePrivateUrlCommandTest#testAttemptCreatePrivateUrlOnNonDraft",
      "CreatePrivateUrlCommandTest#testAlreadyExists",
      "CreatePrivateUrlCommandTest#testCreatePrivateUrlSuccessfully",
      "AuthUtilTest#testIsNonLocalLoginEnabled",
      "CreateDatasetVersionCommandTest#testSimpleVersionAddition",
      "CreateDatasetVersionCommandTest#testCantCreateTwoDraftVersions"
    ]
  },
  "org.eclipse.rdf4j:rdf4j-rio-rdfxml": {
    "owlapi": [
      "RioParserTestCase#testParsePrimer",
      "RioParserTestCase#testParsePrimerMinimalSubset",
      "RioParserTestCase#testParse",
      "RioParserTestCase#testParsePrimerSubset",
      "SameIndividualsAxiomAnnotatedTestCase#testRioRDFXML",
      "SameIndividualsThreeElementsAxiomAnnotatedTestCase#testRioRDFXML",
      "AnonymousOntologyAnnotationsTestCase#testRioRDFXML",
      "RelativeURITestCase#testRioRDFXML",
      "AxiomsRoundTrippingWithEntitiesTestCase#testRioRDFXML",
      "ParserBanningTestCase#shouldFailWithBanningOfTriX",
      "FileRoundTripSubClassOfUntypedOWLClassStrictTestCase#testRioRDFXML",
      "OntologyAnnotationsTestCase#testRioRDFXML",
      "OntologyVersionIRITestCase#testRioRDFXML",
      "OntologyIRITestCase#testRioRDFXML",
      "RoundTripOWLXMLToRioTurtleTestCase#testRioRDFXML",
      "AnonymousRoundTripTestCase#testRioRDFXML",
      "LoadAnonymousTestCase#shouldLoad",
      "NoQNameTestCase#testRioRDFXML",
      "Utf8TestCase#testInvalidUTF8roundTripWithInputStream",
      "Utf8TestCase#testInvalidUTF8roundTripFromReader",
      "DifferentIndividualsThreeElementsAxiomAnnotatedTestCase#testRioRDFXML",
      "BlankNodeIdsAndAnnotationsRoundTripTestCase#testRioRDFXML",
      "LiteralWithStringTypeTestCase#testRioRDFXML",
      "TurtleTestCase#shouldRoundTripAxiomAnnotation",
      "PrefixOntologyFormatTestCase#testRioRDFXML",
      "RioRendererTestCase#testRenderKoalaRdfXmlWriter",
      "RioRendererTestCase#testRenderEmptyRdfXmlWriter",
      "DifferentIndividualsAxiomAnnotatedTestCase#testRioRDFXML",
      "ThreeLayersOfAnnotationsTestCase#testRioRDFXML",
      "RelativeIRIsRoundTripTestCase#testRioRDFXML"
    ]
  },
  "org.eclipse.rdf4j:rdf4j-rio-nquads": {
    "owlapi": [
      "SameIndividualsAxiomAnnotatedTestCase#testNQuads",
      "SameIndividualsThreeElementsAxiomAnnotatedTestCase#testNQuads",
      "AnonymousOntologyAnnotationsTestCase#testNQuads",
      "RelativeURITestCase#testNQuads",
      "AxiomsRoundTrippingWithEntitiesTestCase#testNQuads",
      "ParserBanningTestCase#shouldFailWithBanningOfTriX",
      "FileRoundTripSubClassOfUntypedOWLClassStrictTestCase#testNQuads",
      "OntologyAnnotationsTestCase#testNQuads",
      "OntologyVersionIRITestCase#testNQuads",
      "OntologyIRITestCase#testNQuads",
      "RoundTripOWLXMLToRioTurtleTestCase#testNQuads",
      "AnonymousRoundTripTestCase#testNQuads",
      "LoadAnonymousTestCase#shouldLoad",
      "NoQNameTestCase#testNQuads",
      "Utf8TestCase#testInvalidUTF8roundTripWithInputStream",
      "Utf8TestCase#testInvalidUTF8roundTripFromReader",
      "DifferentIndividualsThreeElementsAxiomAnnotatedTestCase#testNQuads",
      "BlankNodeIdsAndAnnotationsRoundTripTestCase#testNQuads",
      "LiteralWithStringTypeTestCase#shouldParseInputWithoutExplicitString",
      "LiteralWithStringTypeTestCase#testNQuads",
      "TurtleTestCase#shouldRoundTripAxiomAnnotation",
      "PrefixOntologyFormatTestCase#testNQuads",
      "DifferentIndividualsAxiomAnnotatedTestCase#testNQuads",
      "ThreeLayersOfAnnotationsTestCase#testNQuads",
      "RelativeIRIsRoundTripTestCase#testNQuads"
    ]
  },
  "org.eclipse.rdf4j:rdf4j-rio-trix": {
    "owlapi": [
      "LoadAnonymousTestCase#shouldLoad",
      "TurtleTestCase#shouldRoundTripAxiomAnnotation"
    ]
  },
  "org.eclipse.rdf4j:rdf4j-rio-jsonld": {
    "owlapi": [
      "SameIndividualsAxiomAnnotatedTestCase#testJSONLD",
      "AnonymousOntologyAnnotationsTestCase#testJSONLD",
      "RelativeURITestCase#testJSONLD",
      "AxiomsRoundTrippingWithEntitiesTestCase#testJSONLD",
      "ParserBanningTestCase#shouldFailWithBanningOfTriX",
      "FileRoundTripSubClassOfUntypedOWLClassStrictTestCase#testJSONLD",
      "OntologyAnnotationsTestCase#testJSONLD",
      "OntologyVersionIRITestCase#testJSONLD",
      "OntologyIRITestCase#testJSONLD",
      "RoundTripOWLXMLToRioTurtleTestCase#testJSONLD",
      "AnonymousRoundTripTestCase#testJSONLD",
      "LoadAnonymousTestCase#shouldLoad",
      "NoQNameTestCase#testJSONLD",
      "Utf8TestCase#testInvalidUTF8roundTripWithInputStream",
      "Utf8TestCase#testInvalidUTF8roundTripFromReader",
      "DifferentIndividualsThreeElementsAxiomAnnotatedTestCase#testJSONLD",
      "BlankNodeIdsAndAnnotationsRoundTripTestCase#testJSONLD",
      "LiteralWithStringTypeTestCase#shouldParseInputWithoutExplicitString",
      "LiteralWithStringTypeTestCase#testJSONLD",
      "TurtleTestCase#shouldRoundTripAxiomAnnotation",
      "PrefixOntologyFormatTestCase#testJSONLD",
      "DifferentIndividualsAxiomAnnotatedTestCase#testJSONLD",
      "ThreeLayersOfAnnotationsTestCase#testJSONLD",
      "RelativeIRIsRoundTripTestCase#testJSONLD"
    ]
  },
  "org.eclipse.rdf4j:rdf4j-model": {
    "owlapi": [
      "SameIndividualsAxiomAnnotatedTestCase#testJSONLD",
      "AnonymousOntologyAnnotationsTestCase#testJSONLD",
      "RelativeURITestCase#testJSONLD",
      "AxiomsRoundTrippingWithEntitiesTestCase#testJSONLD",
      "FileRoundTripSubClassOfUntypedOWLClassStrictTestCase#testJSONLD",
      "OntologyAnnotationsTestCase#testJSONLD",
      "OntologyVersionIRITestCase#testJSONLD",
      "OntologyIRITestCase#testJSONLD",
      "RoundTripOWLXMLToRioTurtleTestCase#testJSONLD",
      "AnonymousRoundTripTestCase#testJSONLD",
      "NoQNameTestCase#testJSONLD",
      "DifferentIndividualsThreeElementsAxiomAnnotatedTestCase#testJSONLD",
      "BlankNodeIdsAndAnnotationsRoundTripTestCase#testJSONLD",
      "LiteralWithStringTypeTestCase#testJSONLD",
      "PrefixOntologyFormatTestCase#testJSONLD",
      "DifferentIndividualsAxiomAnnotatedTestCase#testJSONLD",
      "ThreeLayersOfAnnotationsTestCase#testJSONLD",
      "RelativeIRIsRoundTripTestCase#testJSONLD"
    ]
  },
  "org.eclipse.rdf4j:rdf4j-rio-rdfjson": {
    "owlapi": [
      "SameIndividualsAxiomAnnotatedTestCase#testRDFJSON",
      "SameIndividualsThreeElementsAxiomAnnotatedTestCase#testRDFJSON",
      "SameIndividualsThreeElementsAxiomAnnotatedTestCase#testJSONLD",
      "AnonymousOntologyAnnotationsTestCase#testRDFJSON",
      "RelativeURITestCase#testRDFJSON",
      "AxiomsRoundTrippingWithEntitiesTestCase#testRDFJSON",
      "ParserBanningTestCase#shouldFailWithBanningOfTriX",
      "FileRoundTripSubClassOfUntypedOWLClassStrictTestCase#testRDFJSON",
      "OntologyVersionIRITestCase#testRDFJSON",
      "OntologyIRITestCase#testRDFJSON",
      "RoundTripOWLXMLToRioTurtleTestCase#testRDFJSON",
      "AnonymousRoundTripTestCase#testRDFJSON",
      "LoadAnonymousTestCase#shouldLoad",
      "NoQNameTestCase#testRDFJSON",
      "Utf8TestCase#testInvalidUTF8roundTripWithInputStream",
      "Utf8TestCase#testInvalidUTF8roundTripFromReader",
      "DifferentIndividualsThreeElementsAxiomAnnotatedTestCase#testRDFJSON",
      "BlankNodeIdsAndAnnotationsRoundTripTestCase#testRDFJSON",
      "LiteralWithStringTypeTestCase#shouldParseInputWithoutExplicitString",
      "LiteralWithStringTypeTestCase#testRDFJSON",
      "TurtleTestCase#shouldRoundTripAxiomAnnotation",
      "PrefixOntologyFormatTestCase#testRDFJSON",
      "DifferentIndividualsAxiomAnnotatedTestCase#testRDFJSON",
      "ThreeLayersOfAnnotationsTestCase#testRDFJSON",
      "RelativeIRIsRoundTripTestCase#testRDFJSON"
    ]
  },
  "org.eclipse.rdf4j:rdf4j-rio-ntriples": {
    "owlapi": [
      "SameIndividualsAxiomAnnotatedTestCase#testNQuads",
      "SameIndividualsThreeElementsAxiomAnnotatedTestCase#testNQuads",
      "AnonymousOntologyAnnotationsTestCase#testNQuads",
      "RelativeURITestCase#testNQuads",
      "AxiomsRoundTrippingWithEntitiesTestCase#testNQuads",
      "ParserBanningTestCase#shouldFailWithBanningOfTriX",
      "FileRoundTripSubClassOfUntypedOWLClassStrictTestCase#testNQuads",
      "OntologyAnnotationsTestCase#testNQuads",
      "OntologyVersionIRITestCase#testNQuads",
      "OntologyIRITestCase#testNQuads",
      "RoundTripOWLXMLToRioTurtleTestCase#testNQuads",
      "AnonymousRoundTripTestCase#testNQuads",
      "LoadAnonymousTestCase#shouldLoad",
      "NoQNameTestCase#testNQuads",
      "Utf8TestCase#testInvalidUTF8roundTripWithInputStream",
      "Utf8TestCase#testInvalidUTF8roundTripFromReader",
      "DifferentIndividualsThreeElementsAxiomAnnotatedTestCase#testNQuads",
      "BlankNodeIdsAndAnnotationsRoundTripTestCase#testNQuads",
      "LiteralWithStringTypeTestCase#shouldParseInputWithoutExplicitString",
      "LiteralWithStringTypeTestCase#testNQuads",
      "TurtleTestCase#shouldRoundTripAxiomAnnotation",
      "PrefixOntologyFormatTestCase#testNQuads",
      "DifferentIndividualsAxiomAnnotatedTestCase#testNQuads",
      "ThreeLayersOfAnnotationsTestCase#testNQuads",
      "RelativeIRIsRoundTripTestCase#testNQuads"
    ]
  },
  "com.squareup.burst:burst": {
    "burst": [
      "BurstJUnit4Test#fieldAndMethod",
      "BurstJUnit4Test#singleField",
      "BurstJUnit4Test#constructorMultiple",
      "BurstJUnit4Test#method",
      "BurstJUnit4Test#multipleFields",
      "BurstJUnit4Test#constructorAndMethod",
      "BurstJUnit4Test#constructorSingle"
    ]
  },
  "io.swagger:swagger-annotations": {
    "enunciate": [
      "TestEnunciateIDLModule#testAgainstFullAPI"
    ]
  },
  "commons-collections:commons-collections": {
    "enunciate": [
      "TestDocsModule#collapseTypeHierarchy",
      "TestDocsModule#defaultConfig",
      "TestEnunciateIDLModule#testAgainstFullAPI"
    ]
  },
  "io.grpc:grpc-core": {
    "reactive-grpc": [
      "TestSuite",
      "TestSuite#optional_spec104_mustSignalOnErrorWhenFails",
      "TestSuite#optional_spec105_emptyStreamMustTerminateBySignallingOnComplete",
      "TestSuite#optional_spec111_maySupportMultiSubscribe",
      "TestSuite#optional_spec111_multicast_mustProduceTheSameElementsInTheSameSequenceToAllOfItsSubscribersWhenRequestingManyUpfront",
      "TestSuite#optional_spec111_multicast_mustProduceTheSameElementsInTheSameSequenceToAllOfItsSubscribersWhenRequestingManyUpfrontAndCompleteAsExpected",
      "TestSuite#optional_spec111_multicast_mustProduceTheSameElementsInTheSameSequenceToAllOfItsSubscribersWhenRequestingOneByOne",
      "TestSuite#optional_spec111_registeredSubscribersMustReceiveOnNextOrOnCompleteSignals",
      "TestSuite#optional_spec309_requestNegativeNumberMaySignalIllegalArgumentExceptionWithSpecificMessage",
      "TestSuite#required_createPublisher1MustProduceAStreamOfExactly1Element",
      "TestSuite#required_createPublisher3MustProduceAStreamOfExactly3Elements",
      "TestSuite#required_spec101_subscriptionRequestMustResultInTheCorrectNumberOfProducedElements",
      "TestSuite#required_spec102_maySignalLessThanRequestedAndTerminateSubscription",
      "TestSuite#required_spec105_mustSignalOnCompleteWhenFiniteStreamTerminates",
      "TestSuite#required_spec107_mustNotEmitFurtherSignalsOnceOnCompleteHasBeenSignalled",
      "TestSuite#required_spec109_mayRejectCallsToSubscribeIfPublisherIsUnableOrUnwillingToServeThemRejectionMustTriggerOnErrorAfterOnSubscribe",
      "TestSuite#required_spec109_mustIssueOnSubscribeForNonNullSubscriber",
      "TestSuite#required_spec109_subscribeThrowNPEOnNullSubscriber",
      "TestSuite#required_spec302_mustAllowSynchronousRequestCallsFromOnNextAndOnSubscribe",
      "TestSuite#required_spec303_mustNotAllowUnboundedRecursion",
      "TestSuite#required_spec306_afterSubscriptionIsCancelledRequestMustBeNops",
      "TestSuite#required_spec307_afterSubscriptionIsCancelledAdditionalCancelationsMustBeNops",
      "TestSuite#required_spec309_requestNegativeNumberMustSignalIllegalArgumentException",
      "TestSuite#required_spec309_requestZeroMustSignalIllegalArgumentException",
      "TestSuite#required_spec312_cancelMustMakeThePublisherToEventuallyStopSignaling",
      "TestSuite#required_spec313_cancelMustMakeThePublisherEventuallyDropAllReferencesToTheSubscriber",
      "TestSuite#required_spec317_mustNotSignalOnErrorWhenPendingAboveLongMaxValue",
      "TestSuite#required_spec317_mustSupportACumulativePendingElementCountUpToLongMaxValue",
      "TestSuite#required_spec317_mustSupportAPendingElementCountUpToLongMaxValue",
      "TestSuite#stochastic_spec103_mustSignalOnMethodsSequentially"
    ]
  },
  "org.apache.httpcomponents:httpcore": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes"
    ]
  },
  "org.apache.curator:curator-client": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta"
    ]
  },
  "org.glassfish.jersey.inject:jersey-hk2": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert"
    ]
  },
  "org.apache.hbase:hbase-client": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert"
    ]
  },
  "org.apache.curator:curator-x-discovery": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval"
    ]
  },
  "org.glassfish.jersey.core:jersey-common": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta"
    ]
  },
  "org.apache.derby:derbyclient": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta"
    ]
  },
  "org.apache.zookeeper:zookeeper": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser"
    ]
  },
  "com.googlecode.concurrent-trees:concurrent-trees": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval"
    ]
  },
  "org.quartz-scheduler:quartz-jobs": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged"
    ]
  },
  "com.google.inject.extensions:guice-persist": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta"
    ]
  },
  "org.eclipse.persistence:eclipselink": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta"
    ]
  },
  "net.openhft:zero-allocation-hashing": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts"
    ]
  },
  "io.jsonwebtoken:jjwt": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert"
    ]
  },
  "com.fasterxml.jackson.core:jackson-annotations": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts"
    ]
  },
  "org.antlr:ST4": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner"
    ]
  },
  "org.quartz-scheduler:quartz": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser"
    ]
  },
  "org.hbase:asynchbase": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta"
    ]
  },
  "org.elasticsearch.client:rest": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged"
    ]
  },
  "org.apache.kafka:kafka_2.10": {
    "Argus": [
      "AbstractSchemaServiceTest#testPutNothingCached",
      "AbstractSchemaServiceTest#testPutEverythingCached",
      "AbstractSchemaServiceTest#testNumHoursUntilNextFlushBloomFilter",
      "AbstractSchemaServiceTest#testPutPartialCached",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndInertiaOne",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForMoreThanOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStampsReturnNull",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_Scenario1",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTime",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenOneDatapointAndZeroInertia",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeriesMultipleTriggers",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ClearNotification",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_OnCooldown",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_AlertWithMultipleMetricsNotificationSentForEach",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWehnNoDatapoints",
      "DefaultAlertServiceTest#testExecuteScheduledAlerts_ForOneTimeSeries",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps2",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps3",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps4",
      "DefaultAlertServiceTest#testGetTriggerFiredDatapointTimeWhenMissingTimeStamps5",
      "SystemConfiguratorTest#testLifecycle",
      "WardenServiceTest#testAssertSubsystemUsePermitted_AdminUser",
      "WardenServiceTest#testServiceIsSingleton",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
      "WardenServiceTest#testEnableWarden",
      "WardenServiceTest#testSuspendAdminUser",
      "WardenServiceTest#testAssertSubsystemUsePermitted_ExpiredSuspension",
      "WardenServiceTest#testSuspendUser",
      "WardenServiceTest#testDisableWarden",
      "WardenServiceTest#testModifyPolicyCounterEnablesAlert",
      "WardenServiceTest#testSubSystemSuspensionLevels",
      "WardenServiceTest#testAssertSubsystemUsePermitted_NoSuspension",
      "WardenServiceTest#testUpdatePolicyCounterEnablesAlert",
      "WardenServiceTest#testWardenDashboard",
      "WardenServiceTest#testWardenAlertUsesUpdatedPolicyLimitForUser",
      "NamespaceServiceTest#testUserIsPermitted",
      "NamespaceServiceTest#testCreateNamespace",
      "NamespaceServiceTest#testFindNamespaceByPrimaryKey",
      "NamespaceServiceTest#testAdditionalUserIsPermitted",
      "NamespaceServiceTest#testNamespaceUnique",
      "NamespaceServiceTest#testAddAdditionalUsersToNamespace",
      "GlobalInterlockServiceTest#testObtainReleaseLock",
      "GlobalInterlockServiceTest#testObtainOnExpiredScheduleLock",
      "GlobalInterlockServiceTest#testLockExclusivity",
      "GlobalInterlockServiceTest#testObtainRefreshLock",
      "GlobalInterlockServiceTest#testReleaseNonexistentScheduleLock",
      "AlertServiceTest#testFindSharedAlertsByOwner",
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#testUpdateNotification",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#testAlertDelete",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testfindAlertsByOwner",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindAlertByNameAndOwner",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#findAlertsModifiedAfterDate",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testAlertDeleteCreateAnotherAlertWithSameName",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner",
      "AlertServiceTest#testFindAlertsByOwnerPaged",
      "AlertServiceTest#testCountPrivateAlertsForPrivilegedUser",
      "AlertServiceTest#testCountSharedAlertsMetaPaged",
      "AlertServiceTest#testFindPrivateAlertsPagedForNonPrivilegedUser",
      "AlertServiceTest#testAlertsCountContext",
      "AlertServiceTest#testCountAlertsByOwner",
      "AlertServiceTest#testfindAlertsByOwnerMeta",
      "AlertServiceTest#testDeletedTriggersInNotifications",
      "AlertServiceTest#testAlertEnqueue",
      "DashboardServiceTest#testFindSharedDashboardsByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsByOwner",
      "DashboardServiceTest#testFindDashboardsMetaByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwnerAndByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMetaByOwner",
      "DashboardServiceTest#testFindDashboardsMeta",
      "DashboardServiceTest#testDashboard_FindShareDelete",
      "DashboardServiceTest#testFindDashboardsByOwnerMeta",
      "DashboardServiceTest#testFindSharedDashboardsMetaByVersion",
      "DashboardServiceTest#testFindDashboardsByOwnerMetaAndByVersion",
      "DashboardServiceTest#testDashboardCrud",
      "DashboardServiceTest#testDashboard_FindShareDeleteByVersion",
      "DashboardServiceTest#testFindSharedDashboardsMeta",
      "ManagementServiceTest#testPrivilegeGrant",
      "AuditServiceTest#testUpdateAudit",
      "AuditServiceTest#testFindAll",
      "AuditServiceTest#testCreateAudit",
      "AuditServiceTest#testFindByMessage",
      "AuditServiceTest#testFindByJPAEntity",
      "AuditServiceTest#testFindByHostName",
      "OAuthServiceTest#testAcceptOauthModifiedParams",
      "OAuthServiceTest#testAcceptOauth",
      "OAuthServiceTest#testCreateAuthorizationCode",
      "OAuthServiceTest#testAcceptOauthInvalidParams",
      "SchedulingServiceTest#testAlertSchedulingWithGlobalInterlock",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinMaxDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinSumDownsamplerWithTag",
      "MetricFederationTest#testEndPointFederationForkJoinMinDownsampler",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsamplerWithNoTag",
      "MetricFederationTest#testEndPointFederationForkJoinCountDownsampler",
      "MetricFederationTest#testTimeFederationFork",
      "MonitorServiceTest#testAlertsCreatedOnStartMonitoring",
      "MonitorServiceTest#testConcurrentUpdates",
      "MonitorServiceTest#test_getCounterFromMetricName",
      "MonitorServiceTest#testServiceIsSingleton",
      "MonitorServiceTest#testEnableDisableMonitoring",
      "MonitorServiceTest#test_MonitoringDashboardNotNull",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithDownsampling",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags",
      "DefaultDiscoveryServiceTest#testWildcardQueriesNoMatch",
      "DefaultDiscoveryServiceTest#testNonWildcardQuery",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchExceedingLimit",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchMultipleTags1",
      "DefaultDiscoveryServiceTest#testWildcardQueriesMatchWithinLimit",
      "UserServiceTest#testDefaultUserExistence",
      "UserServiceTest#testAdminUserExistence",
      "UserServiceTest#testUserCrud",
      "UserServiceTest#testUniqueUserCount",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricTagvRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
      "ElasticSearchSchemaServiceTest#testGetUniqueUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutCreateUsingScopeAndMetricSchemaIndex",
      "ElasticSearchSchemaServiceTest#testPutUpdateUsingScopeAndMetricSchemaIndex",
      "ChartServiceTest#testDeleteChartById",
      "ChartServiceTest#testDeleteChart",
      "ChartServiceTest#testGetChartsForEntity",
      "ChartServiceTest#testCreateChart",
      "ChartServiceTest#testGetChartByPrimaryKey",
      "ChartServiceTest#testGetChartsByOwner",
      "CallbackServiceTest#testCallbackNotifier",
      "MQServiceTest#testServiceIsSingleton",
      "MQServiceTest#testBulkPutAndGetMessages",
      "MQServiceTest#testPutAndBulkGetMessages",
      "MQServiceTest#testPutAndBulkGetMessagesMultiThredaing",
      "AbstractTSDBServiceTest#testCyclingIterator",
      "NotifierTest#testUpdatingTriggerName",
      "NotifierTest#testDBNotifier",
      "NotifierTest#testAbsoluteTimeStampsInExpression",
      "NotifierTest#testTemplateNaming",
      "CachedDiscoveryServiceTest#testWildcardExpansionWithinLimit",
      "CachedDiscoveryServiceTest#testWildcardExpansionExceedingLimit"
    ]
  },
  "com.101tec:zkclient": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange"
    ]
  },
  "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta"
    ]
  },
  "org.hibernate:hibernate-jpamodelgen": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged",
      "AlertServiceTest#testCountPrivateAlertsForNonPrivilegedUser",
      "AlertServiceTest#testFindPrivateAlertsPagedForPrivilegedUser",
      "AlertServiceTest#testFindSharedAlertsMetaByOwner"
    ]
  },
  "net.sf.jopt-simple:jopt-simple": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged"
    ]
  },
  "com.github.brandtg:stl-java": {
    "Argus": [
      "AlertServiceTest#testFindAllAlertsMeta",
      "AlertServiceTest#findAlertsInRange",
      "AlertServiceTest#findFullAlertObjectRetrieval",
      "AlertServiceTest#testDeleteAlert",
      "AlertServiceTest#testSharedAlertWhenOneSharedAlert",
      "AlertServiceTest#testAlertSerDes",
      "AlertServiceTest#testUpdateAlert",
      "AlertServiceTest#testSharedAlertWhenTwoSharedAlert",
      "AlertServiceTest#testFindSharedAlertsMeta",
      "AlertServiceTest#findAllAlerts",
      "AlertServiceTest#testFindSharedAlertsMetaPaged"
    ]
  }
}