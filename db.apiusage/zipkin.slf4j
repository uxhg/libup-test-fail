zipkin2.collector.Collector.handleError(Throwable,Supplier,Callback)	org.slf4j.Logger.debug(String,Throwable)
zipkin2.collector.Collector.handleError(Throwable,Supplier,Callback)	org.slf4j.Logger.isDebugEnabled()
zipkin2.collector.Collector.newBuilder(Class)	org.slf4j.LoggerFactory.getLogger(String)
zipkin2.collector.CollectorTest.acceptSpans_emptyMessageOk()	uk.org.lidalia.slf4jtest.TestLogger.getLoggingEvents()
zipkin2.collector.CollectorTest.acceptSpans_jsonV2()	uk.org.lidalia.slf4jtest.TestLogger.getLoggingEvents()
zipkin2.collector.CollectorTest.accept_storageError()	org.slf4j.LoggerFactory.getLogger(String)
zipkin2.collector.CollectorTest.assertDebugLogIs(String)	uk.org.lidalia.slf4jtest.TestLogger.getLoggingEvents()
zipkin2.collector.CollectorTest.CollectorTest()	uk.org.lidalia.slf4jtest.TestLoggerFactory.getTestLogger(String)
zipkin2.collector.CollectorTest.setup()	uk.org.lidalia.slf4jtest.TestLogger.clearAll()
zipkin2.collector.CollectorTest.unsampledSpansArentStored()	org.slf4j.LoggerFactory.getLogger(String)
zipkin2.collector.CollectorTest.unsampledSpansArentStored()	uk.org.lidalia.slf4jtest.TestLogger.getLoggingEvents()
zipkin2.collector.kafka.KafkaCollector.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.collector.kafka.KafkaCollectorWorker.run()	org.slf4j.Logger.debug(String)
zipkin2.collector.kafka.KafkaCollectorWorker.run()	org.slf4j.Logger.debug(String,Object)
zipkin2.collector.kafka.KafkaCollectorWorker.run()	org.slf4j.Logger.warn(String,Throwable)
zipkin2.collector.kafka.KafkaCollectorWorker.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.collector.kafka.KafkaExtension.beforeAll(ExtensionContext)	org.slf4j.Logger.info(String)
zipkin2.collector.kafka.KafkaExtension.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.collector.rabbitmq.RabbitMQExtension.beforeAll(ExtensionContext)	org.slf4j.Logger.info(String)
zipkin2.collector.rabbitmq.RabbitMQExtension.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.collector.scribe.generated.Scribe.AsyncProcessor.Log.1.onComplete(ResultCode)	org.slf4j.Logger.error(String,Throwable)
zipkin2.collector.scribe.generated.Scribe.AsyncProcessor.Log.1.onError(Exception)	org.slf4j.Logger.error(String,Throwable)
zipkin2.collector.scribe.generated.Scribe.AsyncProcessor.static {...}	org.slf4j.LoggerFactory.getLogger(String)
zipkin2.collector.scribe.generated.Scribe.Processor.static {...}	org.slf4j.LoggerFactory.getLogger(String)
zipkin2.collector.scribe.ScribeInboundHandler.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.elasticsearch.integration.ElasticsearchExtension.beforeAll(ExtensionContext)	org.slf4j.Logger.info(String)
zipkin2.elasticsearch.integration.ElasticsearchExtension.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.elasticsearch.integration.ITElasticsearchStorage.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.elasticsearch.integration.ITElasticsearchStorage.testUsageOfDeprecatedFeatures()	org.slf4j.Logger.warn(String)
zipkin2.junit.ZipkinRuleTest.static {...}	org.slf4j.bridge.SLF4JBridgeHandler.install()
zipkin2.junit.ZipkinRuleTest.static {...}	org.slf4j.bridge.SLF4JBridgeHandler.removeHandlersForRootLogger()
zipkin2.server.internal.BodyIsExceptionMessage.handleException(ServiceRequestContext,HttpRequest,Throwable)	org.slf4j.Logger.warn(String,Throwable)
zipkin2.server.internal.BodyIsExceptionMessage.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration.currentTraceContext()	brave.context.slf4j.MDCScopeDecorator.get()
zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader.run()	org.slf4j.Logger.error(String,Throwable)
zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.server.internal.elasticsearch.InitialEndpointSupplier.get()	org.slf4j.Logger.warn(String,Object)
zipkin2.server.internal.elasticsearch.InitialEndpointSupplier.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.server.internal.elasticsearch.ITElasticsearchHealthCheck.healthyThenNotHealthyThenHealthy()	org.slf4j.Logger.info(String)
zipkin2.server.internal.elasticsearch.ITElasticsearchHealthCheck.setUp()	org.slf4j.Logger.info(String,Object,Object)
zipkin2.server.internal.elasticsearch.ITElasticsearchHealthCheck.static {...}	org.slf4j.LoggerFactory.getLogger(String)
zipkin2.server.internal.ZipkinActuatorImporter.initialize(GenericApplicationContext)	org.slf4j.Logger.debug(String)
zipkin2.server.internal.ZipkinActuatorImporter.initialize(GenericApplicationContext)	org.slf4j.Logger.debug(String,Throwable)
zipkin2.server.internal.ZipkinActuatorImporter.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.server.internal.ZipkinHttpCollector.maybeLog(String,ServiceRequestContext,AggregatedHttpRequest)	org.slf4j.Logger.debug(String,Object[])
zipkin2.server.internal.ZipkinHttpCollector.maybeLog(String,ServiceRequestContext,AggregatedHttpRequest)	org.slf4j.Logger.isDebugEnabled()
zipkin2.server.internal.ZipkinHttpCollector.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.server.internal.ZipkinModuleImporter.initialize(GenericApplicationContext)	org.slf4j.Logger.debug(String)
zipkin2.server.internal.ZipkinModuleImporter.initialize(GenericApplicationContext)	org.slf4j.Logger.debug(String,Throwable)
zipkin2.server.internal.ZipkinModuleImporter.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.storage.cassandra.CassandraSpanStore.initialiseSelectTraceIdsFromSpan(CqlSession)	org.slf4j.Logger.warn(String)
zipkin2.storage.cassandra.CassandraSpanStore.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.storage.cassandra.CassandraStorageExtension.beforeAll(ExtensionContext)	org.slf4j.Logger.info(String)
zipkin2.storage.cassandra.CassandraStorageExtension.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.storage.cassandra.CassandraUtil.inetAddressOrNull(String,byte[])	org.slf4j.Logger.debug(String,Object,Object)
zipkin2.storage.cassandra.CassandraUtil.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.storage.cassandra.DefaultSessionFactory.create(CassandraStorage)	org.slf4j.Logger.debug(String,Object)
zipkin2.storage.cassandra.DefaultSessionFactory.initializeUDTs(CqlSession,String)	org.slf4j.Logger.debug(String,Object)
zipkin2.storage.cassandra.DefaultSessionFactory.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.storage.cassandra.internal.SessionBuilder.buildSession(String,String,Map,AuthProvider,boolean)	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.storage.cassandra.internal.SessionBuilder.buildSession(String,String,Map,AuthProvider,boolean)	org.slf4j.Logger.isDebugEnabled()
zipkin2.storage.cassandra.internal.SessionBuilder.buildSession(String,String,Map,AuthProvider,boolean)	org.slf4j.Logger.isTraceEnabled()
zipkin2.storage.cassandra.Schema.ensureExists(String,boolean,CqlSession)	org.slf4j.Logger.info(String,Object)
zipkin2.storage.cassandra.Schema.ensureExists(String,boolean,CqlSession)	org.slf4j.Logger.info(String,Object,Object)
zipkin2.storage.cassandra.Schema.readMetadata(CqlSession,String)	org.slf4j.Logger.warn(String)
zipkin2.storage.cassandra.Schema.readMetadata(CqlSession,String)	org.slf4j.Logger.warn(String,Object)
zipkin2.storage.cassandra.Schema.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin2.storage.mysql.v1.MySQLExtension.beforeAll(ExtensionContext)	org.slf4j.Logger.info(String)
zipkin2.storage.mysql.v1.MySQLExtension.static {...}	org.slf4j.LoggerFactory.getLogger(Class)
zipkin.server.ZipkinServer.static {...}	org.slf4j.bridge.SLF4JBridgeHandler.install()
zipkin.server.ZipkinServer.static {...}	org.slf4j.bridge.SLF4JBridgeHandler.removeHandlersForRootLogger()
