"source","lib1","sink","lib2"
"getMessage(...)","org.openscoring.common.SimpleResponse","warn(...)","org.slf4j.Logger"
"new (...)","<anonymous class>","execute(...)","org.openscoring.client.ModelApplication"
"getDelimiterChar(...)","org.openscoring.client.CsvEvaluator","queryParam(...)","javax.ws.rs.client.WebTarget"
"getQuoteChar(...)","org.openscoring.client.CsvEvaluator","queryParam(...)","javax.ws.rs.client.WebTarget"
"getInput(...)","org.openscoring.client.CsvEvaluator","new FileInputStream(...)","java.io.FileInputStream"
"getOutput(...)","org.openscoring.client.CsvEvaluator","new FileOutputStream(...)","java.io.FileOutputStream"
"ensureSuffix(...)","org.openscoring.client.CsvEvaluator","target(...)","javax.ws.rs.client.Client"
"getModel(...)","org.openscoring.client.ModelApplication","target(...)","javax.ws.rs.client.Client"
"deploy(...)","org.openscoring.client.Deployer","info(...)","org.slf4j.Logger"
"getMessage(...)","org.openscoring.common.SimpleResponse","warn(...)","org.slf4j.Logger"
"new (...)","<anonymous class>","execute(...)","org.openscoring.client.ModelApplication"
"getFile(...)","org.openscoring.client.Deployer","new FileInputStream(...)","java.io.FileInputStream"
"getContentEncoding(...)","org.openscoring.client.Deployer","new Variant(...)","javax.ws.rs.core.Variant"
"execute(...)","org.openscoring.client.ModelApplication","info(...)","org.slf4j.Logger"
"getDir(...)","org.openscoring.client.DirectoryDeployer","newDirectoryStream(...)","java.nio.file.Files"
"getModelCollection(...)","org.openscoring.client.DirectoryDeployer","target(...)","javax.ws.rs.client.Client"
"getModelCollection(...)","org.openscoring.client.DirectoryDeployer","target(...)","javax.ws.rs.client.Client"
"evaluate(...)","org.openscoring.client.Evaluator","info(...)","org.slf4j.Logger"
"getMessage(...)","org.openscoring.common.SimpleResponse","warn(...)","org.slf4j.Logger"
"new (...)","<anonymous class>","execute(...)","org.openscoring.client.ModelApplication"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","json(...)","javax.ws.rs.client.Entity<>"
"getArguments(...)","org.openscoring.client.Evaluator","setArguments(...)","org.openscoring.common.EvaluationRequest"
"execute(...)","org.openscoring.client.ModelApplication","info(...)","org.slf4j.Logger"
"new ClientConfig(...)","org.glassfish.jersey.client.ClientConfig","newClient(...)","javax.ws.rs.client.ClientBuilder"
"getURI(...)","org.openscoring.client.ModelApplication","target(...)","javax.ws.rs.client.Client"
"perform(...)","org.openscoring.client.Operation<V>","info(...)","org.slf4j.Logger"
"perform(...)","org.openscoring.client.Operation<V>","info(...)","org.slf4j.Logger"
"getModel(...)","org.openscoring.client.ModelApplication","target(...)","javax.ws.rs.client.Client"
"new ObjectMapper(...)","com.fasterxml.jackson.databind.ObjectMapper","setMapper(...)","org.openscoring.client.ObjectMapperProvider"
"new PMMLModule(...)","org.jpmml.model.PMMLModule","registerModule(...)","com.fasterxml.jackson.databind.ObjectMapper"
"getMessage(...)","org.openscoring.common.SimpleResponse","warn(...)","org.slf4j.Logger"
"new (...)","<anonymous class>","execute(...)","org.openscoring.client.ModelApplication"
"getRequests(...)","org.openscoring.common.BatchEvaluationRequest","add(...)","org.jpmml.model.ToStringHelper"
"getId(...)","org.openscoring.common.BatchEvaluationRequest","add(...)","org.jpmml.model.ToStringHelper"
"getResponses(...)","org.openscoring.common.BatchEvaluationResponse","add(...)","org.jpmml.model.ToStringHelper"
"getId(...)","org.openscoring.common.BatchEvaluationResponse","add(...)","org.jpmml.model.ToStringHelper"
"getResponses(...)","org.openscoring.common.BatchModelResponse","add(...)","org.jpmml.model.ToStringHelper"
"getArguments(...)","org.openscoring.common.EvaluationRequest","add(...)","org.jpmml.model.ToStringHelper"
"getId(...)","org.openscoring.common.EvaluationRequest","add(...)","org.jpmml.model.ToStringHelper"
"getResult(...)","org.openscoring.common.EvaluationResponse","add(...)","org.jpmml.model.ToStringHelper"
"getId(...)","org.openscoring.common.EvaluationResponse","add(...)","org.jpmml.model.ToStringHelper"
"getValues(...)","org.openscoring.common.Field","add(...)","org.jpmml.model.ToStringHelper"
"getOpType(...)","org.openscoring.common.Field","add(...)","org.jpmml.model.ToStringHelper"
"getDataType(...)","org.openscoring.common.Field","add(...)","org.jpmml.model.ToStringHelper"
"getName(...)","org.openscoring.common.Field","add(...)","org.jpmml.model.ToStringHelper"
"getId(...)","org.openscoring.common.Field","add(...)","org.jpmml.model.ToStringHelper"
"getTimers(...)","org.openscoring.common.MetricSetResponse","add(...)","org.jpmml.model.ToStringHelper"
"getMeters(...)","org.openscoring.common.MetricSetResponse","add(...)","org.jpmml.model.ToStringHelper"
"getHistograms(...)","org.openscoring.common.MetricSetResponse","add(...)","org.jpmml.model.ToStringHelper"
"getGauges(...)","org.openscoring.common.MetricSetResponse","add(...)","org.jpmml.model.ToStringHelper"
"getCounters(...)","org.openscoring.common.MetricSetResponse","add(...)","org.jpmml.model.ToStringHelper"
"getVersion(...)","org.openscoring.common.MetricSetResponse","add(...)","org.jpmml.model.ToStringHelper"
"getSchema(...)","org.openscoring.common.ModelResponse","add(...)","org.jpmml.model.ToStringHelper"
"getProperties(...)","org.openscoring.common.ModelResponse","add(...)","org.jpmml.model.ToStringHelper"
"getSummary(...)","org.openscoring.common.ModelResponse","add(...)","org.jpmml.model.ToStringHelper"
"getMiningFunction(...)","org.openscoring.common.ModelResponse","add(...)","org.jpmml.model.ToStringHelper"
"getId(...)","org.openscoring.common.ModelResponse","add(...)","org.jpmml.model.ToStringHelper"
"getMessage(...)","org.openscoring.common.SimpleResponse","add(...)","org.jpmml.model.ToStringHelper"
"new Openscoring(...)","org.openscoring.service.Openscoring","new ServletContainer(...)","org.glassfish.jersey.servlet.ServletContainer"
"new ServletContainer(...)","org.glassfish.jersey.servlet.ServletContainer","new ServletHolder(...)","org.eclipse.jetty.servlet.ServletHolder"
"createFormat(...)","org.openscoring.service.CsvUtil","new CsvMapReader(...)","org.supercsv.io.CsvMapReader"
"createFormat(...)","org.openscoring.service.CsvUtil","new CsvMapWriter(...)","org.supercsv.io.CsvMapWriter"
"decodeDelimiter(...)","org.openscoring.service.CsvUtil","new IllegalArgumentException(...)","java.lang.IllegalArgumentException"
"decodeQuote(...)","org.openscoring.service.CsvUtil","new IllegalArgumentException(...)","java.lang.IllegalArgumentException"
"createFormat(...)","org.openscoring.service.CsvUtil","new (...)","<anonymous class>"
"createFormat(...)","org.openscoring.service.CsvUtil","super(...)","org.supercsv.io.CsvListReader"
"createFormat(...)","org.openscoring.service.CsvUtil","new CsvMapReader(...)","org.supercsv.io.CsvMapReader"
"createFormat(...)","org.openscoring.service.CsvUtil","new CsvMapWriter(...)","org.supercsv.io.CsvMapWriter"
"new DefaultCsvEncoder(...)","org.supercsv.encoder.DefaultCsvEncoder","useEncoder(...)","org.supercsv.prefs.CsvPreference$Builder"
"build(...)","org.supercsv.prefs.CsvPreference$Builder","checkFormat(...)","org.openscoring.service.CsvUtil"
"build(...)","org.supercsv.prefs.CsvPreference$Builder","new (...)","<anonymous class>"
"build(...)","org.supercsv.prefs.CsvPreference$Builder","super(...)","org.supercsv.io.CsvListReader"
"build(...)","org.supercsv.prefs.CsvPreference$Builder","new CsvMapReader(...)","org.supercsv.io.CsvMapReader"
"build(...)","org.supercsv.prefs.CsvPreference$Builder","new CsvMapWriter(...)","org.supercsv.io.CsvMapWriter"
"build(...)","org.supercsv.prefs.CsvPreference$Builder","writeTable(...)","org.openscoring.service.CsvUtil"
"build(...)","org.supercsv.prefs.CsvPreference$Builder","readTable(...)","org.openscoring.service.CsvUtil"
"getHeader(...)","org.supercsv.io.AbstractCsvReader","equalsIgnoreCase(...)","java.lang.String"
"getHeader(...)","org.supercsv.io.AbstractCsvReader","setId(...)","org.openscoring.service.CsvUtil$Table<EvaluationRequest>"
"getHeader(...)","org.supercsv.io.AbstractCsvReader","remove(...)","java.util.Map<String,String>"
"getHeader(...)","org.supercsv.io.AbstractCsvReader","singletonMap(...)","java.util.Collections"
"getHeader(...)","org.supercsv.io.AbstractCsvReader","setId(...)","org.openscoring.service.CsvUtil$Table<EvaluationResponse>"
"read(...)","org.supercsv.io.CsvMapReader","setId(...)","org.openscoring.common.EvaluationRequest"
"read(...)","org.supercsv.io.CsvMapReader","new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest"
"read(...)","org.supercsv.io.CsvMapReader","setArguments(...)","org.openscoring.common.EvaluationRequest"
"getId(...)","org.openscoring.service.CsvUtil$Table<EvaluationRequest>","remove(...)","java.util.Map<String,String>"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","add(...)","java.util.List<EvaluationRequest>"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","setRows(...)","org.openscoring.service.CsvUtil$Table<EvaluationRequest>"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","doEvaluate(...)","org.openscoring.service.ModelResource"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","aggregateRequests(...)","org.openscoring.service.ModelResource"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","evaluate(...)","org.openscoring.service.ModelResource"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","info(...)","org.slf4j.Logger"
"getResult(...)","org.openscoring.common.EvaluationResponse","join(...)","org.openscoring.service.CsvUtil"
"getResult(...)","org.openscoring.common.EvaluationResponse","write(...)","org.supercsv.io.CsvMapWriter"
"getResult(...)","org.openscoring.common.EvaluationResponse","putAll(...)","java.util.Map<String,Object>"
"getId(...)","org.openscoring.common.EvaluationResponse","join(...)","org.openscoring.service.CsvUtil"
"getId(...)","org.openscoring.common.EvaluationResponse","singletonMap(...)","java.util.Collections"
"getId(...)","org.openscoring.common.EvaluationResponse","new LinkedHashMap<String,Object>(...)","java.util.LinkedHashMap<String,Object>"
"join(...)","org.openscoring.service.CsvUtil","write(...)","org.supercsv.io.CsvMapWriter"
"getId(...)","org.openscoring.service.CsvUtil$Table<EvaluationResponse>","singletonMap(...)","java.util.Collections"
"createNamePrefix(...)","org.openscoring.service.ModelResource","startsWith(...)","java.lang.String"
"createNamePrefix(...)","org.openscoring.service.ModelResource","startsWith(...)","java.lang.String"
"encodeSchema(...)","org.openscoring.service.ModelUtil","setSchema(...)","org.openscoring.common.ModelResponse"
"getMiningFunction(...)","org.jpmml.evaluator.Evaluator","setMiningFunction(...)","org.openscoring.common.ModelResponse"
"getSummary(...)","org.jpmml.evaluator.Evaluator","setSummary(...)","org.openscoring.common.ModelResponse"
"new VisitorBattery(...)","org.jpmml.model.VisitorBattery","setVisitors(...)","org.jpmml.evaluator.LoadingModelEvaluatorBuilder"
"getStringList(...)","com.typesafe.config.Config","loadClass(...)","org.openscoring.service.ModelRegistry"
"getStringList(...)","com.typesafe.config.Config","forName(...)","java.lang.Class<>"
"getString(...)","com.typesafe.config.Config","loadClass(...)","org.openscoring.service.ModelRegistry"
"getString(...)","com.typesafe.config.Config","forName(...)","java.lang.Class<>"
"getString(...)","com.typesafe.config.Config","loadClass(...)","org.openscoring.service.ModelRegistry"
"getString(...)","com.typesafe.config.Config","forName(...)","java.lang.Class<>"
"new (...)","<anonymous class>","setResultMapper(...)","org.jpmml.evaluator.ModelEvaluatorBuilder"
"getSchema(...)","org.jpmml.model.JAXBUtil","setSchema(...)","org.jpmml.evaluator.LoadingModelEvaluatorBuilder"
"new SimpleValidationEventHandler(...)","org.openscoring.service.ModelRegistry$SimpleValidationEventHandler","setValidationEventHandler(...)","org.jpmml.evaluator.LoadingModelEvaluatorBuilder"
"loadClass(...)","org.openscoring.service.ModelRegistry","isAssignableFrom(...)","java.lang.Class<Visitor>"
"loadClass(...)","org.openscoring.service.ModelRegistry","isAssignableFrom(...)","java.lang.Class<VisitorBattery>"
"newInstance(...)","org.openscoring.service.ModelRegistry","addAll(...)","java.util.ArrayList<Class<? extends Visitor>>"
"newInstance(...)","org.openscoring.service.ModelRegistry","setVisitors(...)","org.jpmml.evaluator.LoadingModelEvaluatorBuilder"
"newInstance(...)","org.openscoring.service.ModelRegistry","setModelEvaluatorFactory(...)","org.jpmml.evaluator.ModelEvaluatorBuilder"
"newInstance(...)","org.openscoring.service.ModelRegistry","setValueFactoryFactory(...)","org.jpmml.evaluator.ModelEvaluatorBuilder"
"new HashingInputStream(...)","com.google.common.hash.HashingInputStream","load(...)","org.jpmml.evaluator.LoadingModelEvaluatorBuilder"
"build(...)","org.jpmml.evaluator.ModelEvaluatorBuilder","setEvaluator(...)","org.openscoring.service.Model"
"build(...)","org.jpmml.evaluator.ModelEvaluatorBuilder","encodeSchema(...)","org.openscoring.service.ModelUtil"
"build(...)","org.jpmml.evaluator.ModelEvaluatorBuilder","new Model(...)","org.openscoring.service.Model"
"new Model(...)","org.openscoring.service.Model","putIfAbsent(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"new Model(...)","org.openscoring.service.Model","requireNonNull(...)","java.util.Objects"
"new Model(...)","org.openscoring.service.Model","replace(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"new Model(...)","org.openscoring.service.Model","requireNonNull(...)","java.util.Objects"
"getCount(...)","com.google.common.io.CountingInputStream","put(...)","java.util.Map<String,Object>"
"getCount(...)","com.google.common.io.CountingInputStream","putProperty(...)","org.openscoring.service.Model"
"toString(...)","com.google.common.hash.HashCode","put(...)","java.util.Map<String,Object>"
"toString(...)","com.google.common.hash.HashCode","putProperty(...)","org.openscoring.service.Model"
"getPMML(...)","org.jpmml.evaluator.HasPMML","marshal(...)","javax.xml.bind.Marshaller"
"get(...)","org.openscoring.service.ModelRegistry","replace(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"get(...)","org.openscoring.service.ModelRegistry","remove(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"create(...)","org.dmg.pmml.FieldName","put(...)","java.util.Map<FieldName,V>"
"new (...)","<anonymous class>","sort(...)","java.util.Collections"
"getId(...)","org.openscoring.common.ModelResponse","compareToIgnoreCase(...)","java.lang.String"
"createModelResponse(...)","org.openscoring.service.ModelResource","add(...)","java.util.List<ModelResponse>"
"createModelResponse(...)","org.openscoring.service.ModelResource","sort(...)","java.util.Collections"
"createModelResponse(...)","org.openscoring.service.ModelResource","setResponses(...)","org.openscoring.common.BatchModelResponse"
"get(...)","org.openscoring.service.ModelRegistry","replace(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"createModelResponse(...)","org.openscoring.service.ModelResource","entity(...)","javax.ws.rs.core.Response$ResponseBuilder"
"createModelResponse(...)","org.openscoring.service.ModelResource","entity(...)","javax.ws.rs.core.Response$ResponseBuilder"
"load(...)","org.openscoring.service.ModelRegistry","putIfAbsent(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"load(...)","org.openscoring.service.ModelRegistry","requireNonNull(...)","java.util.Objects"
"load(...)","org.openscoring.service.ModelRegistry","replace(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"load(...)","org.openscoring.service.ModelRegistry","requireNonNull(...)","java.util.Objects"
"new (...)","<anonymous class>","entity(...)","javax.ws.rs.core.Response$ResponseBuilder"
"new (...)","<anonymous class>","new StreamResult(...)","javax.xml.transform.stream.StreamResult"
"new (...)","<anonymous class>","store(...)","org.openscoring.service.ModelRegistry"
"getRequests(...)","org.openscoring.common.BatchEvaluationRequest","doEvaluate(...)","org.openscoring.service.ModelResource"
"getRequests(...)","org.openscoring.common.BatchEvaluationRequest","aggregateRequests(...)","org.openscoring.service.ModelResource"
"getRequests(...)","org.openscoring.common.BatchEvaluationRequest","evaluate(...)","org.openscoring.service.ModelResource"
"getRequests(...)","org.openscoring.common.BatchEvaluationRequest","info(...)","org.slf4j.Logger"
"doEvaluate(...)","org.openscoring.service.ModelResource","setResponses(...)","org.openscoring.common.BatchEvaluationResponse"
"or(...)","com.google.common.base.Optional<Charset>","doEvaluateCsv(...)","org.openscoring.service.ModelResource"
"or(...)","com.google.common.base.Optional<Charset>","new OutputStreamWriter(...)","java.io.OutputStreamWriter"
"or(...)","com.google.common.base.Optional<Charset>","new InputStreamReader(...)","java.io.InputStreamReader"
"getRows(...)","org.openscoring.service.CsvUtil$Table<EvaluationRequest>","info(...)","org.slf4j.Logger"
"new (...)","<anonymous class>","entity(...)","javax.ws.rs.core.Response$ResponseBuilder"
"new (...)","<anonymous class>","new CsvMapWriter(...)","org.supercsv.io.CsvMapWriter"
"new (...)","<anonymous class>","writeTable(...)","org.openscoring.service.CsvUtil"
"new (...)","<anonymous class>","checkFormat(...)","org.openscoring.service.CsvUtil"
"new (...)","<anonymous class>","super(...)","org.supercsv.io.CsvListReader"
"new (...)","<anonymous class>","new CsvMapReader(...)","org.supercsv.io.CsvMapReader"
"new (...)","<anonymous class>","getFormat(...)","org.openscoring.service.CsvUtil"
"new (...)","<anonymous class>","readTable(...)","org.openscoring.service.CsvUtil"
"getFormat(...)","org.openscoring.service.CsvUtil","new CsvMapReader(...)","org.supercsv.io.CsvMapReader"
"getFormat(...)","org.openscoring.service.CsvUtil","new CsvMapWriter(...)","org.supercsv.io.CsvMapWriter"
"getFormat(...)","org.openscoring.service.CsvUtil","new CsvMapReader(...)","org.supercsv.io.CsvMapReader"
"getFormat(...)","org.openscoring.service.CsvUtil","new CsvMapWriter(...)","org.supercsv.io.CsvMapWriter"
"getId(...)","org.openscoring.service.CsvUtil$Table<EvaluationRequest>","singletonMap(...)","java.util.Collections"
"createName(...)","org.openscoring.service.ModelResource","timer(...)","com.codahale.metrics.MetricRegistry"
"createName(...)","org.openscoring.service.ModelResource","counter(...)","com.codahale.metrics.MetricRegistry"
"aggregateRequests(...)","org.openscoring.service.ModelResource","info(...)","org.slf4j.Logger"
"getName(...)","org.jpmml.evaluator.ModelField","aggregateRequests(...)","org.openscoring.service.ModelResource"
"evaluate(...)","org.openscoring.service.ModelResource","setResponses(...)","org.openscoring.common.BatchEvaluationResponse"
"evaluate(...)","org.openscoring.service.ModelResource","add(...)","java.util.List<EvaluationResponse>"
"new EvaluationResponse(...)","org.openscoring.common.EvaluationResponse","setRows(...)","org.openscoring.service.CsvUtil$Table<EvaluationResponse>"
"new EvaluationResponse(...)","org.openscoring.common.EvaluationResponse","add(...)","java.util.List<EvaluationResponse>"
"get(...)","org.openscoring.service.ModelRegistry","remove(...)","java.util.concurrent.ConcurrentMap<String,Model>"
"createNamePrefix(...)","org.openscoring.service.ModelResource","startsWith(...)","java.lang.String"
"new (...)","<anonymous class>","removeMatching(...)","com.codahale.metrics.MetricRegistry"
"name(...)","com.codahale.metrics.MetricRegistry","doMetrics(...)","org.openscoring.service.MetricResource"
"name(...)","com.codahale.metrics.MetricRegistry","doMetrics(...)","org.openscoring.service.MetricResource"
"name(...)","com.codahale.metrics.MetricRegistry","startsWith(...)","java.lang.String"
"name(...)","com.codahale.metrics.MetricRegistry","startsWith(...)","java.lang.String"
"createName(...)","org.openscoring.service.ModelResource","startsWith(...)","java.lang.String"
"createName(...)","org.openscoring.service.ModelResource","startsWith(...)","java.lang.String"
"getValue(...)","org.dmg.pmml.FieldName","get(...)","java.util.Map<String,?>"
"getValue(...)","org.dmg.pmml.FieldName","containsKey(...)","java.util.Map<String,?>"
"getValue(...)","org.dmg.pmml.FieldName","warn(...)","org.slf4j.Logger"
"getValue(...)","org.dmg.pmml.FieldName","put(...)","java.util.Map<String,Object>"
"getArguments(...)","org.openscoring.common.EvaluationRequest","get(...)","java.util.Map<Object,ListMultimap<String,Object>>"
"getArguments(...)","org.openscoring.common.EvaluationRequest","put(...)","java.util.Map<Object,ListMultimap<String,Object>>"
"getArguments(...)","org.openscoring.common.EvaluationRequest","put(...)","com.google.common.collect.Multimap<String,Object>"
"getId(...)","org.openscoring.common.EvaluationRequest","warn(...)","org.slf4j.Logger"
"create(...)","com.google.common.collect.ArrayListMultimap<>","put(...)","java.util.Map<Object,ListMultimap<String,Object>>"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","evaluate(...)","org.openscoring.service.ModelResource"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","add(...)","java.util.List<EvaluationRequest>"
"new EvaluationRequest(...)","org.openscoring.common.EvaluationRequest","info(...)","org.slf4j.Logger"
"asMap(...)","com.google.common.collect.ListMultimap<String,Object>","putAll(...)","java.util.Map<String,Object>"
"asMap(...)","com.google.common.collect.ListMultimap<String,Object>","setArguments(...)","org.openscoring.common.EvaluationRequest"
"getArguments(...)","org.openscoring.common.EvaluationRequest","prepare(...)","org.jpmml.evaluator.InputField"
"new EvaluationResponse(...)","org.openscoring.common.EvaluationResponse","setRows(...)","org.openscoring.service.CsvUtil$Table<EvaluationResponse>"
"new EvaluationResponse(...)","org.openscoring.common.EvaluationResponse","add(...)","java.util.List<EvaluationResponse>"
"new EvaluationResponse(...)","org.openscoring.common.EvaluationResponse","info(...)","org.slf4j.Logger"
"getId(...)","org.openscoring.common.EvaluationRequest","debug(...)","org.slf4j.Logger"
"evaluate(...)","org.jpmml.evaluator.Evaluator","replaceNullKey(...)","org.openscoring.service.ModelResource"
"evaluate(...)","org.jpmml.evaluator.Evaluator","debug(...)","org.slf4j.Logger"
"evaluate(...)","org.jpmml.evaluator.Evaluator","new LinkedHashMap<FieldName,V>(...)","java.util.LinkedHashMap<FieldName,V>"
"getName(...)","org.jpmml.evaluator.ModelField","put(...)","java.util.Map<FieldName,FieldValue>"
"getValue(...)","org.dmg.pmml.FieldName","get(...)","java.util.Map<String,?>"
"getValue(...)","org.dmg.pmml.FieldName","containsKey(...)","java.util.Map<String,?>"
"getValue(...)","org.dmg.pmml.FieldName","warn(...)","org.slf4j.Logger"
"prepare(...)","org.jpmml.evaluator.InputField","put(...)","java.util.Map<FieldName,FieldValue>"
"prepare(...)","org.jpmml.evaluator.InputField","debug(...)","org.slf4j.Logger"
"getId(...)","org.openscoring.common.EvaluationRequest","warn(...)","org.slf4j.Logger"
"getId(...)","org.openscoring.common.EvaluationRequest","debug(...)","org.slf4j.Logger"
"replaceNullKey(...)","org.openscoring.service.ModelResource","debug(...)","org.slf4j.Logger"
"replaceNullKey(...)","org.openscoring.service.ModelResource","decode(...)","org.jpmml.evaluator.EvaluatorUtil"
"getId(...)","org.openscoring.common.EvaluationResponse","debug(...)","org.slf4j.Logger"
"decode(...)","org.jpmml.evaluator.EvaluatorUtil","setResult(...)","org.openscoring.common.EvaluationResponse"
"new ModelResponse(...)","org.openscoring.common.ModelResponse","add(...)","java.util.List<ModelResponse>"
"new ModelResponse(...)","org.openscoring.common.ModelResponse","sort(...)","java.util.Collections"
"new ModelResponse(...)","org.openscoring.common.ModelResponse","entity(...)","javax.ws.rs.core.Response$ResponseBuilder"
"new ModelResponse(...)","org.openscoring.common.ModelResponse","entity(...)","javax.ws.rs.core.Response$ResponseBuilder"
"getMiningFunction(...)","org.openscoring.service.Model","setMiningFunction(...)","org.openscoring.common.ModelResponse"
"getSummary(...)","org.openscoring.service.Model","setSummary(...)","org.openscoring.common.ModelResponse"
"getProperties(...)","org.openscoring.service.Model","setProperties(...)","org.openscoring.common.ModelResponse"
"getSchema(...)","org.openscoring.service.Model","setSchema(...)","org.openscoring.common.ModelResponse"
"getInputFields(...)","org.jpmml.evaluator.HasInputFields","encodeModelFields(...)","org.openscoring.service.ModelUtil"
"getTargetFields(...)","org.jpmml.evaluator.HasResultFields","encodeModelFields(...)","org.openscoring.service.ModelUtil"
"getOutputFields(...)","org.jpmml.evaluator.HasResultFields","encodeModelFields(...)","org.openscoring.service.ModelUtil"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","setSchema(...)","org.openscoring.common.ModelResponse"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","put(...)","java.util.Map<String,List<Field>>"
"getGroupFields(...)","org.jpmml.evaluator.HasGroupFields","encodeModelFields(...)","org.openscoring.service.ModelUtil"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","setSchema(...)","org.openscoring.common.ModelResponse"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","put(...)","java.util.Map<String,List<Field>>"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","setSchema(...)","org.openscoring.common.ModelResponse"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","put(...)","java.util.Map<String,List<Field>>"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","setSchema(...)","org.openscoring.common.ModelResponse"
"encodeModelFields(...)","org.openscoring.service.ModelUtil","put(...)","java.util.Map<String,List<Field>>"
"new (...)","<anonymous class>","map(...)","java.util.stream.Stream<? extends ModelField>"
"getField(...)","org.jpmml.evaluator.ModelField","encodeContinuousDomain(...)","org.openscoring.service.ModelUtil"
"getField(...)","org.jpmml.evaluator.ModelField","encodeDiscreteDomain(...)","org.openscoring.service.ModelUtil"
"getValue(...)","org.dmg.pmml.FieldName","setId(...)","org.openscoring.common.Field"
"getValue(...)","org.dmg.pmml.FieldName","new Field(...)","org.openscoring.common.Field"
"getDisplayName(...)","org.jpmml.evaluator.ModelField","setName(...)","org.openscoring.common.Field"
"getOpType(...)","org.jpmml.evaluator.ModelField","setOpType(...)","org.openscoring.common.Field"
"getDataType(...)","org.jpmml.evaluator.ModelField","setDataType(...)","org.openscoring.common.Field"
"encodeContinuousDomain(...)","org.openscoring.service.ModelUtil","addAll(...)","java.util.List<String>"
"encodeContinuousDomain(...)","org.openscoring.service.ModelUtil","setValues(...)","org.openscoring.common.Field"
"encodeDiscreteDomain(...)","org.openscoring.service.ModelUtil","addAll(...)","java.util.List<String>"
"encodeDiscreteDomain(...)","org.openscoring.service.ModelUtil","setValues(...)","org.openscoring.common.Field"
"new (...)","<anonymous class>","map(...)","java.util.stream.Stream<Interval>"
"...::...","<anonymous class>","map(...)","java.util.stream.Stream<Value>"
"...->...","<anonymous class>","filter(...)","java.util.stream.Stream<Value>"
"getProperty(...)","org.dmg.pmml.Value","equals(...)","java.lang.Enum<Property>"
"new ObjectMapper(...)","com.fasterxml.jackson.databind.ObjectMapper","setMapper(...)","org.openscoring.service.ObjectMapperProvider"
"new MetricsModule(...)","com.codahale.metrics.json.MetricsModule","registerModule(...)","com.fasterxml.jackson.databind.ObjectMapper"
"new PMMLModule(...)","org.jpmml.model.PMMLModule","registerModule(...)","com.fasterxml.jackson.databind.ObjectMapper"
"load(...)","com.typesafe.config.ConfigFactory","bind(...)","org.glassfish.hk2.utilities.binding.AbstractBinder"
"new (...)","<anonymous class>","register(...)","org.glassfish.jersey.server.ResourceConfig"
"getStringList(...)","com.typesafe.config.Config","forName(...)","java.lang.Class<>"
"new SimpleResponse(...)","org.openscoring.common.SimpleResponse","entity(...)","javax.ws.rs.core.Response$ResponseBuilder"
"discoverLocalAddresses(...)","org.openscoring.service.filters.NetworkSecurityContextFilter","copyOf(...)","com.google.common.collect.ImmutableSet<>"
"getStringList(...)","com.typesafe.config.Config","copyOf(...)","com.google.common.collect.ImmutableSet<>"
"new (...)","<anonymous class>","setSecurityContext(...)","javax.ws.rs.container.ContainerRequestContext"
"discoverNameAndVersion(...)","org.openscoring.service.filters.ServiceIdentificationFilter","add(...)","java.util.List<Object>"
